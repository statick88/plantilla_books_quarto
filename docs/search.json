[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Django y React 2024",
    "section": "",
    "text": "Bienvenido",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bienvenido</span>"
    ]
  },
  {
    "objectID": "index.html#de-qué-trata-este-curso",
    "href": "index.html#de-qué-trata-este-curso",
    "title": "Django y React 2024",
    "section": "¿De qué trata este curso?",
    "text": "¿De qué trata este curso?\nEste curso completo me llevará desde los fundamentos básicos de la programación hasta la construcción de aplicaciones prácticas utilizando los frameworks Django y la biblioteca de React.\nA través de una combinación de teoría y ejercicios prácticos, me sumergiré en los conceptos esenciales del desarrollo web y avanzaré hacia la creación de proyectos del mundo real.\nDesde la configuración del entorno de desarrollo hasta la construcción de una aplicación web de pila completa, este curso me proporcionará una comprensión sólida y experiencia práctica con Django y React.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bienvenido</span>"
    ]
  },
  {
    "objectID": "index.html#para-quién-es-este-curso",
    "href": "index.html#para-quién-es-este-curso",
    "title": "Django y React 2024",
    "section": "¿Para quién es este curso?",
    "text": "¿Para quién es este curso?\nEste curso está diseñado para principiantes y aquellos con poca o ninguna experiencia en programación.\nYa sea que sea un estudiante curioso, un profesional que busca cambiar de carrera o simplemente alguien que quiere aprender desarrollo web, este curso es para usted. Desde adolescentes hasta adultos, todos son bienvenidos a participar y explorar el emocionante mundo del desarrollo web con Django y React.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bienvenido</span>"
    ]
  },
  {
    "objectID": "index.html#cómo-contribuir",
    "href": "index.html#cómo-contribuir",
    "title": "Django y React 2024",
    "section": "¿Cómo contribuir?",
    "text": "¿Cómo contribuir?\nValoramos su contribución a este curso. Si encuentra algún error, desea sugerir mejoras o agregar contenido adicional, me encantaría saber de usted.\nPuede contribuir a través del repositorio en linea, donde puede compartir sus comentarios y sugerencias.\nJuntos, podemos mejorar continuamente este recurso educativo para beneficiar a la comunidad de estudiantes y entusiastas de la programación.\nEste ebook ha sido creado con el objetivo de proporcionar acceso gratuito y universal al conocimiento.\nEstará disponible en línea para cualquier persona, sin importar su ubicación o circunstancias, para acceder y aprender a su propio ritmo.\nPuede descargarlo en formato PDF, Epub o verlo en línea en cualquier momento y lugar.\nEsperamos que disfrute este emocionante viaje de aprendizaje y descubrimiento en el mundo del desarrollo web con Django y React!",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bienvenido</span>"
    ]
  },
  {
    "objectID": "unidades/unidad1/1_git_y_github.html",
    "href": "unidades/unidad1/1_git_y_github.html",
    "title": "Git y GitHub 🕹️",
    "section": "",
    "text": "¿Qué es Git y GitHub? 🕹️\nGit y GitHub son herramientas ampliamente utilizadas en el desarrollo de software para el control de versiones y la colaboración en proyectos.\nGit es un sistema de control de versiones distribuido que permite realizar un seguimiento de los cambios en el código fuente durante el desarrollo de software. Fue creado por Linus Torvalds en 2005 y se utiliza mediante la línea de comandos o a través de interfaces gráficas de usuario.\nGitHub, por otro lado, es una plataforma de alojamiento de repositorios Git en la nube. Proporciona un entorno colaborativo donde los desarrolladores pueden compartir y trabajar en proyectos de software de forma conjunta. Además, ofrece características adicionales como seguimiento de problemas, solicitudes de extracción y despliegue continuo.\nEn este tutorial, aprenderás los conceptos básicos de Git y GitHub, así como su uso en un proyecto de software real.",
    "crumbs": [
      "Unidad 1: Introducción a Python",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Git y GitHub 🕹️</span>"
    ]
  },
  {
    "objectID": "unidades/unidad1/1_git_y_github.html#quiénes-utilizan-git",
    "href": "unidades/unidad1/1_git_y_github.html#quiénes-utilizan-git",
    "title": "Git y GitHub 🕹️",
    "section": "¿Quiénes utilizan Git? 🌍",
    "text": "¿Quiénes utilizan Git? 🌍",
    "crumbs": [
      "Unidad 1: Introducción a Python",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Git y GitHub 🕹️</span>"
    ]
  },
  {
    "objectID": "unidades/unidad1/1_git_y_github.html#cómo-se-utiliza-git",
    "href": "unidades/unidad1/1_git_y_github.html#cómo-se-utiliza-git",
    "title": "Git y GitHub 🕹️",
    "section": "¿Cómo se utiliza Git? 💻",
    "text": "¿Cómo se utiliza Git? 💻\n\n\n\nGit en Terminal\n\n\nSe utiliza mediante la línea de comandos o a través de interfaces gráficas de usuario. Proporciona comandos para realizar operaciones como:\n\nInicializar un repositorio,\nRealizar cambios,\nRevisar historial,\nFusionar ramas,\nEntre otros.",
    "crumbs": [
      "Unidad 1: Introducción a Python",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Git y GitHub 🕹️</span>"
    ]
  },
  {
    "objectID": "unidades/unidad1/1_git_y_github.html#para-qué-sirve-git",
    "href": "unidades/unidad1/1_git_y_github.html#para-qué-sirve-git",
    "title": "Git y GitHub 🕹️",
    "section": "¿Para qué sirve Git? 📝",
    "text": "¿Para qué sirve Git? 📝\n\n\n\n\nSeguimiento de Cambios con Git\n\n\n\nSirve para realizar un seguimiento de los cambios en el código fuente, coordinar el trabajo entre varios desarrolladores, revertir cambios no deseados y mantener un historial completo de todas las modificaciones realizadas en un proyecto.",
    "crumbs": [
      "Unidad 1: Introducción a Python",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Git y GitHub 🕹️</span>"
    ]
  },
  {
    "objectID": "unidades/unidad1/1_git_y_github.html#por-qué-utilizar-git",
    "href": "unidades/unidad1/1_git_y_github.html#por-qué-utilizar-git",
    "title": "Git y GitHub 🕹️",
    "section": "¿Por qué utilizar Git? 🤔",
    "text": "¿Por qué utilizar Git? 🤔\n\n\n\n\nVentajas de Git\n\n\n\nOfrece varias ventajas, como:\n\nLa capacidad de trabajar de forma distribuida\nLa gestión eficiente de ramas para desarrollar nuevas funcionalidades\nCorregir errores sin afectar la rama principal\nLa posibilidad de colaborar de forma efectiva con otros desarrolladores.",
    "crumbs": [
      "Unidad 1: Introducción a Python",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Git y GitHub 🕹️</span>"
    ]
  },
  {
    "objectID": "unidades/unidad1/1_git_y_github.html#dónde-puedo-utilizar-git",
    "href": "unidades/unidad1/1_git_y_github.html#dónde-puedo-utilizar-git",
    "title": "Git y GitHub 🕹️",
    "section": "¿Dónde puedo utilizar Git? 🌐",
    "text": "¿Dónde puedo utilizar Git? 🌐\n\n\n\n\nGit en Diferentes Sistemas Operativos\n\n\n\nPuede ser utilizado en cualquier sistema operativo, incluyendo Windows, macOS y Linux. Además, es compatible con una amplia variedad de plataformas de alojamiento de repositorios, siendo GitHub una de las más populares.",
    "crumbs": [
      "Unidad 1: Introducción a Python",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Git y GitHub 🕹️</span>"
    ]
  },
  {
    "objectID": "unidades/unidad1/1_git_y_github.html#pasos-básicos",
    "href": "unidades/unidad1/1_git_y_github.html#pasos-básicos",
    "title": "Git y GitHub 🕹️",
    "section": "Pasos Básicos 📝",
    "text": "Pasos Básicos 📝",
    "crumbs": [
      "Unidad 1: Introducción a Python",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Git y GitHub 🕹️</span>"
    ]
  },
  {
    "objectID": "unidades/unidad1/1_git_y_github.html#instalación-de-visual-studio-code",
    "href": "unidades/unidad1/1_git_y_github.html#instalación-de-visual-studio-code",
    "title": "Git y GitHub 🕹️",
    "section": "Instalación de Visual Studio Code 📥",
    "text": "Instalación de Visual Studio Code 📥\n\n\n\nVisual Studio Code",
    "crumbs": [
      "Unidad 1: Introducción a Python",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Git y GitHub 🕹️</span>"
    ]
  },
  {
    "objectID": "unidades/unidad1/1_git_y_github.html#introducción",
    "href": "unidades/unidad1/1_git_y_github.html#introducción",
    "title": "Git y GitHub 🕹️",
    "section": "Introducción",
    "text": "Introducción",
    "crumbs": [
      "Unidad 1: Introducción a Python",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Git y GitHub 🕹️</span>"
    ]
  },
  {
    "objectID": "unidades/unidad1/1_git_y_github.html#sección-1-modificar-archivos-en-el-repositorio",
    "href": "unidades/unidad1/1_git_y_github.html#sección-1-modificar-archivos-en-el-repositorio",
    "title": "Git y GitHub 🕹️",
    "section": "Sección 1: Modificar Archivos en el Repositorio",
    "text": "Sección 1: Modificar Archivos en el Repositorio\nEn esta sección, aprenderemos cómo realizar cambios en nuestros archivos y reflejarlos en Git.",
    "crumbs": [
      "Unidad 1: Introducción a Python",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Git y GitHub 🕹️</span>"
    ]
  },
  {
    "objectID": "unidades/unidad1/1_git_y_github.html#mover-cambios-de-local-a-staging",
    "href": "unidades/unidad1/1_git_y_github.html#mover-cambios-de-local-a-staging",
    "title": "Git y GitHub 🕹️",
    "section": "Mover Cambios de Local a Staging:",
    "text": "Mover Cambios de Local a Staging:\n\nAbre el archivo hello_world.py en Visual Studio Code.\nModifica el mensaje de bienvenida a “Bienvenido” en lugar de “Bienvenio”.\nGuarda los cambios y abre una terminal en Visual Studio Code.\n\nHemos corregido un error en nuestro archivo y queremos reflejarlo en Git.\ndef welcome_message():\n    name = input(\"Ingrese su nombre: \")\n    print(\"Bienvenido,\", name, \"al curso de Django y React!\")\n\nif __name__ == \"__main__\":\n    welcome_message()",
    "crumbs": [
      "Unidad 1: Introducción a Python",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Git y GitHub 🕹️</span>"
    ]
  },
  {
    "objectID": "unidades/unidad1/1_git_y_github.html#agregar-cambios-de-local-a-staging",
    "href": "unidades/unidad1/1_git_y_github.html#agregar-cambios-de-local-a-staging",
    "title": "Git y GitHub 🕹️",
    "section": "Agregar Cambios de Local a Staging:",
    "text": "Agregar Cambios de Local a Staging:\ngit add hello_world.py\nHemos añadido los cambios al área de preparación y están listos para ser confirmados en el próximo commit.",
    "crumbs": [
      "Unidad 1: Introducción a Python",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Git y GitHub 🕹️</span>"
    ]
  },
  {
    "objectID": "unidades/unidad1/1_git_y_github.html#sección-2-confirmar-cambios-en-un-commit",
    "href": "unidades/unidad1/1_git_y_github.html#sección-2-confirmar-cambios-en-un-commit",
    "title": "Git y GitHub 🕹️",
    "section": "Sección 2: Confirmar Cambios en un Commit",
    "text": "Sección 2: Confirmar Cambios en un Commit\nEn esta sección, aprenderemos cómo confirmar los cambios en un commit y guardarlos de manera permanente en nuestro repositorio.",
    "crumbs": [
      "Unidad 1: Introducción a Python",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Git y GitHub 🕹️</span>"
    ]
  },
  {
    "objectID": "unidades/unidad1/1_git_y_github.html#mover-cambios-de-staging-a-commit",
    "href": "unidades/unidad1/1_git_y_github.html#mover-cambios-de-staging-a-commit",
    "title": "Git y GitHub 🕹️",
    "section": "Mover Cambios de Staging a Commit:",
    "text": "Mover Cambios de Staging a Commit:\ngit commit -m \"Corregir mensaje de bienvenida\"\nHemos confirmado los cambios en un commit con un mensaje descriptivo.",
    "crumbs": [
      "Unidad 1: Introducción a Python",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Git y GitHub 🕹️</span>"
    ]
  },
  {
    "objectID": "unidades/unidad1/1_git_y_github.html#sección-3-creación-y-fusión-de-ramas",
    "href": "unidades/unidad1/1_git_y_github.html#sección-3-creación-y-fusión-de-ramas",
    "title": "Git y GitHub 🕹️",
    "section": "Sección 3: Creación y Fusión de Ramas",
    "text": "Sección 3: Creación y Fusión de Ramas\nEn esta sección, aprenderemos cómo crear y fusionar ramas en Git para desarrollar nuevas funcionalidades de forma aislada.",
    "crumbs": [
      "Unidad 1: Introducción a Python",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Git y GitHub 🕹️</span>"
    ]
  },
  {
    "objectID": "unidades/unidad1/1_git_y_github.html#crear-una-nueva-rama",
    "href": "unidades/unidad1/1_git_y_github.html#crear-una-nueva-rama",
    "title": "Git y GitHub 🕹️",
    "section": "Crear una Nueva Rama:",
    "text": "Crear una Nueva Rama:\ngit branch feature\nHemos creado una nueva rama llamada “feature” para desarrollar una nueva funcionalidad.",
    "crumbs": [
      "Unidad 1: Introducción a Python",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Git y GitHub 🕹️</span>"
    ]
  },
  {
    "objectID": "unidades/unidad1/1_git_y_github.html#implementar-funcionalidades-en-la-rama",
    "href": "unidades/unidad1/1_git_y_github.html#implementar-funcionalidades-en-la-rama",
    "title": "Git y GitHub 🕹️",
    "section": "Implementar Funcionalidades en la Rama:",
    "text": "Implementar Funcionalidades en la Rama:\n\nAbre el archivo hello_world.py en Visual Studio Code.\nAñade una nueva función para mostrar un mensaje de despedida.\nGuarda los cambios y abre una terminal en Visual Studio Code.\nAñade los cambios al área de preparación y confírmalos en un commit.\nCambia a la rama principal con git checkout main.",
    "crumbs": [
      "Unidad 1: Introducción a Python",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Git y GitHub 🕹️</span>"
    ]
  },
  {
    "objectID": "unidades/unidad1/1_git_y_github.html#fusionar-ramas-con-la-rama-principal",
    "href": "unidades/unidad1/1_git_y_github.html#fusionar-ramas-con-la-rama-principal",
    "title": "Git y GitHub 🕹️",
    "section": "Fusionar Ramas con la Rama Principal:",
    "text": "Fusionar Ramas con la Rama Principal:\ngit merge feature\nHemos fusionado la rama “feature” con la rama principal y añadido la nueva funcionalidad al proyecto.",
    "crumbs": [
      "Unidad 1: Introducción a Python",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Git y GitHub 🕹️</span>"
    ]
  },
  {
    "objectID": "unidades/unidad1/1_git_y_github.html#sección-4-revertir-cambios-en-un-archivo",
    "href": "unidades/unidad1/1_git_y_github.html#sección-4-revertir-cambios-en-un-archivo",
    "title": "Git y GitHub 🕹️",
    "section": "Sección 4: Revertir Cambios en un Archivo",
    "text": "Sección 4: Revertir Cambios en un Archivo\nEn esta sección, aprenderemos cómo revertir cambios en un archivo y deshacerlos en Git.",
    "crumbs": [
      "Unidad 1: Introducción a Python",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Git y GitHub 🕹️</span>"
    ]
  },
  {
    "objectID": "unidades/unidad1/1_git_y_github.html#revertir-cambios-en-un-archivo",
    "href": "unidades/unidad1/1_git_y_github.html#revertir-cambios-en-un-archivo",
    "title": "Git y GitHub 🕹️",
    "section": "Revertir Cambios en un Archivo:",
    "text": "Revertir Cambios en un Archivo:\ngit reset hello_world.py\nHemos revertido los cambios en el archivo hello_world.py y deshecho las modificaciones realizadas.",
    "crumbs": [
      "Unidad 1: Introducción a Python",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Git y GitHub 🕹️</span>"
    ]
  },
  {
    "objectID": "unidades/unidad1/1_git_y_github.html#conclusión",
    "href": "unidades/unidad1/1_git_y_github.html#conclusión",
    "title": "Git y GitHub 🕹️",
    "section": "Conclusión",
    "text": "Conclusión\nEn este tutorial, hemos aprendido a gestionar cambios en nuestro proyecto y moverlos entre diferentes estados en Git. Estos conceptos son fundamentales para trabajar de forma eficiente en proyectos de software y colaborar con otros desarrolladores.",
    "crumbs": [
      "Unidad 1: Introducción a Python",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Git y GitHub 🕹️</span>"
    ]
  },
  {
    "objectID": "unidades/unidad1/2_github_classroom.html",
    "href": "unidades/unidad1/2_github_classroom.html",
    "title": "GitHub Classroom 📒",
    "section": "",
    "text": "¿Qué es GitHub Classroom? 🤔",
    "crumbs": [
      "Unidad 1: Introducción a Python",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>GitHub Classroom 📒</span>"
    ]
  },
  {
    "objectID": "unidades/unidad1/2_github_classroom.html#qué-es-github-classroom",
    "href": "unidades/unidad1/2_github_classroom.html#qué-es-github-classroom",
    "title": "GitHub Classroom 📒",
    "section": "",
    "text": "Github Classroom Windows\n\n\n\n\nGitHub Classroom es una extensión de GitHub que permite a los profesores crear y gestionar asignaciones utilizando repositorios de GitHub. Proporciona una forma organizada y eficiente de distribuir tareas a los estudiantes, recopilar y revisar su trabajo, y proporcionar retroalimentación.\n\n\nFuncionalidades Principales ⚙️\n\nCreación de Asignaciones: Los profesores pueden crear tareas y asignaciones directamente desde GitHub Classroom, proporcionando instrucciones detalladas y estableciendo criterios de evaluación.\nDistribución Automatizada: Una vez que se crea una asignación, GitHub Classroom genera automáticamente repositorios privados para cada estudiante o equipo, basándose en una plantilla predefinida.\nSeguimiento de Progreso: Los profesores pueden realizar un seguimiento del progreso de los estudiantes y revisar sus contribuciones a través de solicitudes de extracción (pull requests) y comentarios en el código.\nRevisión y Retroalimentación: Los estudiantes envían sus trabajos a través de solicitudes de extracción, lo que permite a los profesores revisar y proporcionar retroalimentación específica sobre su código.",
    "crumbs": [
      "Unidad 1: Introducción a Python",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>GitHub Classroom 📒</span>"
    ]
  },
  {
    "objectID": "unidades/unidad1/2_github_classroom.html#ejemplo-práctico",
    "href": "unidades/unidad1/2_github_classroom.html#ejemplo-práctico",
    "title": "GitHub Classroom 📒",
    "section": "Ejemplo Práctico",
    "text": "Ejemplo Práctico\n\nCreación de una Asignación en GitHub Classroom 📒\n\nIniciar Sesión: Ingresa a GitHub Classroom con tu cuenta de GitHub y selecciona la opción para crear una nueva asignación.\n\n\n\n\n\nDefinir la Tarea: Proporciona instrucciones claras y detalladas sobre la tarea, incluyendo cualquier código base o recursos necesarios. Establece los criterios de evaluación para guiar a los estudiantes.\n\n\n\n\n\nConfigurar la Plantilla: Selecciona una plantilla de repositorio existente o crea una nueva plantilla que servirá como base para los repositorios de los estudiantes.\n\n\n\n\n\nDistribuir la Asignación: Una vez configurada la asignación, comparte el enlace generado con tus estudiantes para que puedan acceder a sus repositorios privados.",
    "crumbs": [
      "Unidad 1: Introducción a Python",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>GitHub Classroom 📒</span>"
    ]
  },
  {
    "objectID": "unidades/unidad1/2_github_classroom.html#trabajo-de-los-estudiantes",
    "href": "unidades/unidad1/2_github_classroom.html#trabajo-de-los-estudiantes",
    "title": "GitHub Classroom 📒",
    "section": "Trabajo de los Estudiantes 🧑‍💻",
    "text": "Trabajo de los Estudiantes 🧑‍💻\n\nAceptar la Asignación: Los estudiantes reciben el enlace de la asignación y aceptan la tarea, lo que les permite crear un repositorio privado basado en la plantilla proporcionada.\n\n\n\n\n\nActualizar el Navegador: Los estudiantes actualizan su navegador para ver el nuevo repositorio creado en su cuenta de GitHub.\n\n\n\n\n\nClonar el Repositorio: Los estudiantes clonan el repositorio asignado en su computadora local utilizando el enlace proporcionado.\n\n\n\n\n\nUtilizar el comando git clone: Aplique el comando git clone para clonar el repositorio en su computadora local.\ngit clone &lt;enlace-del-repositorio&gt;\n\n\n\n\n\nDesarrollar la Tarea: Los estudiantes trabajan en la tarea, realizando los cambios necesarios y realizando commits de manera regular para mantener un historial de su trabajo.\n\n\n\n\n\n\nTip\n\n\n\nPuedes probar el test incorporado con el comando pytest en la terminal, para verificar que el código cumple con los requerimientos\n\n\npytest\nUna vez desarrollado el código de acuerdo a la asignación en local deberían pasar el o los test\n\n\n\n\n\nEnviar la Solicitud de Extracción: Una vez completada la tarea, los estudiantes envían una solicitud de extracción desde su rama hacia la rama principal del repositorio, solicitando la revisión del profesor.\n\n\n\n\n\nUna vez realizado el push se envía al respositorio principal y se ejecutan los test en Github\n\n\n\n\n\n\nTip\n\n\n\nSe recomienda hacer las pruebas en local antes de enviar los cambios al respositorio en Github\n\n\n\n\n\n\n\nEste Action lo que hace es evaluar los cambios realizados\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nSe recomienda hacer las pruebas en local antes de enviar los cambios al respositorio en Github\n\n\n\nRevisión y Retroalimentación: Los profesores revisan las solicitudes de extracción, proporcionan comentarios sobre el código y evalúan el trabajo de los estudiantes según los criterios establecidos.\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nGitHub Classroom ofrece una manera eficiente y organizada de administrar tareas y asignaciones en entornos educativos, fomentando la colaboración, el aprendizaje y la retroalimentación efectiva entre profesores y estudiantes.",
    "crumbs": [
      "Unidad 1: Introducción a Python",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>GitHub Classroom 📒</span>"
    ]
  },
  {
    "objectID": "unidades/unidad1/3_docker.html",
    "href": "unidades/unidad1/3_docker.html",
    "title": "Docker 🐋",
    "section": "",
    "text": "Conceptos Básicos de Docker 📒",
    "crumbs": [
      "Unidad 1: Introducción a Python",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Docker 🐋</span>"
    ]
  },
  {
    "objectID": "unidades/unidad1/3_docker.html#imagen",
    "href": "unidades/unidad1/3_docker.html#imagen",
    "title": "Docker 🐋",
    "section": "Imagen",
    "text": "Imagen\ndocker pull python:3.9-slim\n\nUna imagen de Docker es un paquete de software ligero y portátil que incluye todo lo necesario para ejecutar una aplicación, incluidos el código, las bibliotecas y las dependencias. Las imágenes se utilizan como plantillas para crear contenedores.",
    "crumbs": [
      "Unidad 1: Introducción a Python",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Docker 🐋</span>"
    ]
  },
  {
    "objectID": "unidades/unidad1/3_docker.html#contenedor",
    "href": "unidades/unidad1/3_docker.html#contenedor",
    "title": "Docker 🐋",
    "section": "Contenedor 📦",
    "text": "Contenedor 📦\ndocker run -d -p 5000:5000 myapp\n\nUn contenedor de Docker es una instancia en tiempo de ejecución de una imagen de Docker. Los contenedores son entornos aislados que ejecutan aplicaciones de forma independiente y comparten recursos del sistema operativo subyacente. Cada contenedor está aislado del entorno de host y otros contenedores, lo que garantiza la consistencia y la portabilidad de las aplicaciones.",
    "crumbs": [
      "Unidad 1: Introducción a Python",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Docker 🐋</span>"
    ]
  },
  {
    "objectID": "unidades/unidad1/3_docker.html#dockerfile",
    "href": "unidades/unidad1/3_docker.html#dockerfile",
    "title": "Docker 🐋",
    "section": "Dockerfile 📘",
    "text": "Dockerfile 📘\n# Dockerfile\n# Define la imagen base\nFROM python:3.9-slim\n\n# Instala las dependencias necesarias\nRUN apt-get update && apt-get install -y \\\n    build-essential \\\n    libpq-dev \\\n    libffi-dev \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Establece el directorio de trabajo\nWORKDIR /app\n\n# Copia los archivos de la aplicación al contenedor\nCOPY . .\n\n# Instala las dependencias de Python\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Establece el comando por defecto para ejecutar la aplicación\nCMD [\"python\", \"app.py\"]\n\nUn Dockerfile es un archivo de texto que contiene instrucciones para construir una imagen de Docker. Especifica qué software se instalará en la imagen y cómo configurar el entorno de ejecución. Los Dockerfiles permiten a los desarrolladores definir de manera reproducible el entorno de ejecución de sus aplicaciones y automatizar el proceso de construcción de imágenes.",
    "crumbs": [
      "Unidad 1: Introducción a Python",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Docker 🐋</span>"
    ]
  },
  {
    "objectID": "unidades/unidad1/3_docker.html#docker-compose",
    "href": "unidades/unidad1/3_docker.html#docker-compose",
    "title": "Docker 🐋",
    "section": "Docker Compose 📙",
    "text": "Docker Compose 📙\n# docker-compose.yml\nversion: '3'\nservices:\n  web:\n    build: .\n    ports:\n      - \"5000:5000\"\n    volumes:\n      - .:/app\n    environment:\n      FLASK_ENV: development\n\nDocker Compose es una herramienta que permite definir y ejecutar aplicaciones Docker multi-contenedor. Permite gestionar la configuración de varios contenedores como un solo servicio, lo que facilita el despliegue y la gestión de aplicaciones complejas que constan de múltiples componentes.",
    "crumbs": [
      "Unidad 1: Introducción a Python",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Docker 🐋</span>"
    ]
  },
  {
    "objectID": "unidades/unidad1/3_docker.html#definir-un-dockerfile",
    "href": "unidades/unidad1/3_docker.html#definir-un-dockerfile",
    "title": "Docker 🐋",
    "section": "Definir un Dockerfile 📘",
    "text": "Definir un Dockerfile 📘\n# Dockerfile\n# Define la imagen base\nFROM python:3.9-slim\n\n# Instala las dependencias necesarias\nRUN apt-get update && apt-get install -y \\\n    build-essential \\\n    libpq-dev \\\n    libffi-dev \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Establece el directorio de trabajo\nWORKDIR /app\n\n# Copia los archivos de la aplicación al contenedor\nCOPY . .\n\n# Instala las dependencias de Python\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Establece el comando por defecto para ejecutar la aplicación\nCMD [\"python\", \"app.py\"]\n\nPara utilizar Docker, primero se crea un Dockerfile que especifica cómo construir la imagen de Docker, incluidas las dependencias y la configuración del entorno. El Dockerfile define las capas de la imagen y las instrucciones para configurar el entorno de ejecución de la aplicación.",
    "crumbs": [
      "Unidad 1: Introducción a Python",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Docker 🐋</span>"
    ]
  },
  {
    "objectID": "unidades/unidad1/3_docker.html#construir-la-imagen",
    "href": "unidades/unidad1/3_docker.html#construir-la-imagen",
    "title": "Docker 🐋",
    "section": "Construir la Imagen 💿",
    "text": "Construir la Imagen 💿\ndocker build -t myapp .\n\nUna vez que se tiene el Dockerfile, se utiliza el comando docker build para construir la imagen de Docker a partir del Dockerfile. Este comando lee las instrucciones del Dockerfile y crea una imagen en función de esas instrucciones. La imagen resultante se puede utilizar para crear y ejecutar contenedores.",
    "crumbs": [
      "Unidad 1: Introducción a Python",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Docker 🐋</span>"
    ]
  },
  {
    "objectID": "unidades/unidad1/3_docker.html#ejecutar-un-contenedor",
    "href": "unidades/unidad1/3_docker.html#ejecutar-un-contenedor",
    "title": "Docker 🐋",
    "section": "Ejecutar un Contenedor 🖥️",
    "text": "Ejecutar un Contenedor 🖥️\ndocker run -d -p 5000:5000 myapp\n\nDespués de construir la imagen, se ejecuta un contenedor utilizando el comando docker run, especificando la imagen que se utilizará y cualquier configuración adicional necesaria, como puertos expuestos, variables de entorno y volúmenes montados. El contenedor se ejecuta en un entorno aislado y se puede acceder a través de la red local o de Internet, según la configuración.",
    "crumbs": [
      "Unidad 1: Introducción a Python",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Docker 🐋</span>"
    ]
  },
  {
    "objectID": "unidades/unidad1/3_docker.html#gestionar-contenedores",
    "href": "unidades/unidad1/3_docker.html#gestionar-contenedores",
    "title": "Docker 🐋",
    "section": "Gestionar Contenedores 📦",
    "text": "Gestionar Contenedores 📦\ndocker ps\ndocker stop &lt;container_id&gt;\ndocker rm &lt;container_id&gt;\n\nDocker proporciona varios comandos para gestionar contenedores, como docker ps para ver contenedores en ejecución, docker stop para detener un contenedor y docker rm para eliminar un contenedor. Estos comandos permiten a los usuarios administrar y controlar el ciclo de vida de los contenedores de manera eficiente.",
    "crumbs": [
      "Unidad 1: Introducción a Python",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Docker 🐋</span>"
    ]
  },
  {
    "objectID": "unidades/unidad1/3_docker.html#docker-compose-1",
    "href": "unidades/unidad1/3_docker.html#docker-compose-1",
    "title": "Docker 🐋",
    "section": "Docker Compose 📙",
    "text": "Docker Compose 📙\n# docker-compose.yml\nversion: '3'\nservices:\n  web:\n    build: .\n    ports:\n      - \"5000:5000\"\n    volumes:\n      - .:/app\n    environment:\n      FLASK_ENV: development\n\nPara aplicaciones más complejas que requieren múltiples contenedores, se utiliza Docker Compose para definir y gestionar la configuración de los contenedores en un archivo YAML. Luego, se utiliza el comando docker-compose para gestionar los servicios definidos en el archivo YAML, lo que simplifica el despliegue y la gestión de aplicaciones multi-contenedor.",
    "crumbs": [
      "Unidad 1: Introducción a Python",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Docker 🐋</span>"
    ]
  },
  {
    "objectID": "unidades/unidad2/1_introduccion.html",
    "href": "unidades/unidad2/1_introduccion.html",
    "title": "Hola Mundo en Python",
    "section": "",
    "text": "Introdución 🫥\n\nEn este tutorial aprenderemos los conceptos básicos necesarios para configurar nuestro entorno de desarrollo y escribir código en Python. Comenzaremos con la instalación de Python en Windows y luego veremos cómo escribir y ejecutar nuestro primer programa en Python utilizando Visual Studio Code como nuestro editor de texto.\n\n\nPaso 1: Instalación de Python 🐍\nPara poder escribir y ejecutar programas en Python, primero necesitamos instalar Python en nuestra computadora. Python es un lenguaje de programación de alto nivel que es ampliamente utilizado en el desarrollo de aplicaciones web, desarrollo de software, análisis de datos, inteligencia artificial, etc.\n\n\n\n\n\n\nNote\n\n\n\nPython se puede instalar en Windows, Mac y Linux. En este tutorial, veremos cómo instalar Python en Windows.\n\n\n\n\nPaso 2: Instalación de Python en Windows 🪟\n\nDescargar Python\n\nPara instalar Python en Windows, primero necesitamos descargar el instalador de Python desde el sitio web oficial de Python. Para hacer esto, abra su navegador web y vaya a la página de descargas de Python en el siguiente enlace:\n\nhttps://www.python.org/downloads/\n\n\nEn la página de descargas, haga clic en el botón de descarga para la última versión de Python. En el momento de escribir este tutorial, la última versión de Python es 3.12.1\n\nExcelente, ahora que hemos descargado el instalador de Python, podemos continuar con la instalación de Python en Windows.\n\nInstalar Python\n\nUna vez que el instalador de Python se haya descargado, haga doble clic en el archivo de instalación para iniciar el proceso de instalación. Asegúrese de marcar la casilla que dice “Add Python 3.12 to PATH” antes de hacer clic en el botón “Install Now”.\n\n\n\nAhora que hemos instalado Python en nuestra computadora, podemos continuar con la configuración de nuestro entorno de desarrollo para escribir y ejecutar programas en Python.\n\nComprobar que tenemos instalado Python\n\nPara comprobar que Python se ha instalado correctamente en nuestra computadora, abra una ventana de comandos y escriba el siguiente comando:\npython --version\n\nImpresion de la versión de Python\n\nEste comando imprimirá la versión de Python que está instalada en su computadora. En mi caso, la versión de Python es 3.12.1.\n\n\n\n\n\nPaso 3: Crear nuestro primer “Hola Mundo” en Python 🗺️.\nAhora que hemos instalado Python en nuestra computadora, podemos comenzar a escribir y ejecutar programas en Python. Para hacer esto, necesitamos un editor de texto para escribir nuestro código y un intérprete de Python para ejecutar nuestro código.\nEn este tutorial, usaremos Visual Studio Code como nuestro editor de texto y el intérprete de Python que instalamos en el paso anterior.\n\nInstalar Visual Studio Code\n\nPara instalar Visual Studio Code, vaya al sitio web oficial de Visual Studio Code en el siguiente enlace:\n\nhttps://code.visualstudio.com/\n\n\n\n\nEn la página de descargas, haga clic en el botón de descarga para su sistema operativo. En el momento de escribir este tutorial, la última versión de Visual Studio Code es 1.85.2.\nUna vez que el instalador de Visual Studio Code se haya descargado, haga doble clic en el archivo de instalación para iniciar el proceso de instalación. Siga las instrucciones en pantalla para completar la instalación.\n\n\n\n\nCrear un nuevo archivo de Python\n\nPara crear un nuevo archivo de Python en Visual Studio Code, abra Visual Studio Code y haga clic en el botón “New File” en la barra de herramientas. Luego, escriba el siguiente código en el archivo:\nprint(\"Hola Mundo\")\n\nEste código imprimirá “Hola Mundo” en la consola.\n\n\n\n\n\nEjecutar el programa\n\nPara ejecutar el programa, haga clic en el botón “Run” en la barra de herramientas. Esto ejecutará el programa y mostrará “Hola Mundo” en la consola.\n\n\n\n\n¡Felicidades!\nAcabas de escribir y ejecutar tu primer programa en Python. Ahora que has configurado tu entorno de desarrollo y has escrito tu primer programa en Python, puedes comenzar a explorar el lenguaje de programación Python y aprender a escribir programas más complejos.",
    "crumbs": [
      "Unidad 2: Python Básico",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Hola Mundo en Python</span>"
    ]
  },
  {
    "objectID": "unidades/unidad2/2_variable_y_control_de_flujo.html",
    "href": "unidades/unidad2/2_variable_y_control_de_flujo.html",
    "title": "Sintaxis Básica",
    "section": "",
    "text": "Comentarios\nLos comentarios en python se escriben con el símbolo #.",
    "crumbs": [
      "Unidad 2: Python Básico",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Sintaxis Básica</span>"
    ]
  },
  {
    "objectID": "unidades/unidad2/2_variable_y_control_de_flujo.html#objetivo",
    "href": "unidades/unidad2/2_variable_y_control_de_flujo.html#objetivo",
    "title": "Sintaxis Básica",
    "section": "Objetivo",
    "text": "Objetivo\nEl objetivo de este repositorio es proporcionar una serie de ejercicios de Python básico para que los principiantes en Python puedan practicar y adquirir experiencia en la sintaxis y estructura de Python.",
    "crumbs": [
      "Unidad 2: Python Básico",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Sintaxis Básica</span>"
    ]
  },
  {
    "objectID": "unidades/unidad2/2_variable_y_control_de_flujo.html#qué-debes-hacer",
    "href": "unidades/unidad2/2_variable_y_control_de_flujo.html#qué-debes-hacer",
    "title": "Sintaxis Básica",
    "section": "¿Qué debes hacer?",
    "text": "¿Qué debes hacer?\nDebes Completar cada uno de los ejercicios propuetos a continuación cada uno en su respectivo archivo, el objetivo es adquirir práctica en la sintaxis y estructura de Python. Ejercicios\n\nImprimir Nombre: Un programa simple que imprime tu nombre en la pantalla.\nSuma de los Números del 1 al 10: Un programa que calcula la suma de los números del 1 al 10.\nDatos Personales: Un programa que almacena tu edad, nombre y estatura en variables y las imprime en pantalla.\nPar o Impar: Un programa que determina si un número ingresado por el usuario es par o impar.\nÁrea de un Círculo: Una función que calcula el área de un círculo dado su radio.\nSuma de Dos Números: Una función que recibe dos números como argumentos y devuelve su suma.\nÁrea de un Círculo con Parámetro: Modificación de la función de área de un círculo para recibir el radio como parámetro.\nConversión de Temperatura: Un programa que convierte grados Celsius a Fahrenheit y viceversa.",
    "crumbs": [
      "Unidad 2: Python Básico",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Sintaxis Básica</span>"
    ]
  },
  {
    "objectID": "unidades/unidad2/2_variable_y_control_de_flujo.html#pruebas",
    "href": "unidades/unidad2/2_variable_y_control_de_flujo.html#pruebas",
    "title": "Sintaxis Básica",
    "section": "Pruebas",
    "text": "Pruebas\nCada ejercicio tiene su archivo de prueba en el que se utilizan las aserciones de pytest para verificar su correcto funcionamiento. Si por ejemplo quiero aplicar el test del primer ejercicio debo completar el primer ejercicio y comentar los demás, luego ejecutar el comando pytest test_1.py para verificar que el programa funciona correctamente, luego continuar con cada uno de ellos e ir aplicando los test, hasta que al final todos los test pasen y completar la tarea",
    "crumbs": [
      "Unidad 2: Python Básico",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Sintaxis Básica</span>"
    ]
  },
  {
    "objectID": "unidades/unidad2/2_variable_y_control_de_flujo.html#ejecución",
    "href": "unidades/unidad2/2_variable_y_control_de_flujo.html#ejecución",
    "title": "Sintaxis Básica",
    "section": "Ejecución",
    "text": "Ejecución\nPara ejecutar cada programa, simplemente ejecute el archivo programa.py. Los archivos de prueba se pueden ejecutar con el comando pytest.",
    "crumbs": [
      "Unidad 2: Python Básico",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Sintaxis Básica</span>"
    ]
  },
  {
    "objectID": "unidades/unidad3/3_listas_tuplas.html",
    "href": "unidades/unidad3/3_listas_tuplas.html",
    "title": "Listas",
    "section": "",
    "text": "Tuplas\nLas tuplas son un tipo de dato que nos permite almacenar diferentes valores, en una sola variable.\nEjemplo:\nEjercicio:\nCrear una tupla con los números del 1 al 10, y mostrarla en pantalla.",
    "crumbs": [
      "Unidad 3: Python Intermedio",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Listas</span>"
    ]
  },
  {
    "objectID": "unidades/unidad3/3_listas_tuplas.html#descripción-de-la-asignación",
    "href": "unidades/unidad3/3_listas_tuplas.html#descripción-de-la-asignación",
    "title": "Listas",
    "section": "Descripción de la Asignación",
    "text": "Descripción de la Asignación\nEl archivo ejercicio.py contiene un script que pide al usuario que ingrese una lista de compras. El usuario debe ingresar los elementos de la lista separados por comas. El script luego imprime la lista de compras.\nAdemás, el script contiene una función llamada convertir_lista_a_tupla() que está destinada a convertir la lista de compras en una tupla. Esta función aún no está completa.",
    "crumbs": [
      "Unidad 3: Python Intermedio",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Listas</span>"
    ]
  },
  {
    "objectID": "unidades/unidad3/3_listas_tuplas.html#tarea-pendiente",
    "href": "unidades/unidad3/3_listas_tuplas.html#tarea-pendiente",
    "title": "Listas",
    "section": "Tarea Pendiente:",
    "text": "Tarea Pendiente:\n\nCompletar la función convertir_lista_a_tupla() para que convierta la lista de compras en una tupla.",
    "crumbs": [
      "Unidad 3: Python Intermedio",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Listas</span>"
    ]
  },
  {
    "objectID": "unidades/unidad3/3_listas_tuplas.html#cómo-ejecutar-el-código",
    "href": "unidades/unidad3/3_listas_tuplas.html#cómo-ejecutar-el-código",
    "title": "Listas",
    "section": "Cómo Ejecutar el Código",
    "text": "Cómo Ejecutar el Código\nPara ejecutar el test puedes utilizar el siguiente comando en tu terminal:\npytest -s\nPytest es una biblioteca que facilita la escritura de pruebas en Python. El parámetro -s se utiliza para mostrar la salida de la prueba en la terminal.",
    "crumbs": [
      "Unidad 3: Python Intermedio",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Listas</span>"
    ]
  },
  {
    "objectID": "unidades/unidad3/3_listas_tuplas.html#ejemplo-de-salida",
    "href": "unidades/unidad3/3_listas_tuplas.html#ejemplo-de-salida",
    "title": "Listas",
    "section": "Ejemplo de salida:",
    "text": "Ejemplo de salida:\n$ pytest -s\n================================================= test session starts =================================================\nplatform linux -- Python 3.8.10, pytest-6.2.4, pluggy-0.13.1\nrootdir: /home/user/Documentos/Python/Asignacion_Lista_Compras\ncollected 1 item\n\ntest_ejercicio.py Lista de Compras: [manzanas, peras, plátanos, uvas]\n\n================================================== 1 passed in 0.01s ==================================================\n\n\n\n\n\n\nTip\n\n\n\nSe sugiere que practique la sección Ejercicios Python - Nivel 3 para reforzar los conocimientos adquiridos.",
    "crumbs": [
      "Unidad 3: Python Intermedio",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Listas</span>"
    ]
  },
  {
    "objectID": "unidades/unidad3/4_conjuntos_diccionarios.html#descripción",
    "href": "unidades/unidad3/4_conjuntos_diccionarios.html#descripción",
    "title": "Diccionarios",
    "section": "Descripción",
    "text": "Descripción\nEsta asignación consiste en corregir y ejecutar un test unitario para un diccionario de frutas. Instrucciones\n\nAbre el archivo ejercicio.py.\nCorrige el diccionario frutas para que tenga las siguientes parejas clave-valor:\n\n\"manzana\" - \"roja\"\n\"banana\" - \"amarilla\"\n\"pera\" - \"verde\"\n\"naranja\" - \"naranja\"\n\nGuarda y cierra el archivo ejercicio.py.\nEjecuta el test unitario test_ejercicio en tu terminal con el comando:\n\npython -m unittest test_ejercicio.py\n\nSi el test unitario se ejecuta sin errores, habrás completado la asignación.\nSi el test unitario arroja errores, corrige el diccionario frutas en ejercicio.py y vuelve a ejecutar el test unitario.\nRepite los pasos 4 a 6 hasta que el test unitario se ejecute sin errores.",
    "crumbs": [
      "Unidad 3: Python Intermedio",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Diccionarios</span>"
    ]
  },
  {
    "objectID": "unidades/unidad3/4_conjuntos_diccionarios.html#criterios-de-evaluación",
    "href": "unidades/unidad3/4_conjuntos_diccionarios.html#criterios-de-evaluación",
    "title": "Diccionarios",
    "section": "Criterios de Evaluación",
    "text": "Criterios de Evaluación\n\nEl diccionario frutas en ejercicio.py tiene las parejas clave-valor correctas.\nEl test unitario test_frutas en test_ejercicio.py se ejecuta sin errores.\n\n:::{.callout-tip} Se sugiere revisar la sección de Ejercicios Python - Nivel 4 para poder reforzar los conocimientos necesarios para completar esta sección.",
    "crumbs": [
      "Unidad 3: Python Intermedio",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Diccionarios</span>"
    ]
  },
  {
    "objectID": "unidades/unidad4/5_programacion_oo.html",
    "href": "unidades/unidad4/5_programacion_oo.html",
    "title": "Programación Orientada a Objetos",
    "section": "",
    "text": "Asignación\nhttps://classroom.github.com/a/LVvqQCln\nEn esta asignación, aprenderás sobre los conceptos básicos de Programación Orientada a Objetos (POO) mediante la implementación de clases en Python.",
    "crumbs": [
      "Unidad 4: Python Avanzado",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Programación Orientada a Objetos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad4/5_programacion_oo.html#instrucciones",
    "href": "unidades/unidad4/5_programacion_oo.html#instrucciones",
    "title": "Programación Orientada a Objetos",
    "section": "Instrucciones",
    "text": "Instrucciones\n\nLee cuidadosamente el contenido de este repositorio.\nImplementa las clases solicitadas en el archivo main.py.\nRealiza los commits y push necesarios para subir tus cambios a este repositorio.\nVerifica que tus cambios pasen todas las pruebas.",
    "crumbs": [
      "Unidad 4: Python Avanzado",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Programación Orientada a Objetos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad4/5_programacion_oo.html#contenido-del-repositorio",
    "href": "unidades/unidad4/5_programacion_oo.html#contenido-del-repositorio",
    "title": "Programación Orientada a Objetos",
    "section": "Contenido del Repositorio",
    "text": "Contenido del Repositorio\n\nmain.py: Archivo principal donde implementarás tus clases.\ntest_main.py: Archivo de pruebas unitarias.\nREADME.md: Este archivo con las instrucciones de la asignación.",
    "crumbs": [
      "Unidad 4: Python Avanzado",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Programación Orientada a Objetos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad4/5_programacion_oo.html#cómo-ejecutar-las-pruebas",
    "href": "unidades/unidad4/5_programacion_oo.html#cómo-ejecutar-las-pruebas",
    "title": "Programación Orientada a Objetos",
    "section": "Cómo Ejecutar las Pruebas",
    "text": "Cómo Ejecutar las Pruebas\n\nAsegúrate de tener Python instalado en tu sistema.\nAbre una terminal y navega hasta la ubicación de este repositorio.\nEjecuta python -m unittest para correr las pruebas.",
    "crumbs": [
      "Unidad 4: Python Avanzado",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Programación Orientada a Objetos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad4/6_modulos.html",
    "href": "unidades/unidad4/6_modulos.html",
    "title": "Módulos",
    "section": "",
    "text": "Paquetes\nUn paquete es un conjunto de módulos organizados en un directorio. Un paquete debe contener un archivo llamado init.py. Este archivo puede estar vacío o contener código de inicialización del paquete.\nEjemplo:\nEjercicio:\nCrear un paquete llamado operaciones que contenga los módulos suma.py, resta.py, multiplicacion.py y division.py. Cada módulo debe contener una función que realice la operación correspondiente.",
    "crumbs": [
      "Unidad 4: Python Avanzado",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Módulos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad4/6_modulos.html#creación-de-módulos",
    "href": "unidades/unidad4/6_modulos.html#creación-de-módulos",
    "title": "Módulos",
    "section": "Creación de Módulos",
    "text": "Creación de Módulos\nPara crear un módulo, simplemente se crea un archivo con extensión .py y se definen las funciones y variables que se desean exportar.\nEjemplo:\n# modulo.py\ndef saludar():\n    print(\"Hola, bienvenido a Python\")",
    "crumbs": [
      "Unidad 4: Python Avanzado",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Módulos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad4/6_modulos.html#uso-de-módulos",
    "href": "unidades/unidad4/6_modulos.html#uso-de-módulos",
    "title": "Módulos",
    "section": "Uso de Módulos",
    "text": "Uso de Módulos\nPara usar un módulo, se utiliza la palabra reservada import seguida del nombre del módulo.\nEjemplo:\n# programa.py\nimport modulo\n\nmodulo.saludar()",
    "crumbs": [
      "Unidad 4: Python Avanzado",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Módulos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad4/6_modulos.html#importar-funciones-específicas",
    "href": "unidades/unidad4/6_modulos.html#importar-funciones-específicas",
    "title": "Módulos",
    "section": "Importar Funciones Específicas",
    "text": "Importar Funciones Específicas\nTambién es posible importar funciones específicas de un módulo.\nEjemplo:\n# programa.py\nfrom modulo import saludar\n\nsaludar()",
    "crumbs": [
      "Unidad 4: Python Avanzado",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Módulos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad4/6_modulos.html#importar-con-alias",
    "href": "unidades/unidad4/6_modulos.html#importar-con-alias",
    "title": "Módulos",
    "section": "Importar con Alias",
    "text": "Importar con Alias\nEs posible importar un módulo o función con un alias.\nEjemplo:\n# programa.py\n\nimport modulo as m\n\nm.saludar()",
    "crumbs": [
      "Unidad 4: Python Avanzado",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Módulos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad4/6_modulos.html#importar-todas-las-funciones",
    "href": "unidades/unidad4/6_modulos.html#importar-todas-las-funciones",
    "title": "Módulos",
    "section": "Importar Todas las Funciones",
    "text": "Importar Todas las Funciones\nTambién es posible importar todas las funciones de un módulo.\nEjemplo:\n# programa.py\n\nfrom modulo import *\n\nsaludar()",
    "crumbs": [
      "Unidad 4: Python Avanzado",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Módulos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad4/6_modulos.html#creación-de-paquetes",
    "href": "unidades/unidad4/6_modulos.html#creación-de-paquetes",
    "title": "Módulos",
    "section": "Creación de Paquetes",
    "text": "Creación de Paquetes\nPara crear un paquete, se crea un directorio con el nombre del paquete y se agregan los módulos necesarios. Además, se debe crear un archivo init.py en el directorio del paquete.\nEjemplo:\npaquete/\n    __init__.py\n    modulo1.py\n    modulo2.py",
    "crumbs": [
      "Unidad 4: Python Avanzado",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Módulos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad4/6_modulos.html#uso-de-paquetes",
    "href": "unidades/unidad4/6_modulos.html#uso-de-paquetes",
    "title": "Módulos",
    "section": "Uso de Paquetes",
    "text": "Uso de Paquetes\nPara usar un paquete, se utiliza la palabra reservada import seguida del nombre del paquete y el nombre del módulo.\nEjemplo:\n# programa.py\n\nfrom paquete import modulo1, modulo2\n\nmodulo1.saludar()\nmodulo2.despedir()",
    "crumbs": [
      "Unidad 4: Python Avanzado",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Módulos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad4/6_modulos.html#importar-con-alias-1",
    "href": "unidades/unidad4/6_modulos.html#importar-con-alias-1",
    "title": "Módulos",
    "section": "Importar con Alias",
    "text": "Importar con Alias\nEs posible importar un paquete o módulo con un alias.\nEjemplo:\n\nfrom paquete import modulo1 as m1, modulo2 as m2\n\nm1.saludar()\nm2.despedir()",
    "crumbs": [
      "Unidad 4: Python Avanzado",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Módulos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad4/6_modulos.html#importar-todas-las-funciones-1",
    "href": "unidades/unidad4/6_modulos.html#importar-todas-las-funciones-1",
    "title": "Módulos",
    "section": "Importar Todas las Funciones",
    "text": "Importar Todas las Funciones\nTambién es posible importar todas las funciones de un módulo.\nEjemplo:\n# programa.py\n\nfrom paquete.modulo1 import *\n\nsaludar()",
    "crumbs": [
      "Unidad 4: Python Avanzado",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Módulos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad4/6_modulos.html#instrucciones",
    "href": "unidades/unidad4/6_modulos.html#instrucciones",
    "title": "Módulos",
    "section": "Instrucciones",
    "text": "Instrucciones\n\nLee cuidadosamente el contenido de este repositorio.\nImplementa las funciones solicitadas en el archivo operaciones.py.\nCompleta el programa principal en el archivo programa.py.\nRealiza los commits y push necesarios para subir tus cambios a este repositorio.\nVerifica que tus cambios funcionen correctamente.",
    "crumbs": [
      "Unidad 4: Python Avanzado",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Módulos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad4/6_modulos.html#contenido-del-repositorio",
    "href": "unidades/unidad4/6_modulos.html#contenido-del-repositorio",
    "title": "Módulos",
    "section": "Contenido del Repositorio",
    "text": "Contenido del Repositorio\n\noperaciones.py: Archivo de módulo que contiene las funciones para realizar operaciones matemáticas.\nprograma.py: Archivo principal donde se utiliza el módulo operaciones.py.\ntest_operaciones.py: Archivo de pruebas unitarias para verificar las funciones del módulo operaciones.py.\n.gitignore: Archivo que indica a Git qué archivos y directorios debe ignorar al rastrear los cambios en el repositorio.\nrequirements.txt: Archivo que especifica las dependencias del proyecto.",
    "crumbs": [
      "Unidad 4: Python Avanzado",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Módulos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad4/6_modulos.html#ejercicio",
    "href": "unidades/unidad4/6_modulos.html#ejercicio",
    "title": "Módulos",
    "section": "Ejercicio",
    "text": "Ejercicio\nCrear un módulo llamado operaciones.py que contenga las siguientes funciones:\n\nsuma(a, b): Retorna la suma de a y b.\nresta(a, b): Retorna la resta de a y b.\nmultiplicacion(a, b): Retorna la multiplicación de a y b.\ndivision(a, b): Retorna la división de a y b. Si b es cero, retorna un mensaje de error.",
    "crumbs": [
      "Unidad 4: Python Avanzado",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Módulos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad4/6_modulos.html#cómo-ejecutar-el-programa",
    "href": "unidades/unidad4/6_modulos.html#cómo-ejecutar-el-programa",
    "title": "Módulos",
    "section": "Cómo Ejecutar el Programa",
    "text": "Cómo Ejecutar el Programa\n\nAsegúrate de tener Python instalado en tu sistema.\nAbre una terminal y navega hasta la ubicación de este repositorio.\nInstala las dependencias ejecutando pip install -r requirements.txt.\nEjecuta python programa.py para ver los resultados de las operaciones.",
    "crumbs": [
      "Unidad 4: Python Avanzado",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Módulos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad4/6_modulos.html#cómo-ejecutar-las-pruebas",
    "href": "unidades/unidad4/6_modulos.html#cómo-ejecutar-las-pruebas",
    "title": "Módulos",
    "section": "Cómo Ejecutar las Pruebas",
    "text": "Cómo Ejecutar las Pruebas\n\nAsegúrate de tener Python instalado en tu sistema.\nAbre una terminal y navega hasta la ubicación de este repositorio.\nEjecuta python -m unittest para correr las pruebas.",
    "crumbs": [
      "Unidad 4: Python Avanzado",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Módulos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad4/project001.html",
    "href": "unidades/unidad4/project001.html",
    "title": "Sistema de Gestión de Inventarios",
    "section": "",
    "text": "Asignación\nhttps://classroom.github.com/a/S9EkZXRf\nAprenderás a desarrollar un proyecto de utilizando el lenguaje de programación Python.\nUn sistema de gestión de inventarios es una herramienta que permite realizar un seguimiento y control de los productos o artículos almacenados en un negocio o empresa.\nAprenderás a utilizar diferentes conceptos y técnicas de programación para implementar las funcionalidades clave de este sistema.\nAlgunas de las funcionalidades que implementaremos incluyen:\nAprenderás a crear una estructura de datos para almacenar la información de los productos, como su nombre, descripción, precio, cantidad disponible, etc. También aprenderás a agregar nuevos productos al sistema.\nTe enseñaré cómo implementar funciones de búsqueda y filtrado para encontrar productos específicos en base a diferentes criterios, como el nombre, la categoría o el precio.\nAprenderás a manejar las actualizaciones de inventario, como la compra o venta de productos. Implementaremos funciones que permitan aumentar o disminuir la cantidad disponible de un producto y mantener un registro de estas transacciones.\nTe mostraré cómo generar informes sobre el estado del inventario, como la lista de productos disponibles, los productos más vendidos, los productos con bajo stock, etc. Utilizaremos técnicas de manipulación de datos y generación de informes para presentar esta información de manera clara y concisa.",
    "crumbs": [
      "Unidad 4: Python Avanzado",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Sistema de Gestión de Inventarios</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/1_django_fundamentos.html",
    "href": "unidades/unidad5/1_django_fundamentos.html",
    "title": "Introducción a Django",
    "section": "",
    "text": "Conceptos Importantes",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Introducción a Django</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/1_django_fundamentos.html#conceptos-importantes",
    "href": "unidades/unidad5/1_django_fundamentos.html#conceptos-importantes",
    "title": "Introducción a Django",
    "section": "",
    "text": "Tip\n\n\n\nAntes de iniciar con Django es necesario conocer el concepto de Entornos Virtuales.\n\n\n\nEntornos Virtuales\n\n\n\n\nVirtual Enviroment\n\n\n\nUn entorno virtual es un entorno de desarrollo aislado que permite instalar paquetes de Python sin afectar al sistema global. Los entornos virtuales son útiles para gestionar las dependencias de un proyecto y para evitar conflictos entre diferentes versiones de los paquetes.\n\nCrear un entorno virtual\nPara crear un entorno virtual, se puede utilizar la herramienta venv de Python.\npython -m venv env\nEste comando creará un directorio llamado env en el directorio actual con el entorno virtual.\n\n\n\n\n\n\nTip\n\n\n\nTambien se puede utilizar virtualenv para crear entornos virtuales.\n\n\n\n\n\nModelo Template View (MTV)\n\n\n\n\nModel View Controller\n\n\n\n\n\n\n\nModel View Template\n\n\n\nDjango sigue el patrón de diseño Modelo Vista Template (MVT). Este patrón de diseño separa la lógica de la aplicación en tres componentes principales: Modelo, Vista y Template.\n\n\n\n\n\n\nTip\n\n\n\nEl archivo URLs.py es el encargado de mapear las URLs de la aplicación a las vistas correspondientes.\n\n\n\nModelo: Es la representación de los datos de la aplicación y las reglas para manipular esos datos. Django utiliza un ORM (Object-Relational Mapping) para interactuar con la base de datos.\nVista: Es la capa de presentación de la aplicación. Se encarga de mostrar los datos al usuario y de interpretar las acciones del usuario.\nTemplate: Es la capa de presentación de la aplicación. Define cómo se muestra la información al usuario. Django utiliza el motor de plantillas Jinja2 para renderizar los templates.\n\n\n\nFormularios\n\n\n\n\nDjango Forms\n\n\n\nLos formularios son una parte importante de cualquier aplicación web. Django proporciona una forma sencilla de crear y procesar formularios en las vistas.\n\n\nAdministrador de Django\n\n\n\n\nDjango Admin\n\n\n\nEl administrador de Django es una interfaz de administración que permite gestionar los datos de la aplicación de forma sencilla. Django genera automáticamente una interfaz de administración basada en los modelos de la aplicación.\n\n\nMiddleware\nEl middleware es una capa de procesamiento que se ejecuta antes y después de cada petición HTTP. Django proporciona un conjunto de middlewares que se pueden utilizar para añadir funcionalidades a la aplicación.\n\n\nAutenticación y Autorización\nDjango proporciona un sistema de autenticación y autorización que permite gestionar los usuarios y los permisos de la aplicación de forma sencilla.\n\n\nInternacionalización\nDjango proporciona soporte para la internacionalización de la aplicación. Permite traducir la aplicación a diferentes idiomas y gestionar las traducciones de forma sencilla.\n\n\nSeguridad\nDjango proporciona un conjunto de medidas de seguridad para proteger la aplicación contra ataques comunes, como la inyección de SQL, la falsificación de solicitudes entre sitios (CSRF) y la inyección de código.\n\n\nTesting\nDjango proporciona un conjunto de herramientas para realizar pruebas unitarias y de integración en la aplicación. Permite probar la lógica de la aplicación y asegurarse de que funciona correctamente.\n\n\nDespliegue\nDjango proporciona un conjunto de herramientas para desplegar la aplicación en un servidor de producción. Permite configurar el entorno de producción y gestionar las actualizaciones de la aplicación de forma sencilla.",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Introducción a Django</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/2_configuracion_inicial.html",
    "href": "unidades/unidad5/2_configuracion_inicial.html",
    "title": "Configuración inicial de un proyecto.",
    "section": "",
    "text": "1. Crear un entorno virtual\nEl comando anterior creará un directorio llamado env en el directorio actual, que contendrá un entorno virtual de Python.",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Configuración inicial de un proyecto.</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/2_configuracion_inicial.html#crear-un-entorno-virtual",
    "href": "unidades/unidad5/2_configuracion_inicial.html#crear-un-entorno-virtual",
    "title": "Configuración inicial de un proyecto.",
    "section": "",
    "text": "Creación de entorno Virtual\n\n\n\npython3 -m venv env",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Configuración inicial de un proyecto.</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/2_configuracion_inicial.html#activar-el-entorno-virtual",
    "href": "unidades/unidad5/2_configuracion_inicial.html#activar-el-entorno-virtual",
    "title": "Configuración inicial de un proyecto.",
    "section": "2. Activar el entorno virtual",
    "text": "2. Activar el entorno virtual\n\n\n\n\nActivación de entorno Virtual\n\n\n\nsource env/bin/activate\nEl comando anterior activará el entorno virtual en sistemas Unix. En Windows, el comando es:\nenv\\Scripts\\activate\nEste comando tambien se puede dividir en 2 partes:\ncd env/Scripts/\nactivate\nPara desactivar el entorno virtual, simplemente ejecute:\ndeactivate",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Configuración inicial de un proyecto.</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/2_configuracion_inicial.html#instalar-django",
    "href": "unidades/unidad5/2_configuracion_inicial.html#instalar-django",
    "title": "Configuración inicial de un proyecto.",
    "section": "3. Instalar Django",
    "text": "3. Instalar Django\n\n\n\n\nInstalación de Django\n\n\n\npip install django==4.2\nEl comando anterior instalará la última versión de Django en el entorno virtual.",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Configuración inicial de un proyecto.</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/2_configuracion_inicial.html#crear-un-proyecto-de-django",
    "href": "unidades/unidad5/2_configuracion_inicial.html#crear-un-proyecto-de-django",
    "title": "Configuración inicial de un proyecto.",
    "section": "4. Crear un proyecto de Django",
    "text": "4. Crear un proyecto de Django\n\n\n\n\nCreación de un Proyecto en Django\n\n\n\ndjango-admin startproject helloWorld .\nEl comando anterior creará un nuevo directorio llamado helloWorld en el directorio actual, que contendrá un proyecto de Django.",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Configuración inicial de un proyecto.</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/2_configuracion_inicial.html#crear-una-aplicación-de-django",
    "href": "unidades/unidad5/2_configuracion_inicial.html#crear-una-aplicación-de-django",
    "title": "Configuración inicial de un proyecto.",
    "section": "5. Crear una aplicación de Django",
    "text": "5. Crear una aplicación de Django\n\n\n\n\nCreación de una App en Django\n\n\n\npython manage.py startapp hello\nEl comando anterior creará un nuevo directorio llamado hello en el directorio actual, que contendrá una aplicación de Django.\n\n\n\n\n\n\nTip\n\n\n\nRecerda que puedes abrir el editor de código Visual Studio Code con el comando code .",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Configuración inicial de un proyecto.</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/2_configuracion_inicial.html#crear-una-vista",
    "href": "unidades/unidad5/2_configuracion_inicial.html#crear-una-vista",
    "title": "Configuración inicial de un proyecto.",
    "section": "6. Crear una vista",
    "text": "6. Crear una vista\n\n\n\n\nVistas en Django\n\n\n\n# hello/views.py\n\nfrom django.http import HttpResponse\n\ndef index(request):\n    return HttpResponse(\"Hello, World!\")",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Configuración inicial de un proyecto.</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/2_configuracion_inicial.html#configurar-las-url",
    "href": "unidades/unidad5/2_configuracion_inicial.html#configurar-las-url",
    "title": "Configuración inicial de un proyecto.",
    "section": "7. Configurar las URL",
    "text": "7. Configurar las URL\n\n\n\n\nURLs de la App en Django\n\n\n\n# helloWorld/urls.py\n\nfrom django.contrib import admin\nfrom django.urls import include, path\n\nurlpatterns = [\n    path(\"\", include(\"hello.urls\")),\n    path(\"admin/\", admin.site.urls),\n]",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Configuración inicial de un proyecto.</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/2_configuracion_inicial.html#ejecutar-el-servidor-de-desarrollo",
    "href": "unidades/unidad5/2_configuracion_inicial.html#ejecutar-el-servidor-de-desarrollo",
    "title": "Configuración inicial de un proyecto.",
    "section": "8. Ejecutar el servidor de desarrollo",
    "text": "8. Ejecutar el servidor de desarrollo\n\n\n\n\nServidor de Desarrollo en Django\n\n\n\npython manage.py runserver\nEl comando anterior ejecutará el servidor de desarrollo de Django. Para acceder al servidor, abra un navegador web y vaya a la dirección http://0.0.0.0:8000/.\n\n\n\n\nVisualizar el servidor corriendo desde el navegador\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nPara detener el servidor de desarrollo, presione Ctrl + C en la terminal.",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Configuración inicial de un proyecto.</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/2_configuracion_inicial.html#crear-una-migración",
    "href": "unidades/unidad5/2_configuracion_inicial.html#crear-una-migración",
    "title": "Configuración inicial de un proyecto.",
    "section": "9. Crear una migración",
    "text": "9. Crear una migración\n\n\n\n\nPreparación de las Migraciones en Django\n\n\n\npython manage.py makemigrations\nEl comando anterior creará una migración para los cambios en los modelos de la base de datos.",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Configuración inicial de un proyecto.</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/2_configuracion_inicial.html#aplicar-una-migración",
    "href": "unidades/unidad5/2_configuracion_inicial.html#aplicar-una-migración",
    "title": "Configuración inicial de un proyecto.",
    "section": "10. Aplicar una migración",
    "text": "10. Aplicar una migración\n\n\n\n\nPreparación de las Migraciones en Django\n\n\n\npython manage.py migrate\nEl comando anterior aplicará la migración a la base de datos.",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Configuración inicial de un proyecto.</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/2_configuracion_inicial.html#crear-un-superusuario",
    "href": "unidades/unidad5/2_configuracion_inicial.html#crear-un-superusuario",
    "title": "Configuración inicial de un proyecto.",
    "section": "12. Crear un superusuario",
    "text": "12. Crear un superusuario\n\n\n\n\nCreación de un Superusuario en Django\n\n\n\npython manage.py createsuperuser\nEl comando anterior creará un superusuario para acceder al panel de administración de Django.",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Configuración inicial de un proyecto.</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/2_configuracion_inicial.html#acceder-al-panel-de-administración",
    "href": "unidades/unidad5/2_configuracion_inicial.html#acceder-al-panel-de-administración",
    "title": "Configuración inicial de un proyecto.",
    "section": "13. Acceder al panel de administración",
    "text": "13. Acceder al panel de administración\n\n\n\n\nLogin Admin en Django\n\n\n\nPara acceder al panel de administración de Django, abra un navegador web y vaya a la dirección http://127.0.0.1:8000/admin/. Inicie sesión con el superusuario creado en el paso anterior.\n\n\n\n\nAdmin en Django",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Configuración inicial de un proyecto.</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/3_estructura_archivos_directorios.html",
    "href": "unidades/unidad5/3_estructura_archivos_directorios.html",
    "title": "Estructura de archivos y carpetas",
    "section": "",
    "text": "Django tiene una estructura de archivos y carpetas que se debe seguir para que el proyecto funcione correctamente. A continuación se muestra la estructura de archivos y carpetas de un proyecto Django:\n\n\n\n\n\n\nTip\n\n\n\nRecuerda crear el entorno virtual y activarlo antes de ejecutar el comando.\npython -m venv venv\nsource venv/bin/activate\nCreamos un directorio con el siguiente comando:\nmkdir myproject\ncd myproject\nInstalamos Django con el siguiente comando:\npip install django==4.2.0\nCreamos el proyecto con el siguiente comando:\ndjango-admin startproject myproject .\n\n\n├── manage.py\n└── myproject\n    ├── asgi.py\n    ├── __init__.py\n    ├── settings.py\n    ├── urls.py\n    └── wsgi.py\n1.- Archivo de gestión del proyecto.\n2.- Carpeta del proyecto.\n3.- Archivo de configuración de ASGI.\n4.- Archivo de inicialización del proyecto.\n5.- Archivo de configuración del proyecto.\n6.- Archivo de configuración de las rutas del proyecto.\n7.- Archivo de configuración de WSGI.\n\nCreación de una aplicación Django\nPara crear una aplicación Django se debe ejecutar el siguiente comando:\n1python manage.py startapp myapp\n\n1\n\nNombre de la aplicación.\n\n\n\n\nConfiguración de la base de datos\nPara configurar la base de datos se debe modificar el archivo settings.py del proyecto. A continuación se muestra un ejemplo de configuración de la base de datos:\nDATABASES = {\n    'default': {\n1        'ENGINE': 'django.db.backends.sqlite3',\n2        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n\n1\n\nMotor de base de datos.\n\n2\n\nRuta del archivo de la base de datos.\n\n\nEjemplo\nEn este ejemplo crearemos una aplicación que muestre un mensaje en la página principal. Para ello, se deben seguir los siguientes pasos:\n\nCrear una vista.\nCrear una plantilla.\nConfigurar las rutas.\n\n\n\nCrear una vista\nPara crear una vista se debe modificar el archivo views.py de la aplicación. A continuación se muestra un ejemplo de vista:\nfrom django.http import HttpResponse\n\ndef index(request):\n    return HttpResponse(\"Hello, world!\")\n\n\nCrear una plantilla\nPara crear una plantilla se debe crear una carpeta llamada templates en la carpeta de la aplicación. A continuación se muestra un ejemplo de plantilla:\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;MyApp&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Hello, world!&lt;/h1&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\nPara que Django pueda encontrar la plantilla, se debe configurar la ruta de la plantilla en el archivo settings.py del proyecto. A continuación se muestra un ejemplo de configuración de la ruta de la plantilla:\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n1        'DIRS': [BASE_DIR / 'templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\n1\n\nRuta de la plantilla.\n\n\n\n\n\nConfigurar las rutas\nPara configurar las rutas se debe modificar el archivo urls.py de la aplicación. A continuación se muestra un ejemplo de configuración de las rutas:\nfrom django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.index, name='index'),\n]\n\n\nCorrer el servidor de desarrollo\nPara correr el servidor de desarrollo se debe ejecutar el siguiente comando:\npython manage.py runserver\n\n\nAcceder a la aplicación\nPara acceder a la aplicación se debe abrir un navegador web y escribir la siguiente URL:\nhttp://127.0.0.1:8000/\nPosiblemente sea necesario preparar las migraciones y aplicarlas a la base de datos:\n1python manage.py makemigrations\n2python manage.py migrate\n\n1\n\nPrepara las migraciones.\n\n2\n\nAplica las migraciones a la base de datos.\n\n\n\n\nAcceder a la aplicación\nPara acceder a la aplicación se debe abrir un navegador web y escribir la siguiente URL:\nhttp://127.0.0.0.1:8000/\nMuy bien hecho! Has creado tu primera aplicación Django. Ahora puedes seguir explorando la documentación oficial de Django para aprender más sobre el framework.\n\n\nAsignación\nSeguir cada uno de los pasos de esta sección para crear una aplicación Django que muestre un mensaje en la página principal. La aplicación debe tener los siguientes archivos y carpetas:\n├── manage.py\n├── myproject\n│   ├── asgi.py\n│   ├── __init__.py\n│   ├── settings.py\n│   ├── urls.py\n│   └── wsgi.py\n└── myapp\n    ├── __init__.py\n    ├── admin.py\n    ├── apps.py\n    ├── migrations\n    │   └── __init__.py\n    ├── models.py\n    ├── tests.py\n    ├── views.py\n    └── templates\n        └── index.html\n1.- Archivo de gestión del proyecto.\n2.- Carpeta del proyecto.\n3.- Archivo de configuración de ASGI.\n4.- Archivo de inicialización del proyecto.\n5.- Archivo de configuración del proyecto.\n6.- Archivo de configuración de las rutas del proyecto.\n7.- Archivo de configuración de WSGI.\n8.- Carpeta de la aplicación.\n9.- Archivo de inicialización de la aplicación.\n10.- Archivo de configuración del administrador de Django.\n11.- Archivo de configuración de la aplicación.\n12.- Carpeta de migraciones de la aplicación.\n13.- Archivo de inicialización de las migraciones.\n14.- Archivo de configuración de los modelos de la aplicación.\n15.- Archivo de pruebas de la aplicación.\n16.- Archivo de configuración de las vistas de la aplicación.\n17.- Carpeta de plantillas de la aplicación.\n18.- Archivo de la plantilla de la aplicación.\n\nRecuerda que para que Django pueda encontrar la plantilla, se debe configurar la ruta de la plantilla en el archivo settings.py del proyecto. A continuación se muestra un ejemplo de configuración de la ruta de la plantilla:\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n1        'DIRS': [BASE_DIR / 'templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\n1\n\nRuta de la plantilla.\n\n\n\n\n\nReferencias\n\nDjango",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Estructura de archivos y carpetas</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/4_modelos_vistas_plantillas.html",
    "href": "unidades/unidad5/4_modelos_vistas_plantillas.html",
    "title": "Modelos",
    "section": "",
    "text": "Registramos la aplicacion en admin.py\nPara que Django reconozca la clase Producto, debemos registrarla en el archivo admin.py de la aplicación productos.",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Modelos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/4_modelos_vistas_plantillas.html#listar-productos",
    "href": "unidades/unidad5/4_modelos_vistas_plantillas.html#listar-productos",
    "title": "Modelos",
    "section": "Listar productos",
    "text": "Listar productos\nPara listar los productos en inventario, crearemos una función listar_productos que renderizará la plantilla listar.html con la lista de productos.\nfrom pyexpat.errors import messages\nfrom django.shortcuts import render, redirect, get_object_or_404\nfrom .models import Producto\nfrom django.urls import reverse \n\nproductos = []\n\ndef listar_productos(request):\n    productos = Producto.objects.all()\n    return render(request, 'listar.html', {'productos': productos})",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Modelos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/4_modelos_vistas_plantillas.html#agregar-producto",
    "href": "unidades/unidad5/4_modelos_vistas_plantillas.html#agregar-producto",
    "title": "Modelos",
    "section": "Agregar producto",
    "text": "Agregar producto\nPara agregar un producto al inventario, crearemos una función agregar_producto que recibe los datos del producto a agregar y lo agrega a la lista de productos.\ndef agregar_producto(request):\n    if request.method == \"POST\":\n        nombre = request.POST.get(\"nombre\")\n        precio = request.POST.get(\"precio\")\n        cantidad = request.POST.get(\"cantidad\")\n        Producto.objects.create(nombre=nombre, precio=precio, cantidad=cantidad) \n        return redirect('productos:listar_productos')\n    return render(request, \"agregar.html\")",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Modelos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/4_modelos_vistas_plantillas.html#actualizar-producto",
    "href": "unidades/unidad5/4_modelos_vistas_plantillas.html#actualizar-producto",
    "title": "Modelos",
    "section": "Actualizar producto",
    "text": "Actualizar producto\nPara actualizar un producto en el inventario, crearemos una función actualizar_producto que recibe los datos del producto a actualizar y actualiza el precio y la cantidad del producto.\ndef actualizar_producto(request, id):\n    producto = get_object_or_404(Producto, pk=id)\n    if request.method == 'POST':\n        nombre = request.POST.get('nombre')\n        precio = request.POST.get('precio')\n        cantidad = request.POST.get('cantidad')\n        \n        # Actualiza los campos del producto\n        producto.nombre = nombre\n        producto.precio = precio\n        producto.cantidad = cantidad\n        producto.save()\n        \n        return redirect('productos:listar_productos')\n    else:\n        return render(request, 'actualizar.html', {'producto': producto})",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Modelos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/4_modelos_vistas_plantillas.html#eliminar-producto",
    "href": "unidades/unidad5/4_modelos_vistas_plantillas.html#eliminar-producto",
    "title": "Modelos",
    "section": "Eliminar producto",
    "text": "Eliminar producto\nPara eliminar un producto del inventario, crearemos una función eliminar_producto que recibe el nombre del producto a eliminar y lo elimina de la lista de productos.\ndef eliminar_producto(request):\n    if request.method == \"POST\":\n        nombre = request.POST.get(\"nombre\")\n        try:\n            producto = Producto.objects.get(nombre=nombre)\n            producto.delete()\n        except Producto.DoesNotExist:\n            pass\n        \n        return redirect('productos:listar_productos')\n    return render(request, \"eliminar.html\")",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Modelos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/4_modelos_vistas_plantillas.html#buscar-producto",
    "href": "unidades/unidad5/4_modelos_vistas_plantillas.html#buscar-producto",
    "title": "Modelos",
    "section": "Buscar producto",
    "text": "Buscar producto\nPara buscar un producto en el inventario, crearemos una función buscar_producto que recibe el nombre del producto a buscar y renderiza la plantilla buscar.html con el producto encontrado.\ndef buscar_producto(request):\n    if request.method == \"POST\":\n        nombre = request.POST.get(\"nombre\")\n        try:\n            producto = Producto.objects.get(nombre=nombre)\n            return render(request, \"buscar.html\", {\"producto\": producto})\n        except Producto.DoesNotExist:\n            return render(request, \"buscar.html\", {\"producto\": None})\n    return render(request, \"buscar.html\")",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Modelos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/4_modelos_vistas_plantillas.html#base",
    "href": "unidades/unidad5/4_modelos_vistas_plantillas.html#base",
    "title": "Modelos",
    "section": "Base",
    "text": "Base\nCrearemos un archivo base.html que contendrá la estructura base de todas las páginas de nuestro sistema.\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;\n        {% block title %}\n        Inventario\n        {% endblock %}\n    &lt;/title&gt;\n    &lt;link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        {% block content %} \n        {% endblock %}\n    &lt;/div&gt;\n&lt;script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Modelos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/4_modelos_vistas_plantillas.html#listar",
    "href": "unidades/unidad5/4_modelos_vistas_plantillas.html#listar",
    "title": "Modelos",
    "section": "Listar",
    "text": "Listar\nCrearemos un archivo listar.html que contendrá la lista de productos en inventario.\n{% extends \"base.html\" %}\n\n{% block title %} Listar Productos {% endblock %}\n\n{% block content%}\n&lt;h1&gt;Listar Productos&lt;/h1&gt;\n&lt;ul class=\"list-group\"&gt;\n    {% for producto in productos %}\n    &lt;li class=\"list-group-item\"&gt; \n        {{ producto.nombre }} - {{ producto.precio }} - {{ producto.cantidad }}\n    &lt;/li&gt;\n    {% endfor %}\n&lt;/ul&gt;\n{% endblock%}",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Modelos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/4_modelos_vistas_plantillas.html#agregar",
    "href": "unidades/unidad5/4_modelos_vistas_plantillas.html#agregar",
    "title": "Modelos",
    "section": "Agregar",
    "text": "Agregar\nCrearemos un archivo agregar.html que contendrá un formulario para agregar un producto al inventario.\n{% extends \"base.html\" %}\n\n{% block title %}Agregar producto{% endblock %}\n\n{% block content %}\n&lt;h1&gt;Agregar producto&lt;/h1&gt;\n\n&lt;form action=\"{% url 'productos:agregar_producto' %}\" method=\"post\"&gt;\n    {% csrf_token %}\n    &lt;div class=\"mb-3\"&gt;\n        &lt;label for=\"nombre\" class=\"form-label\"&gt;Nombre&lt;/label&gt;\n        &lt;input type=\"text\" class=\"form-control\" id=\"nombre\" name=\"nombre\"&gt;\n    &lt;/div&gt;\n    &lt;div class=\"mb-3\"&gt;\n        &lt;label for=\"precio\" class=\"form-label\"&gt;Precio&lt;/label&gt;\n        &lt;input type=\"number\" class=\"form-control\" id=\"precio\" name=\"precio\"&gt;\n    &lt;/div&gt;\n    &lt;div class=\"mb-3\"&gt;\n        &lt;label for=\"cantidad\" class=\"form-label\"&gt;Cantidad&lt;/label&gt;\n        &lt;input type=\"number\" class=\"form-control\" id=\"cantidad\" name=\"cantidad\"&gt;\n    &lt;/div&gt;\n    &lt;button type=\"submit\" class=\"btn btn-primary\"&gt;Agregar&lt;/button&gt;\n&lt;/form&gt;\n{% endblock %}",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Modelos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/4_modelos_vistas_plantillas.html#actualizar",
    "href": "unidades/unidad5/4_modelos_vistas_plantillas.html#actualizar",
    "title": "Modelos",
    "section": "Actualizar",
    "text": "Actualizar\nCrearemos un archivo actualizar.html que contendrá un formulario para actualizar un producto en el inventario.\n{% extends \"base.html\" %}\n\n{% block title %}Actualizar producto{% endblock %}\n\n{% block content %}\n&lt;h1&gt;Actualizar producto&lt;/h1&gt;\n&lt;form action=\"{% url 'productos:actualizar_producto' producto.id %}\" method=\"post\"&gt;\n    {% csrf_token %}\n    &lt;input type=\"hidden\" name=\"nombre\" value=\"{{ producto.nombre }}\"&gt;\n    &lt;input type=\"hidden\" name=\"id\" value=\"{{ producto.id }}\"&gt; {# Agregamos un campo oculto para el ID del producto #}\n    &lt;div class=\"mb-3\"&gt;\n        &lt;label for=\"precio\" class=\"form-label\"&gt;Precio&lt;/label&gt;\n        &lt;input type=\"number\" class=\"form-control\" id=\"precio\" name=\"precio\" value=\"{{ producto.precio }}\"&gt;\n    &lt;/div&gt;\n    &lt;div class=\"mb-3\"&gt;\n        &lt;label for=\"cantidad\" class=\"form-label\"&gt;Cantidad&lt;/label&gt;\n        &lt;input type=\"number\" class=\"form-control\" id=\"cantidad\" name=\"cantidad\" value=\"{{ producto.cantidad }}\"&gt;\n    &lt;/div&gt;\n    &lt;button type=\"submit\" class=\"btn btn-primary\"&gt;Actualizar&lt;/button&gt;\n&lt;/form&gt;\n{% endblock %}",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Modelos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/4_modelos_vistas_plantillas.html#eliminar",
    "href": "unidades/unidad5/4_modelos_vistas_plantillas.html#eliminar",
    "title": "Modelos",
    "section": "Eliminar",
    "text": "Eliminar\nCrearemos un archivo eliminar.html que contendrá un formulario para eliminar un producto del inventario.\n{% extends \"base.html\" %}\n\n{% block title %}Eliminar producto{% endblock %}\n\n{% block content %}\n&lt;h1&gt;Eliminar producto&lt;/h1&gt;\n&lt;form action=\"{% url 'productos:eliminar_producto' %}\" method=\"post\"&gt;\n    {% csrf_token %}  &lt;!-- Agrega el token CSRF aquí --&gt;\n    &lt;div class=\"mb-3\"&gt;\n        &lt;label for=\"nombre\" class=\"form-label\"&gt;Nombre&lt;/label&gt;\n        &lt;input type=\"text\" class=\"form-control\" id=\"nombre\" name=\"nombre\"&gt;\n    &lt;/div&gt;\n    &lt;button type=\"submit\" class=\"btn btn-primary\"&gt;Eliminar&lt;/button&gt;\n&lt;/form&gt;\n{% endblock %}",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Modelos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/4_modelos_vistas_plantillas.html#buscar",
    "href": "unidades/unidad5/4_modelos_vistas_plantillas.html#buscar",
    "title": "Modelos",
    "section": "Buscar",
    "text": "Buscar\nCrearemos un archivo buscar.html que contendrá un formulario para buscar un producto en el inventario.\n{% extends \"base.html\" %}\n\n{% block title %}Buscar producto{% endblock %}\n\n{% block content %}\n&lt;h1&gt;Buscar producto&lt;/h1&gt;\n&lt;form action=\"{% url 'productos:buscar_producto' %}\" method=\"post\"&gt;\n    {% csrf_token %}\n    &lt;div class=\"mb-3\"&gt;\n        &lt;label for=\"nombre\" class=\"form-label\"&gt;Nombre&lt;/label&gt;\n        &lt;input type=\"text\" class=\"form-control\" id=\"nombre\" name=\"nombre\"&gt;\n    &lt;/div&gt;\n    &lt;button type=\"submit\" class=\"btn btn-primary\"&gt;Buscar&lt;/button&gt;\n&lt;/form&gt;\n\n{% if producto %}\n&lt;div class=\"mt-3\"&gt;\n    &lt;h2&gt;Información del producto:&lt;/h2&gt;\n    &lt;p&gt;Nombre: {{ producto.nombre }}&lt;/p&gt;\n    &lt;p&gt;Precio: {{ producto.precio }}&lt;/p&gt;\n    &lt;p&gt;Cantidad: {{ producto.cantidad }}&lt;/p&gt;\n&lt;/div&gt;\n{% endif %}\n{% endblock %}",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Modelos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/4_modelos_vistas_plantillas.html#urls-en-la-aplicación-y-el-proyecto",
    "href": "unidades/unidad5/4_modelos_vistas_plantillas.html#urls-en-la-aplicación-y-el-proyecto",
    "title": "Modelos",
    "section": "URLs en la aplicación y el proyecto",
    "text": "URLs en la aplicación y el proyecto\nEn el archivo urls.py de la aplicación productos definiremos las URLs de las vistas de nuestro sistema.\nfrom django.urls import path\nfrom . import views\n\napp_name = 'productos'\n\nurlpatterns = [\n    path('', views.listar_productos, name='listar_productos'),\n    path('agregar/', views.agregar_producto, name='agregar_producto'),\n    path('actualizar/&lt;int:id&gt;/', views.actualizar_producto, name='actualizar_producto'),\n    path('eliminar/', views.eliminar_producto, name='eliminar_producto'),\n    path('buscar/', views.buscar_producto, name='buscar_producto'),\n]\nEn el archivo urls.py del proyecto inventario incluiremos las URLs de la aplicación productos.\nfrom django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('productos.urls')),\n]\n\n\n\n\n\n\nTip\n\n\n\nTip: Para acceder al panel de administración de Django, debemos crear un superusuario con el siguiente comando.\npython manage.py createsuperuser\n\n\n\n\n\n\n\n\nTip\n\n\n\nSi realizamos modificaciones en el modelo de datos, debemos aplicar las migraciones con el siguiente comando.\n1python manage.py makemigrations\n2python manage.py migrate\n\n1\n\nCrea las migraciones.\n\n2\n\nAplica las migraciones.",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Modelos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/5_drf.html",
    "href": "unidades/unidad5/5_drf.html",
    "title": "Django Rest Framework",
    "section": "",
    "text": "Instalación\nPara instalar Django Rest Framework, ejecutamos el siguiente comando:\nUna vez instalado, añadimos ‘rest_framework’ a la lista de aplicaciones instaladas en el archivo settings.py:",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Django Rest Framework</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/5_drf.html#instalación",
    "href": "unidades/unidad5/5_drf.html#instalación",
    "title": "Django Rest Framework",
    "section": "",
    "text": "pip install djangorestframework\n\nINSTALLED_APPS = [\n    ...\n    'rest_framework',\n]",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Django Rest Framework</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/5_drf.html#actualizar-el-archivo-requirements.txt",
    "href": "unidades/unidad5/5_drf.html#actualizar-el-archivo-requirements.txt",
    "title": "Django Rest Framework",
    "section": "Actualizar el archivo requirements.txt",
    "text": "Actualizar el archivo requirements.txt\nEs necesario eliminar el archivo requirements.txt y volver a crearlo con el siguiente comando:\npip freeze &gt; requirements.txt",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Django Rest Framework</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/5_drf.html#serializers",
    "href": "unidades/unidad5/5_drf.html#serializers",
    "title": "Django Rest Framework",
    "section": "Serializers",
    "text": "Serializers\nLos serializadores nos permiten convertir los datos de nuestro modelo en un formato que pueda ser fácilmente consumido por una API REST.\nPara crear un serializador, creamos un archivo serializers.py en la carpeta de nuestra aplicación y añadimos el siguiente código:\nfrom rest_framework import serializers\nfrom .models import Producto\n\nclass ProductoSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Producto\n        fields = '__all__'",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Django Rest Framework</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/5_drf.html#views",
    "href": "unidades/unidad5/5_drf.html#views",
    "title": "Django Rest Framework",
    "section": "Views",
    "text": "Views\nLas vistas en Django Rest Framework son similares a las vistas en Django. En lugar de devolver una respuesta HTML, devuelven una respuesta JSON que puede ser consumida por una API REST.\nPara crear una vista, creamos un archivo views.py en la carpeta de nuestra aplicación y añadimos el siguiente código:\nfrom rest_framework import viewsets\nfrom .serializers import ProductoSerializer\nfrom .models import Producto\n\nclass ProductoViewSet(viewsets.ModelViewSet):\n    queryset = Producto.objects.all()\n    serializer_class = ProductoSerializer",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Django Rest Framework</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/5_drf.html#urls-de-la-aplicación",
    "href": "unidades/unidad5/5_drf.html#urls-de-la-aplicación",
    "title": "Django Rest Framework",
    "section": "URLs de la Aplicación",
    "text": "URLs de la Aplicación\nPara conectar nuestras vistas con las URLs de nuestra aplicación, creamos un archivo urls.py en la carpeta de nuestra aplicación y añadimos el siguiente código:\nfrom django.urls import path\nfrom .views import ProductoViewSet\n\nurlpatterns = [\n    path('api/productos/', ProductoViewSet.as_view({'get': 'list', 'post': 'create'}), name='api-productos'),\n    path('api/productos/&lt;int:pk&gt;/', ProductoViewSet.as_view({'get': 'retrieve', 'put': 'update', 'delete': 'destroy'}), name='api-producto-detail'),\n]",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Django Rest Framework</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/5_drf.html#configuración-urls-del-proyecto",
    "href": "unidades/unidad5/5_drf.html#configuración-urls-del-proyecto",
    "title": "Django Rest Framework",
    "section": "Configuración URLs del Proyecto",
    "text": "Configuración URLs del Proyecto\nPara configurar nuestra API REST, añadimos las URLs de nuestra aplicación a las URLs del proyecto en el archivo urls.py de la carpeta del proyecto:\nfrom django.contrib import admin\nfrom django.urls import path, include\nfrom rest_framework import routers\nfrom productos.views import ProductoViewSet\n\n# Creamos un enrutador para las vistas de Django REST Framework\nrouter = routers.DefaultRouter()\nrouter.register(r'productos', ProductoViewSet)\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('productos.urls')),\n    path('api/', include(router.urls)),\n]",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Django Rest Framework</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/5_drf.html#migraciones",
    "href": "unidades/unidad5/5_drf.html#migraciones",
    "title": "Django Rest Framework",
    "section": "Migraciones",
    "text": "Migraciones\nAntes de utilizar nuestra API REST, debemos aplicar las migraciones necesarias para crear las tablas en la base de datos:\npython manage.py makemigrations\npython manage.py migrate",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Django Rest Framework</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/5_drf.html#ejecución",
    "href": "unidades/unidad5/5_drf.html#ejecución",
    "title": "Django Rest Framework",
    "section": "Ejecución",
    "text": "Ejecución\nUna vez configurada nuestra API REST, podemos ejecutar el servidor de desarrollo de Django y acceder a la API a través de un navegador o una herramienta como Postman:\npython manage.py runserver\nEn este caso, la API estará disponible en la ruta ‘http://127.0.0.1:8000/api/productos/’.",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Django Rest Framework</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/5_drf.html#primero-instalamos-coreapi",
    "href": "unidades/unidad5/5_drf.html#primero-instalamos-coreapi",
    "title": "Django Rest Framework",
    "section": "Primero instalamos CoreAPI:",
    "text": "Primero instalamos CoreAPI:\npip install coreapi\nPara generar la documentación automáticamente, agregamos la configuración en settings.py:\nREST_FRAMEWORK = {\n    'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema'\n}\nLuego, añadimos la vista de esquema en el archivo urls.py de la carpeta del proyecto:\nfrom rest_framework.schemas import get_schema_view\n\nschema_view = get_schema_view(title='API de Productos')\n\nurlpatterns += [\n    path('docs/', schema_view, name='api-docs'),\n]\nAhora podemos ejecutar el servidor de desarrollo y acceder a la documentación generada por CoreAPI en la ruta ‘/docs/’:\npython manage.py runserver\nCon estos pasos, hemos integrado Django Rest Framework, documentado nuestra API con drf-yasg y CoreAPI.",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Django Rest Framework</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/6_testing.html",
    "href": "unidades/unidad5/6_testing.html",
    "title": "Testing",
    "section": "",
    "text": "Vamos a empezar la parte de testing para ello vamos a crear en la ruta raiz el archivo pytest.ini\n[pytest]\n\nDJANGO_SETTINGS_MODULE = inventario.test_settings\n\npython_files = tests.py test_*.py *_tests.py\nAhora vamos a crear el archivo test_settings.py en la carpeta inventario\nfrom .settings import *\n\n# Configuraciones adicionales para el entorno de prueba\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': ':memory:',\n    }\n}\nAhora vamos a crear el archivo test_productos.py en la carpeta inventario\nimport pytest\nfrom productos.models import Producto\n\n@pytest.mark.django_db\ndef test_crear_producto():\n    producto = Producto.objects.create(\n        nombre=\"Producto de prueba\",\n        precio=10.00,\n        cantidad=5\n    )\n    assert producto.nombre == \"Producto de prueba\"\n    assert producto.precio == 10.00\n    assert producto.cantidad == 5\n\n@pytest.mark.django_db\ndef test_str_producto():\n    producto = Producto.objects.create(\n        nombre=\"Producto de prueba\",\n        precio=10.00,\n        cantidad=5\n    )\n    assert str(producto) == \"Producto de prueba\"\nAhora vamos a ejecutar el comando pytest\npytest\nSi todo esta correcto deberiamos ver algo como esto\n====================================================== test session starts ======================================================\nplatform linux -- Python 3.12.3, pytest-8.2.0, pluggy-1.5.0\ndjango: version: 4.2, settings: inventario.test_settings (from ini)\nrootdir: /home/statick/workspaces/Curso_django_and_react/inventario_django\nconfigfile: pytest.ini\nplugins: django-4.8.0\ncollected 2 items                                                                                                               \n\nproductos/tests/test_productos.py ..                                                                                      [100%]\n\n======================================================= warnings summary ========================================================\nCon esto podemos ver que los test han pasado correctamente.\nPodemos ver que pytest.ini tiene la configuracion de DJANGO_SETTINGS_MODULE = inventario.test_settings, esto es para que pytest pueda encontrar las configuraciones de django.",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Testing</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/7_correccion_test.html",
    "href": "unidades/unidad5/7_correccion_test.html",
    "title": "Corrección de tests en Django Rest Framework",
    "section": "",
    "text": "Introducción\nEn este documento se describen los pasos necesarios para corregir los tests de Django Rest Framework.\nActualmente tenemos el siguiente error en los tests:",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Corrección de tests en Django Rest Framework</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/7_correccion_test.html#introducción",
    "href": "unidades/unidad5/7_correccion_test.html#introducción",
    "title": "Corrección de tests en Django Rest Framework",
    "section": "",
    "text": "================================================== test session starts ===================================================\nplatform linux -- Python 3.12.3, pytest-8.2.0, pluggy-1.5.0\nrootdir: /home/statick/workspaces/Curso_django_and_react/inventario_django\ncollected 0 items / 1 error                                                                                              \n\n========================================================= ERRORS =========================================================\n________________________________________ ERROR collecting productos/test_views.py ________________________________________\nImportError while importing test module '/home/statick/workspaces/Curso_django_and_react/inventario_django/productos/test_views.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\n/usr/lib64/python3.12/importlib/__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\nproductos/test_views.py:1: in &lt;module&gt;\n    from django.urls import reverse\nE   ModuleNotFoundError: No module named 'django'\n================================================ short test summary info =================================================\nERROR productos/test_views.py\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n==================================================== 1 error in 0.07s ====================================================",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Corrección de tests en Django Rest Framework</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/7_correccion_test.html#pasos",
    "href": "unidades/unidad5/7_correccion_test.html#pasos",
    "title": "Corrección de tests en Django Rest Framework",
    "section": "Pasos",
    "text": "Pasos\n\n1. Crear un entorno virtual\npython3 -m venv venv\n\n\n2. Activar el entorno virtual\nsource venv/bin/activate\n\n\n3. Instalar las dependencias\npip install -r requirements.txt\n\n\n4. Correr los tests\npytest\n\n\n5. Corregir los tests\nPara corregir los tests, se debe modificar el archivo productos/test_views.py y corregir el error de importación.\n\n\n6. Correr los tests nuevamente\npytest\n\n\n7. Desactivar el entorno virtual\ndeactivate",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Corrección de tests en Django Rest Framework</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/7_correccion_test.html#conclusión",
    "href": "unidades/unidad5/7_correccion_test.html#conclusión",
    "title": "Corrección de tests en Django Rest Framework",
    "section": "Conclusión",
    "text": "Conclusión\nUna vez corregidos los tests, se debe hacer un pull request al repositorio original.",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Corrección de tests en Django Rest Framework</span>"
    ]
  },
  {
    "objectID": "unidades/unidad5/7_correccion_test.html#referencias",
    "href": "unidades/unidad5/7_correccion_test.html#referencias",
    "title": "Corrección de tests en Django Rest Framework",
    "section": "Referencias",
    "text": "Referencias\n\nDjango Rest Framework\nDjango\npytest\nVirtualenv\nPython\nGit\nGitHub\nMarkdown\nPip",
    "crumbs": [
      "Unidad 5: Django",
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Corrección de tests en Django Rest Framework</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/1_introduccion_frontend.html",
    "href": "unidades/unidad6/1_introduccion_frontend.html",
    "title": "Introducción a HTML",
    "section": "",
    "text": "Estructura básica de un documento HTML\nUn documento HTML tiene una estructura básica que debe seguir. Esta estructura es la siguiente:\nA continuación se describen las partes de un documento HTML:",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Introducción a HTML</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/1_introduccion_frontend.html#estructura-básica-de-un-documento-html",
    "href": "unidades/unidad6/1_introduccion_frontend.html#estructura-básica-de-un-documento-html",
    "title": "Introducción a HTML",
    "section": "",
    "text": "&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Título de la página&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;!-- Contenido de la página --&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n\n\n!DOCTYPE html: Define la versión de HTML que se está utilizando. En este caso, HTML 5.\nhtml: Es el elemento raíz de un documento HTML.\nhead: Contiene información sobre el documento, como su título.\ntitle: Define el título de la página, que se muestra en la pestaña del navegador.\nbody: Contiene el contenido de la página, como texto, imágenes, videos, etc.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Introducción a HTML</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/1_introduccion_frontend.html#etiquetas-html",
    "href": "unidades/unidad6/1_introduccion_frontend.html#etiquetas-html",
    "title": "Introducción a HTML",
    "section": "Etiquetas HTML",
    "text": "Etiquetas HTML\nLas etiquetas HTML son los bloques de construcción de un documento HTML. Las etiquetas se utilizan para definir la estructura y el contenido de la página. Cada etiqueta tiene un propósito específico y puede contener otros elementos HTML.\nA continuación se muestran algunas etiquetas HTML comunes:\n\n**\n\na\n\n**: Define encabezados de diferentes tamaños.\n**\n\n**: Define un párrafo de texto.\n: Define un enlace a otra página.\n: Define una imagen.\n**\n\n**: Define una lista desordenada.\n**\n\n**: Define una lista ordenada.\n**\n\n**: Define un elemento de lista.\n**\n\n**: Define una tabla.**\n\n**: Define una fila en una tabla.**\n\n\n\n**: Define una celda en una tabla.\n**\n\n**: Define una sección genérica de una página.\n: Define una sección en línea de una página.\n\n\n\nAtributos HTML\nLos atributos HTML proporcionan información adicional sobre los elementos HTML. Los atributos se especifican en la etiqueta de inicio y se utilizan para modificar el comportamiento o la apariencia del elemento.\nA continuación se muestran algunos atributos HTML comunes:\n\nhref: Especifica la URL de destino de un enlace.\nsrc: Especifica la URL de origen de una imagen.\nalt: Especifica un texto alternativo para una imagen.\nwidth: Especifica el ancho de un elemento.\nheight: Especifica la altura de un elemento.\nstyle: Especifica estilos CSS para un elemento.\n\n\n\nEjemplo de un documento HTML\nA continuación se muestra un ejemplo de un documento HTML básico que contiene un encabezado, un párrafo de texto y una imagen:\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Ejemplo de HTML&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;Este es un encabezado&lt;/h1&gt;\n        &lt;p&gt;Este es un párrafo de texto.&lt;/p&gt;\n        &lt;img src=\"imagen.jpg\" alt=\"Una imagen\"&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\nEn este ejemplo, se define un encabezado de nivel 1 con el texto “Este es un encabezado”, un párrafo de texto con el texto “Este es un párrafo de texto” y una imagen con la URL “imagen.jpg” y el texto alternativo “Una imagen”.\n\n\nRecursos adicionales\n\nW3Schools HTML Tutorial\nMozilla Developer Network HTML Guide\nHTML Reference\nHTML Cheat Sheet\n\n\n\nEjercicios\n\nCrea un documento HTML que contenga un encabezado de nivel 1 con el texto “Hola, mundo!” y un párrafo de texto con el texto “Este es un ejemplo de un documento HTML básico”.\nCrea un documento HTML que contenga una lista desordenada con tres elementos de lista. Los elementos de lista deben contener los siguientes textos: “Elemento 1”, “Elemento 2” y “Elemento 3”.\nCrea un documento HTML que contenga una tabla con tres filas y tres columnas. En cada celda de la tabla, coloca un número del 1 al 9.\nCrea un documento HTML que contenga un enlace a la página de Google. El enlace debe tener el texto “Ir a Google” y debe abrirse en una nueva pestaña del navegador.\nCrea un documento HTML que contenga una imagen de tu elección. La imagen debe tener un ancho de 200 píxeles y un alto de 200 píxeles.\n\n\n\n\n\n \n\n\n  \n      \n         Corrección de tests en Django Rest Framework\n                \n  \n  \n      \n        Introducción a CSS \n      \n  \n\n \n\n  \n    \n       \n       \n    \n      \n    \n    \nAbout\n\n    \n    \n    \nLicense",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Introducción a HTML</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/1_introduccion_frontend.html#atributos-html",
    "href": "unidades/unidad6/1_introduccion_frontend.html#atributos-html",
    "title": "Introducción a HTML",
    "section": "Atributos HTML",
    "text": "Atributos HTML\nLos atributos HTML proporcionan información adicional sobre los elementos HTML. Los atributos se especifican en la etiqueta de inicio y se utilizan para modificar el comportamiento o la apariencia del elemento.\nA continuación se muestran algunos atributos HTML comunes:\n\nhref: Especifica la URL de destino de un enlace.\nsrc: Especifica la URL de origen de una imagen.\nalt: Especifica un texto alternativo para una imagen.\nwidth: Especifica el ancho de un elemento.\nheight: Especifica la altura de un elemento.\nstyle: Especifica estilos CSS para un elemento.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Introducción a HTML</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/1_introduccion_frontend.html#ejemplo-de-un-documento-html",
    "href": "unidades/unidad6/1_introduccion_frontend.html#ejemplo-de-un-documento-html",
    "title": "Introducción a HTML",
    "section": "Ejemplo de un documento HTML",
    "text": "Ejemplo de un documento HTML\nA continuación se muestra un ejemplo de un documento HTML básico que contiene un encabezado, un párrafo de texto y una imagen:\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Ejemplo de HTML&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;Este es un encabezado&lt;/h1&gt;\n        &lt;p&gt;Este es un párrafo de texto.&lt;/p&gt;\n        &lt;img src=\"imagen.jpg\" alt=\"Una imagen\"&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\nEn este ejemplo, se define un encabezado de nivel 1 con el texto “Este es un encabezado”, un párrafo de texto con el texto “Este es un párrafo de texto” y una imagen con la URL “imagen.jpg” y el texto alternativo “Una imagen”.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Introducción a HTML</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/1_introduccion_frontend.html#recursos-adicionales",
    "href": "unidades/unidad6/1_introduccion_frontend.html#recursos-adicionales",
    "title": "Introducción a HTML",
    "section": "Recursos adicionales",
    "text": "Recursos adicionales\n\nW3Schools HTML Tutorial\nMozilla Developer Network HTML Guide\nHTML Reference\nHTML Cheat Sheet",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Introducción a HTML</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/1_introduccion_frontend.html#ejercicios",
    "href": "unidades/unidad6/1_introduccion_frontend.html#ejercicios",
    "title": "Introducción a HTML",
    "section": "Ejercicios",
    "text": "Ejercicios\n\nCrea un documento HTML que contenga un encabezado de nivel 1 con el texto “Hola, mundo!” y un párrafo de texto con el texto “Este es un ejemplo de un documento HTML básico”.\nCrea un documento HTML que contenga una lista desordenada con tres elementos de lista. Los elementos de lista deben contener los siguientes textos: “Elemento 1”, “Elemento 2” y “Elemento 3”.\nCrea un documento HTML que contenga una tabla con tres filas y tres columnas. En cada celda de la tabla, coloca un número del 1 al 9.\nCrea un documento HTML que contenga un enlace a la página de Google. El enlace debe tener el texto “Ir a Google” y debe abrirse en una nueva pestaña del navegador.\nCrea un documento HTML que contenga una imagen de tu elección. La imagen debe tener un ancho de 200 píxeles y un alto de 200 píxeles.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>Introducción a HTML</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/2_introduccion_css.html",
    "href": "unidades/unidad6/2_introduccion_css.html",
    "title": "Introducción a CSS",
    "section": "",
    "text": "¿Qué es CSS?\nCSS es un lenguaje que describe el estilo de un documento HTML. CSS describe cómo se mostrarán los elementos HTML en la pantalla, en papel o en otros medios. CSS ahorra mucho trabajo. Puede controlar el diseño de varias páginas web a la vez.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>Introducción a CSS</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/2_introduccion_css.html#cómo-funciona-css",
    "href": "unidades/unidad6/2_introduccion_css.html#cómo-funciona-css",
    "title": "Introducción a CSS",
    "section": "¿Cómo funciona CSS?",
    "text": "¿Cómo funciona CSS?\nCuando un navegador lee un documento HTML, construye un modelo de objeto de documento (DOM) basado en el contenido del documento. El navegador luego aplica CSS al DOM para determinar cómo se deben mostrar los elementos HTML en la pantalla.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>Introducción a CSS</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/2_introduccion_css.html#cómo-se-aplica-css-a-un-documento-html",
    "href": "unidades/unidad6/2_introduccion_css.html#cómo-se-aplica-css-a-un-documento-html",
    "title": "Introducción a CSS",
    "section": "¿Cómo se aplica CSS a un documento HTML?",
    "text": "¿Cómo se aplica CSS a un documento HTML?\nHay tres formas de aplicar CSS a un documento HTML:\n\nCSS externo: El CSS externo se define en un archivo .css separado y se aplica a un documento HTML con la etiqueta &lt;link&gt;.\nCSS interno: El CSS interno se define en la sección &lt;style&gt; de un documento HTML y se aplica a ese documento HTML.\nCSS en línea: El CSS en línea se define en el atributo style de un elemento HTML.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>Introducción a CSS</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/2_introduccion_css.html#sintaxis-de-css",
    "href": "unidades/unidad6/2_introduccion_css.html#sintaxis-de-css",
    "title": "Introducción a CSS",
    "section": "Sintaxis de CSS",
    "text": "Sintaxis de CSS\nUn archivo CSS consta de un conjunto de reglas CSS. Cada regla CSS consta de un selector y un bloque de declaración.\nselector {\n  propiedad: valor;\n}\n\nSelector: Un selector es un nombre que identifica un elemento HTML al que se aplicará un estilo.\nPropiedad: Una propiedad es un atributo de un elemento HTML que se puede cambiar con CSS.\nValor: Un valor es el valor que se asigna a una propiedad.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>Introducción a CSS</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/2_introduccion_css.html#ejemplo-de-css",
    "href": "unidades/unidad6/2_introduccion_css.html#ejemplo-de-css",
    "title": "Introducción a CSS",
    "section": "Ejemplo de CSS",
    "text": "Ejemplo de CSS\nh1 {\n  color: blue;\n  font-size: 24px;\n}\n\np {\n  color: red;\n  font-size: 16px;\n}\nEn este ejemplo, el selector h1 selecciona todos los elementos &lt;h1&gt; en el documento HTML y les aplica un color azul y un tamaño de fuente de 24 píxeles. El selector p selecciona todos los elementos &lt;p&gt; en el documento HTML y les aplica un color rojo y un tamaño de fuente de 16 píxeles.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>Introducción a CSS</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/2_introduccion_css.html#comentarios-en-css",
    "href": "unidades/unidad6/2_introduccion_css.html#comentarios-en-css",
    "title": "Introducción a CSS",
    "section": "Comentarios en CSS",
    "text": "Comentarios en CSS\nLos comentarios en CSS se pueden agregar entre /* y */.\n/* Este es un comentario en CSS */",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>Introducción a CSS</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/2_introduccion_css.html#selectores-css",
    "href": "unidades/unidad6/2_introduccion_css.html#selectores-css",
    "title": "Introducción a CSS",
    "section": "Selectores CSS",
    "text": "Selectores CSS\nLos selectores CSS se utilizan para seleccionar los elementos HTML a los que se aplicará un estilo. Hay varios tipos de selectores CSS:\n\nSelector de tipo: Selecciona todos los elementos de un tipo específico.\n\nh1 {\n  color: blue;\n}\n\nSelector de clase: Selecciona todos los elementos que tienen un atributo class específico.\n\n.blue-text {\n  color: blue;\n}\n\nSelector de ID: Selecciona un elemento que tiene un atributo id específico.\n\n#blue-text {\n  color: blue;\n}\n\nSelector de atributo: Selecciona elementos con un atributo específico.\n\n[title] {\n  color: blue;\n}\n\nSelector de combinación: Selecciona elementos que coinciden con varios selectores.\n\nh1, p {\n  color: blue;\n}\n\nSelector descendente: Selecciona elementos que son descendientes de otro elemento.\n\ndiv p {\n  color: blue;\n}\n\nSelector de hijo: Selecciona elementos que son hijos directos de otro elemento.\n\ndiv &gt; p {\n  color: blue;\n}\n\nSelector de hermano adyacente: Selecciona elementos que son hermanos adyacentes de otro elemento.\n\np + p {\n  color: blue;\n}\n\nSelector de hermano general: Selecciona elementos que son hermanos de otro elemento.\n\np ~ p {\n  color: blue;\n}",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>Introducción a CSS</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/2_introduccion_css.html#propiedades-css",
    "href": "unidades/unidad6/2_introduccion_css.html#propiedades-css",
    "title": "Introducción a CSS",
    "section": "Propiedades CSS",
    "text": "Propiedades CSS\nLas propiedades CSS se utilizan para cambiar el aspecto de los elementos HTML. Hay muchas propiedades CSS que se pueden utilizar para cambiar el aspecto de los elementos HTML. Algunas de las propiedades CSS más comunes son:\n\ncolor: Establece el color del texto.\n\nh1 {\n  color: blue;\n}\n\nfont-size: Establece el tamaño de la fuente.\n\nh1 {\n  font-size: 24px;\n}\n\nfont-family: Establece la fuente del texto.\n\nh1 {\n  font-family: Arial, sans-serif;\n}\n\ntext-align: Establece la alineación del texto.\n\nh1 {\n  text-align: center;\n}\n\nbackground-color: Establece el color de fondo.\n\nbody {\n  background-color: lightgray;\n}\n\nborder: Establece el borde de un elemento.\n\ndiv {\n  border: 1px solid black;\n}\n\nmargin: Establece el margen de un elemento.\n\ndiv {\n  margin: 10px;\n}\n\npadding: Establece el relleno de un elemento.\n\ndiv {\n  padding: 10px;\n}\n\nwidth: Establece el ancho de un elemento.\n\ndiv {\n  width: 100px;\n}\n\nheight: Establece la altura de un elemento.\n\ndiv {\n  height: 100px;\n}\n\ndisplay: Establece cómo se mostrará un elemento.\n\ndiv {\n  display: block;\n}\n\nspan {\n  display: inline;\n}\n\nposition: Establece la posición de un elemento.\n\ndiv {\n  position: relative;\n}\n\ntop: Establece la posición superior de un elemento.\n\ndiv {\n  top: 10px;\n}\n\nright: Establece la posición derecha de un elemento.\n\ndiv {\n  right: 10px;\n}\n\nbottom: Establece la posición inferior de un elemento.\n\ndiv {\n  bottom: 10px;\n}\n\nleft: Establece la posición izquierda de un elemento.\n\ndiv {\n  left: 10px;\n}\n\nfloat: Establece si un elemento flotará a la izquierda, a la derecha o no flotará.\n\nimg {\n  float: left;\n}\n\nclear: Establece si un elemento debe estar al lado de los elementos flotantes o no.\n\ndiv {\n  clear: both;\n}\n\nz-index: Establece la pila de elementos.\n\ndiv {\n  z-index: 1;\n}\n\nopacity: Establece la opacidad de un elemento.\n\ndiv {\n  opacity: 0.5;\n}\n\nvisibility: Establece si un elemento es visible o no.\n\ndiv {\n  visibility: hidden;\n}\n\noverflow: Establece cómo se manejará el desbordamiento de un elemento.\n\ndiv {\n  overflow: hidden;\n}\n\ncursor: Establece el cursor del ratón cuando se coloca sobre un elemento.\n\na {\n  cursor: pointer;\n}\n\nlist-style-type: Establece el tipo de marcador de una lista.\n\nul {\n  list-style-type: square;\n}\n\ntext-decoration: Establece la decoración del texto.\n\na {\n  text-decoration: none;\n}\n\ntext-transform: Establece cómo se transformará el texto.\n\nh1 {\n  text-transform: uppercase;\n}\n\ntext-shadow: Establece la sombra del texto.\n\nh1 {\n  text-shadow: 2px 2px 5px red;\n}\n\nbox-shadow: Establece la sombra de un cuadro.\n\ndiv {\n  box-shadow: 2px 2px 5px gray;\n}\n\nborder-radius: Establece el radio de los bordes de un elemento.\n\ndiv {\n  border-radius: 10px;\n}\n\n**transition\n\ndiv {\n  transition: width 2s, height 2s;\n}\n\n**animation\n\ndiv {\n  animation: example 5s infinite;\n}",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>Introducción a CSS</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/2_introduccion_css.html#unidades-css",
    "href": "unidades/unidad6/2_introduccion_css.html#unidades-css",
    "title": "Introducción a CSS",
    "section": "Unidades CSS",
    "text": "Unidades CSS\nLas unidades CSS se utilizan para especificar longitudes y tamaños. Hay varias unidades CSS que se pueden utilizar para especificar longitudes y tamaños. Algunas de las unidades CSS más comunes son:\n\npx: Píxeles.\n\nh1 {\n  font-size: 24px;\n}\n\nem: Relativo al tamaño de la fuente del elemento.\n\nh1 {\n  font-size: 2em;\n}\n\nrem: Relativo al tamaño de la fuente del elemento raíz.\n\nh1 {\n  font-size: 2rem;\n}\n\n%: Porcentaje del tamaño del contenedor.\n\ndiv {\n  width: 50%;\n}\n\nimg {\n  width: 100%;\n}\n\nvw: Porcentaje del ancho de la ventana gráfica.\n\ndiv {\n  width: 50vw;\n}\n\nimg {\n  width: 100vw;\n}",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>20</span>  <span class='chapter-title'>Introducción a CSS</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/3_introduccion_javascript.html",
    "href": "unidades/unidad6/3_introduccion_javascript.html",
    "title": "JavaScript",
    "section": "",
    "text": "¿Qué es JavaScript?\nJavaScript es un lenguaje de programación que se utiliza para crear páginas web interactivas. Es un lenguaje de programación del lado del cliente, lo que significa que se ejecuta en el navegador del usuario, en lugar de en el servidor web.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>JavaScript</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/3_introduccion_javascript.html#dónde-puedo-aprender-javascript",
    "href": "unidades/unidad6/3_introduccion_javascript.html#dónde-puedo-aprender-javascript",
    "title": "JavaScript",
    "section": "¿Dónde puedo aprender JavaScript?",
    "text": "¿Dónde puedo aprender JavaScript?\nHay muchos recursos en línea que puedes utilizar para aprender JavaScript. Algunos de los recursos más populares incluyen:\n\nCodecademy\nMDN Web Docs\nW3Schools",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>JavaScript</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/3_introduccion_javascript.html#qué-puedo-hacer-con-javascript",
    "href": "unidades/unidad6/3_introduccion_javascript.html#qué-puedo-hacer-con-javascript",
    "title": "JavaScript",
    "section": "¿Qué puedo hacer con JavaScript?",
    "text": "¿Qué puedo hacer con JavaScript?\nJavaScript se utiliza para crear páginas web interactivas. Algunas de las cosas que puedes hacer con JavaScript incluyen:\n\nValidar formularios\nCrear animaciones\nCrear juegos\nCrear aplicaciones web",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>JavaScript</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/3_introduccion_javascript.html#qué-es-un-script-de-javascript",
    "href": "unidades/unidad6/3_introduccion_javascript.html#qué-es-un-script-de-javascript",
    "title": "JavaScript",
    "section": "¿Qué es un script de JavaScript?",
    "text": "¿Qué es un script de JavaScript?\nUn script de JavaScript es un archivo de texto que contiene código JavaScript. Los scripts de JavaScript se pueden incrustar en una página web utilizando la etiqueta script. Los scripts de JavaScript se utilizan para agregar interactividad a una página web.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>JavaScript</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/3_introduccion_javascript.html#dónde-puedo-ejecutar-javascript",
    "href": "unidades/unidad6/3_introduccion_javascript.html#dónde-puedo-ejecutar-javascript",
    "title": "JavaScript",
    "section": "¿Dónde puedo ejecutar JavaScript?",
    "text": "¿Dónde puedo ejecutar JavaScript?\nJavaScript se puede ejecutar en cualquier navegador web moderno. Algunos de los navegadores web más populares que admiten JavaScript incluyen:\n\nGoogle Chrome\nMozilla Firefox\nMicrosoft Edge\nSafari\n\nSin embargo tambien es posible ejecutar JavaScript en el servidor utilizando Node.js.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>JavaScript</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/3_introduccion_javascript.html#qué-es-node.js",
    "href": "unidades/unidad6/3_introduccion_javascript.html#qué-es-node.js",
    "title": "JavaScript",
    "section": "¿Qué es Node.js?",
    "text": "¿Qué es Node.js?\nNode.js es un entorno de ejecución de JavaScript del lado del servidor que permite a los desarrolladores crear aplicaciones web utilizando JavaScript. Node.js se basa en el motor de JavaScript V8 de Google Chrome y proporciona una forma de ejecutar JavaScript en el servidor.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>JavaScript</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/3_introduccion_javascript.html#dónde-puedo-aprender-node.js",
    "href": "unidades/unidad6/3_introduccion_javascript.html#dónde-puedo-aprender-node.js",
    "title": "JavaScript",
    "section": "¿Dónde puedo aprender Node.js?",
    "text": "¿Dónde puedo aprender Node.js?\nHay muchos recursos en línea que puedes utilizar para aprender Node.js. Algunos de los recursos más populares incluyen:\n\nNode.js\nW3Schools\nMDN Web Docs",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>JavaScript</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/3_introduccion_javascript.html#qué-puedo-hacer-con-node.js",
    "href": "unidades/unidad6/3_introduccion_javascript.html#qué-puedo-hacer-con-node.js",
    "title": "JavaScript",
    "section": "¿Qué puedo hacer con Node.js?",
    "text": "¿Qué puedo hacer con Node.js?\nNode.js se utiliza para crear aplicaciones web del lado del servidor. Algunas de las cosas que puedes hacer con Node.js incluyen:\n\nCrear servidores web\nCrear aplicaciones web en tiempo real\nCrear aplicaciones de línea de comandos\nCrear aplicaciones de red",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>JavaScript</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/3_introduccion_javascript.html#ecmascript-6",
    "href": "unidades/unidad6/3_introduccion_javascript.html#ecmascript-6",
    "title": "JavaScript",
    "section": "Ecmascript 6",
    "text": "Ecmascript 6\nECMAScript 6 (también conocido como ES6 o ECMAScript 2015) es la sexta versión de ECMAScript, el estándar subyacente de JavaScript. ECMAScript 6 fue lanzado en junio de 2015 y trajo muchas nuevas características y mejoras al lenguaje JavaScript.\nAlgunas de las características más importantes de ECMAScript 6 incluyen:\n\nlet y const: Declaración de variables con let y const.\nArrow functions: Funciones de flecha.\nTemplate literals: Literales de plantilla.\nDestructuring: Desestructuración de objetos y arreglos.\nSpread operator: Operador de propagación.\nClasses: Clases.\nPromises: Promesas.\nAsync/Await: Async/Await.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>JavaScript</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/3_introduccion_javascript.html#motor-v8",
    "href": "unidades/unidad6/3_introduccion_javascript.html#motor-v8",
    "title": "JavaScript",
    "section": "Motor V8",
    "text": "Motor V8\nV8 es el motor de JavaScript de código abierto de Google que se utiliza en Google Chrome y en Node.js. V8 es un motor de JavaScript de alto rendimiento que compila el código JavaScript en código de máquina nativo antes de ejecutarlo.\nV8 utiliza una técnica de compilación just-in-time (JIT) para compilar el código JavaScript en tiempo de ejecución y optimizar su rendimiento. V8 es uno de los motores de JavaScript más rápidos y eficientes disponibles en la actualidad.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>JavaScript</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/3_introduccion_javascript.html#asincronismo",
    "href": "unidades/unidad6/3_introduccion_javascript.html#asincronismo",
    "title": "JavaScript",
    "section": "Asincronismo",
    "text": "Asincronismo\nEl asincronismo en JavaScript se utiliza para manejar operaciones asincrónicas, como la lectura de archivos, las solicitudes de red y las interacciones del usuario. JavaScript es un lenguaje de programación basado en eventos, lo que significa que puede ejecutar múltiples tareas simultáneamente sin bloquear el hilo principal.\nPara manejar operaciones asincrónicas en JavaScript, puedes utilizar callbacks, promesas o async/await. Los callbacks son funciones que se pasan como argumentos a otras funciones y se ejecutan cuando se completa una operación asincrónica. Las promesas son objetos que representan el resultado de una operación asincrónica y se pueden encadenar para manejar múltiples operaciones asincrónicas. Async/await es una forma más moderna de manejar operaciones asincrónicas en JavaScript y se basa en promesas.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>JavaScript</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/3_introduccion_javascript.html#programación-orientada-a-objetos",
    "href": "unidades/unidad6/3_introduccion_javascript.html#programación-orientada-a-objetos",
    "title": "JavaScript",
    "section": "Programación Orientada a Objetos",
    "text": "Programación Orientada a Objetos\nLa programación orientada a objetos (POO) en JavaScript se utiliza para crear objetos y clases que encapsulan datos y funciones relacionadas. JavaScript es un lenguaje de programación orientado a objetos, lo que significa que puedes crear objetos y clases para representar entidades del mundo real.\nPara crear una clase en JavaScript, utiliza la palabra clave class seguida del nombre de la clase y define las propiedades y métodos de la clase. Para crear un objeto en JavaScript, utiliza la palabra clave new seguida del nombre de la clase y los parámetros de la clase.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>JavaScript</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/3_introduccion_javascript.html#programación-funcional",
    "href": "unidades/unidad6/3_introduccion_javascript.html#programación-funcional",
    "title": "JavaScript",
    "section": "Programación Funcional",
    "text": "Programación Funcional\nLa programación funcional en JavaScript se utiliza para crear funciones que se pueden pasar como argumentos a otras funciones y se pueden utilizar para realizar operaciones en datos. JavaScript es un lenguaje de programación funcional, lo que significa que puedes crear funciones de primera clase y funciones de orden superior.\nPara crear una función en JavaScript, utiliza la palabra clave function seguida del nombre de la función y los parámetros de la función. Para crear una función de orden superior en JavaScript, utiliza funciones de flecha y funciones de retorno.\nCon estos temas cubiertos podemos comenzar a escribir código en JavaScript.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>JavaScript</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/3_introduccion_javascript.html#hola-mundo-en-javascript",
    "href": "unidades/unidad6/3_introduccion_javascript.html#hola-mundo-en-javascript",
    "title": "JavaScript",
    "section": "Hola Mundo en JavaScript",
    "text": "Hola Mundo en JavaScript\nPara crear un “Hola Mundo” en JavaScript, sigue estos pasos:\n\nAbre Visual Studio Code.\nCrea un nuevo archivo y guárdalo con la extensión .html.\nEscribe el siguiente código en el archivo:\n\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Hola Mundo en JavaScript&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1 id=\"mensaje\"&gt;&lt;/h1&gt;\n    &lt;script href='app.js'&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\nCrea un nuevo archivo y guárdalo con la extensión .js.\n\ndocument.getElementById(\"mensaje\").innerHTML = \"Hola Mundo!\";\n\nGuarda el archivo y ábrelo en un navegador web.\nDeberías ver un mensaje que dice “Hola Mundo!” en la página.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>JavaScript</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/3_introduccion_javascript.html#comentarios-en-javascript",
    "href": "unidades/unidad6/3_introduccion_javascript.html#comentarios-en-javascript",
    "title": "JavaScript",
    "section": "Comentarios en JavaScript",
    "text": "Comentarios en JavaScript\nLos comentarios en JavaScript se utilizan para explicar el código y hacerlo más legible. Los comentarios en JavaScript comienzan con // para comentarios de una sola línea.\n// Este es un comentario de una sola línea\nTambién puedes utilizar comentarios de varias líneas utilizando /* … */\n/*\nEste es un comentario de varias líneas\n*/",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>JavaScript</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/3_introduccion_javascript.html#variables-en-javascript",
    "href": "unidades/unidad6/3_introduccion_javascript.html#variables-en-javascript",
    "title": "JavaScript",
    "section": "Variables en JavaScript",
    "text": "Variables en JavaScript\nLas variables en JavaScript se utilizan para almacenar datos. Para declarar una variable en JavaScript, utiliza la palabra clave var, let o const seguida del nombre de la variable.\nvar nombre = \"Juan\";\nlet edad = 30;\nconst PI = 3.1416;\n\n\n\n\n\n\nTip\n\n\n\nSe recomienda utilizar let en lugar de var para declarar variables en JavaScript.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>JavaScript</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/3_introduccion_javascript.html#tipos-de-datos-en-javascript",
    "href": "unidades/unidad6/3_introduccion_javascript.html#tipos-de-datos-en-javascript",
    "title": "JavaScript",
    "section": "Tipos de datos en JavaScript",
    "text": "Tipos de datos en JavaScript\nJavaScript es un lenguaje de programación de tipado dinámico, lo que significa que no es necesario especificar el tipo de datos de una variable al declararla. JavaScript tiene varios tipos de datos, incluidos:\n\nString: Cadena de texto.\nNumber: Número.\nBoolean: Valor booleano (verdadero o falso).\nArray: Arreglo de elementos.\nObject: Objeto.\nFunction: Función.\nNull: Valor nulo.\nUndefined: Valor indefinido.\n\nlet nombre = \"Juan\"; // String\nlet edad = 30; // Number\nlet esMayor = true; // Boolean\nlet colores = [\"Rojo\", \"Verde\", \"Azul\"]; // Array\nlet persona = {nombre: \"Juan\", edad: 30}; // Object\nlet sumar = function(a, b) { return a + b; }; // Function\nlet nulo = null; // Null\nlet indefinido = undefined; // Undefined\n\nExisten otras opciones de tipos de datos de tipo null y undefined, pero estos son los más comunes.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>JavaScript</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/3_introduccion_javascript.html#operadores-en-javascript",
    "href": "unidades/unidad6/3_introduccion_javascript.html#operadores-en-javascript",
    "title": "JavaScript",
    "section": "Operadores en JavaScript",
    "text": "Operadores en JavaScript\nLos operadores en JavaScript se utilizan para realizar operaciones en variables y valores. Algunos de los operadores más comunes en JavaScript incluyen:\n\nOperadores aritméticos: +, -, *, /, %.\nOperadores de asignación: =, +=, -=, *=, /=.\nOperadores de comparación: ==, !=, ===, !==, &gt;, &lt;, &gt;=, &lt;=.\nOperadores lógicos: &&, ||, !.\nOperadores de incremento y decremento: ++, –.\nOperadores de concatenación: +.\n\nlet a = 10;\nlet b = 5;\n\nlet suma = a + b; // 15\nlet resta = a - b; // 5\nlet multiplicacion = a * b; // 50\nlet division = a / b; // 2\n\nlet igual = a == b; // false\nlet mayor = a &gt; b; // true\nlet menor = a &lt; b; // false\n\nlet and = (a &gt; 0) && (b &gt; 0); // true\nlet or = (a &gt; 0) || (b &gt; 0); // true\nlet not = !(a &gt; 0); // false\n\nlet incremento = a++; // 10\nlet decremento = b--; // 5\n\nlet cadena = \"Hola \" + \"Mundo!\"; // Hola Mundo!",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>JavaScript</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/3_introduccion_javascript.html#condicionales-en-javascript",
    "href": "unidades/unidad6/3_introduccion_javascript.html#condicionales-en-javascript",
    "title": "JavaScript",
    "section": "Condicionales en JavaScript",
    "text": "Condicionales en JavaScript\nLos condicionales en JavaScript se utilizan para tomar decisiones basadas en ciertas condiciones. Algunos de los condicionales más comunes en JavaScript incluyen:\n\nif: Se utiliza para ejecutar un bloque de código si una condición es verdadera.\nelse: Se utiliza para ejecutar un bloque de código si una condición es falsa.\nelse if: Se utiliza para ejecutar un bloque de código si la primera condición es falsa y la segunda condición es verdadera.\nswitch: Se utiliza para ejecutar diferentes bloques de código según diferentes casos.\n\nlet edad = 18;\n\nif (edad &gt;= 18) {\n    console.log(\"Eres mayor de edad\");\n} else {\n    console.log(\"Eres menor de edad\");\n}\n\nlet dia = \"Lunes\";\n\nswitch (dia) {\n    case \"Lunes\":\n        console.log(\"Hoy es Lunes\");\n        break;\n    case \"Martes\":\n        console.log(\"Hoy es Martes\");\n        break;\n    default:\n        console.log(\"Hoy es otro día\");\n}",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>JavaScript</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/3_introduccion_javascript.html#bucles-en-javascript",
    "href": "unidades/unidad6/3_introduccion_javascript.html#bucles-en-javascript",
    "title": "JavaScript",
    "section": "Bucles en JavaScript",
    "text": "Bucles en JavaScript\nLos bucles en JavaScript se utilizan para repetir una serie de instrucciones varias veces. Algunos de los bucles más comunes en JavaScript incluyen:\n\nfor: Se utiliza para repetir un bloque de código un número específico de veces.\nwhile: Se utiliza para repetir un bloque de código mientras una condición sea verdadera.\ndo…while: Se utiliza para repetir un bloque de código al menos una vez y luego repetirlo mientras una condición sea verdadera.\n\nfor (let i = 0; i &lt; 5; i++) {\n    console.log(i);\n}\n\nlet j = 0;\nwhile (j &lt; 5) {\n    console.log(j);\n    j++;\n}\n\nlet k = 0;\ndo {\n    console.log(k);\n    k++;\n} while (k &lt; 5);",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>JavaScript</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/3_introduccion_javascript.html#funciones-en-javascript",
    "href": "unidades/unidad6/3_introduccion_javascript.html#funciones-en-javascript",
    "title": "JavaScript",
    "section": "Funciones en JavaScript",
    "text": "Funciones en JavaScript\nLas funciones en JavaScript se utilizan para encapsular un bloque de código y reutilizarlo en diferentes partes de un programa. Para declarar una función en JavaScript, utiliza la palabra clave function seguida del nombre de la función y los parámetros de la función.\nfunction saludar(nombre) {\n    console.log(\"Hola \" + nombre);\n}\n\nsaludar(\"Juan\");",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>JavaScript</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/3_introduccion_javascript.html#eventos-en-javascript",
    "href": "unidades/unidad6/3_introduccion_javascript.html#eventos-en-javascript",
    "title": "JavaScript",
    "section": "Eventos en JavaScript",
    "text": "Eventos en JavaScript\nLos eventos en JavaScript se utilizan para manejar la interacción del usuario con una página web. Algunos de los eventos más comunes en JavaScript incluyen:\n\nclick: Se activa cuando se hace clic en un elemento.\nmouseover: Se activa cuando el puntero del ratón se mueve sobre un elemento.\nkeydown: Se activa cuando se presiona una tecla.\n\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Eventos en JavaScript&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;button id=\"boton\"&gt;Haz clic aquí&lt;/button&gt;\n    &lt;script href=\"script.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\ndocument.getElementById(\"boton\").addEventListener(\"click\", function() {\n    alert(\"Haz hecho clic en el botón\");\n});\nEn los archivos anteriore se muestra un ejemplo de cómo manejar eventos en JavaScript.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>JavaScript</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/3_introduccion_javascript.html#objetos-en-javascript",
    "href": "unidades/unidad6/3_introduccion_javascript.html#objetos-en-javascript",
    "title": "JavaScript",
    "section": "Objetos en JavaScript",
    "text": "Objetos en JavaScript\nLos objetos en JavaScript se utilizan para almacenar colecciones de datos y funciones. Para crear un objeto en JavaScript, utiliza llaves {} y define las propiedades y métodos del objeto.\nlet persona = {\n    nombre: \"Juan\",\n    edad: 30,\n    saludar: function() {\n        console.log(\"Hola, mi nombre es \" + this.nombre);\n    }\n};\n\nconsole.log(persona.nombre); // Juan\nconsole.log(persona.edad); // 30\npersona.saludar(); // Hola, mi nombre es Juan",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>JavaScript</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/3_introduccion_javascript.html#arrays-en-javascript",
    "href": "unidades/unidad6/3_introduccion_javascript.html#arrays-en-javascript",
    "title": "JavaScript",
    "section": "Arrays en JavaScript",
    "text": "Arrays en JavaScript\nLos arrays en JavaScript se utilizan para almacenar una colección de elementos. Para crear un array en JavaScript, utiliza corchetes [] y separa los elementos con comas.\nlet colores = [\"Rojo\", \"Verde\", \"Azul\"];\n\nconsole.log(colores[0]); // Rojo\nconsole.log(colores[1]); // Verde\nconsole.log(colores[2]); // Azul",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>JavaScript</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/3_introduccion_javascript.html#métodos-en-javascript",
    "href": "unidades/unidad6/3_introduccion_javascript.html#métodos-en-javascript",
    "title": "JavaScript",
    "section": "Métodos en JavaScript",
    "text": "Métodos en JavaScript\nLos métodos en JavaScript son funciones que se pueden llamar en un objeto. Algunos de los métodos más comunes en JavaScript incluyen:\n\npush(): Agrega un elemento al final de un array.\npop(): Elimina el último elemento de un array.\nshift(): Elimina el primer elemento de un array.\nunshift(): Agrega un elemento al principio de un array.\nsplice(): Agrega o elimina elementos de un array en una posición específica.\n\nlet colores = [\"Rojo\", \"Verde\", \"Azul\"];\n\ncolores.push(\"Amarillo\");\nconsole.log(colores); // [\"Rojo\", \"Verde\", \"Azul\", \"Amarillo\"]\n\ncolores.pop();\nconsole.log(colores); // [\"Rojo\", \"Verde\", \"Azul\"]\n\ncolores.shift();\nconsole.log(colores); // [\"Verde\", \"Azul\"]\n\ncolores.unshift(\"Rojo\");\nconsole.log(colores); // [\"Rojo\", \"Verde\", \"Azul\"]\n\ncolores.splice(1, 0, \"Amarillo\");\nconsole.log(colores); // [\"Rojo\", \"Amarillo\", \"Verde\", \"Azul\"]",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>JavaScript</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/3_introduccion_javascript.html#clases-en-javascript",
    "href": "unidades/unidad6/3_introduccion_javascript.html#clases-en-javascript",
    "title": "JavaScript",
    "section": "Clases en JavaScript",
    "text": "Clases en JavaScript\nLas clases en JavaScript se utilizan para crear objetos basados en un modelo. Para crear una clase en JavaScript, utiliza la palabra clave class seguida del nombre de la clase y define las propiedades y métodos de la clase.\nclass Persona {\n    constructor(nombre, edad) {\n        this.nombre = nombre;\n        this.edad = edad;\n    }\n\n    saludar() {\n        console.log(\"Hola, mi nombre es \" + this.nombre);\n    }\n}\n\nlet juan = new Persona(\"Juan\", 30);\nconsole.log(juan.nombre); // Juan\nconsole.log(juan.edad); // 30\njuan.saludar(); // Hola, mi nombre es Juan",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>JavaScript</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/3_introduccion_javascript.html#herencia-en-javascript",
    "href": "unidades/unidad6/3_introduccion_javascript.html#herencia-en-javascript",
    "title": "JavaScript",
    "section": "Herencia en JavaScript",
    "text": "Herencia en JavaScript\nLa herencia en JavaScript se utiliza para crear una clase basada en otra clase. Para heredar una clase en JavaScript, utiliza la palabra clave extends seguida del nombre de la clase padre.\nclass Empleado extends Persona {\n    constructor(nombre, edad, salario) {\n        super(nombre, edad);\n        this.salario = salario;\n    }\n\n    trabajar() {\n        console.log(\"Estoy trabajando\");\n    }\n}\n\nlet pedro = new Empleado(\"Pedro\", 25, 20000);\nconsole.log(pedro.nombre); // Pedro\nconsole.log(pedro.edad); // 25\nconsole.log(pedro.salario); // 20000\npedro.saludar(); // Hola, mi nombre es Pedro\npedro.trabajar(); // Estoy trabajando",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>JavaScript</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/3_introduccion_javascript.html#promesas-en-javascript",
    "href": "unidades/unidad6/3_introduccion_javascript.html#promesas-en-javascript",
    "title": "JavaScript",
    "section": "Promesas en JavaScript",
    "text": "Promesas en JavaScript\nLas promesas en JavaScript se utilizan para manejar operaciones asincrónicas. Una promesa puede estar en uno de los siguientes estados:\n\nPendiente: La operación aún no se ha completado.\nCumplida: La operación se ha completado con éxito.\nRechazada: La operación ha fallado.\n\nlet promesa = new Promise(function(resolve, reject) {\n    setTimeout(function() {\n        let exito = true;\n\n        if (exito) {\n            resolve(\"La operación se ha completado con éxito\");\n        } else {\n            reject(\"La operación ha fallado\");\n        }\n    }, 2000);\n});\n\npromesa.then(function(resultado) {\n    console.log(resultado);\n}).catch(function(error) {\n    console.log(error);\n});",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>JavaScript</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/3_introduccion_javascript.html#asyncawait-en-javascript",
    "href": "unidades/unidad6/3_introduccion_javascript.html#asyncawait-en-javascript",
    "title": "JavaScript",
    "section": "Async/Await en JavaScript",
    "text": "Async/Await en JavaScript\nAsync/Await en JavaScript se utiliza para manejar operaciones asincrónicas de forma más sencilla. La palabra clave async se utiliza para declarar una función asincrónica, mientras que la palabra clave await se utiliza para esperar a que una promesa se resuelva.\nasync function operacion() {\n    let promesa = new Promise(function(resolve, reject) {\n        setTimeout(function() {\n            let exito = true;\n\n            if (exito) {\n                resolve(\"La operación se ha completado con éxito\");\n            } else {\n                reject(\"La operación ha fallado\");\n            }\n        }, 2000);\n    });\n\n    let resultado = await promesa;\n    console.log(resultado);\n}\n\noperacion();",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>JavaScript</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/3_introduccion_javascript.html#consumir-una-api-con-fetch",
    "href": "unidades/unidad6/3_introduccion_javascript.html#consumir-una-api-con-fetch",
    "title": "JavaScript",
    "section": "Consumir una api con fetch",
    "text": "Consumir una api con fetch\nEn esta sección vamos a consumir una api de pokemon con fetch, para ello vamos a seguir los siguientes pasos:\n\nAbre Visual Studio Code.\nCrea un nuevo archivo y guárdalo con la extensión .html.\nEscribe el siguiente código en el archivo:\n\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Consumir una api con fetch&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;ul id=\"pokemones\"&gt;&lt;/ul&gt;\n    &lt;script href=\"script.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\nCrea un nuevo archivo y guárdalo con la extensión .js.\n\nfetch(\"https://pokeapi.co/api/v2/pokemon\")\n    .then(response =&gt; response.json())\n    .then(data =&gt; {\n        let pokemones = data.results;\n\n        pokemones.forEach(pokemon =&gt; {\n            let li = document.createElement(\"li\");\n            li.textContent = pokemon.name;\n            document.getElementById(\"pokemones\").appendChild(li);\n        });\n    })\n    .catch(error =&gt; console.log(error));\n\nGuarda el archivo y ábrelo en un navegador web.\nDeberías ver una lista de nombres de pokemones en la página.\n\nEn los archivos anteriores se muestra un ejemplo de cómo consumir una api con fetch en JavaScript.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>JavaScript</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/3_introduccion_javascript.html#crear-una-aplicación-web-con-javascript",
    "href": "unidades/unidad6/3_introduccion_javascript.html#crear-una-aplicación-web-con-javascript",
    "title": "JavaScript",
    "section": "Crear una aplicación web con JavaScript",
    "text": "Crear una aplicación web con JavaScript\nEn esta sección vamos a crear una aplicación web con JavaScript, para ello vamos a seguir los siguientes pasos:\n\nAbre Visual Studio Code.\nCrea un nuevo archivo y guárdalo con la extensión .html.\nEscribe el siguiente código en el archivo:\n\n\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Crear una aplicación web con JavaScript&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Calculadora&lt;/h1&gt;\n    &lt;input type=\"text\" id=\"numero1\"&gt;\n    &lt;input type=\"text\" id=\"numero2\"&gt;\n    &lt;button onclick=\"sumar()\"&gt;Sumar&lt;/button&gt;\n    &lt;button onclick=\"restar()\"&gt;Restar&lt;/button&gt;\n    &lt;button onclick=\"multiplicar()\"&gt;Multiplicar&lt;/button&gt;\n    &lt;button onclick=\"dividir()\"&gt;Dividir&lt;/button&gt;\n    &lt;h2 id=\"resultado\"&gt;&lt;/h2&gt;\n    &lt;script href=\"script.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\nCrea un nuevo archivo y guárdalo con la extensión .js.\n\nfunction sumar() {\n    let numero1 = parseInt(document.getElementById(\"numero1\").value);\n    let numero2 = parseInt(document.getElementById(\"numero2\").value);\n    let resultado = numero1 + numero2;\n    document.getElementById(\"resultado\").textContent = resultado;\n}\n\nfunction restar() {\n    let numero1 = parseInt(document.getElementById(\"numero1\").value);\n    let numero2 = parseInt(document.getElementById(\"numero2\").value);\n    let resultado = numero1 - numero2;\n    document.getElementById(\"resultado\").textContent = resultado;\n}\n\nfunction multiplicar() {\n    let numero1 = parseInt(document.getElementById(\"numero1\").value);\n    let numero2 = parseInt(document.getElementById(\"numero2\").value);\n    let resultado = numero1 * numero2;\n    document.getElementById(\"resultado\").textContent = resultado;\n}\n\nfunction dividir() {\n    let numero1 = parseInt(document.getElementById(\"numero1\").value);\n    let numero2 = parseInt(document.getElementById(\"numero2\").value);\n    let resultado = numero1 / numero2;\n    document.getElementById(\"resultado\").textContent = resultado;\n}\n\nGuarda el archivo y ábrelo en un navegador web.\nDeberías ver una calculadora en la página.\n\nEn los archivos anteriores se muestra un ejemplo de cómo crear una aplicación web con JavaScript.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>JavaScript</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/3_introduccion_javascript.html#crear-un-juego-con-javascript",
    "href": "unidades/unidad6/3_introduccion_javascript.html#crear-un-juego-con-javascript",
    "title": "JavaScript",
    "section": "Crear un juego con JavaScript",
    "text": "Crear un juego con JavaScript\nEn esta sección vamos a crear un juego con JavaScript, para ello vamos a seguir los siguientes pasos:\n\nAbre Visual Studio Code.\nCrea un nuevo archivo y guárdalo con la extensión .html.\nEscribe el siguiente código en el archivo:\n\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Crear un juego con JavaScript&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Adivina el número&lt;/h1&gt;\n    &lt;input type=\"text\" id=\"numero\"&gt;\n    &lt;button onclick=\"adivinar()\"&gt;Adivinar&lt;/button&gt;\n    &lt;h2 id=\"resultado\"&gt;&lt;/h2&gt;\n    &lt;script href=\"script.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\nCrea un nuevo archivo y guárdalo con la extensión .js.\n\nlet numeroAleatorio = Math.floor(Math.random() * 100) + 1;\nlet intentos = 0;\n\nfunction adivinar() {\n    let numero = parseInt(document.getElementById(\"numero\").value);\n    intentos++;\n\n    if (numero === numeroAleatorio) {\n        document.getElementById(\"resultado\").textContent = \"¡Felicidades! Has adivinado el número en \" + intentos + \" intentos\";\n    } else if (numero &lt; numeroAleatorio) {\n        document.getElementById(\"resultado\").textContent = \"El número es mayor\";\n    } else {\n        document.getElementById(\"resultado\").textContent = \"El número es menor\";\n    }\n}\n\nGuarda el archivo y ábrelo en un navegador web.\nDeberías ver un juego de adivinar el número en la página.\n\nEn los archivos anteriores se muestra un ejemplo de cómo crear un juego con JavaScript.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>JavaScript</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/3_introduccion_javascript.html#conclusiones",
    "href": "unidades/unidad6/3_introduccion_javascript.html#conclusiones",
    "title": "JavaScript",
    "section": "Conclusiones",
    "text": "Conclusiones\nJavaScript es un lenguaje de programación poderoso y versátil que se utiliza para crear páginas web interactivas. Con JavaScript, puedes agregar interactividad a una página web, crear aplicaciones web y juegos, y mucho más. JavaScript es un lenguaje de programación del lado del cliente, lo que significa que se ejecuta en el navegador del usuario, en lugar de en el servidor web. JavaScript es un lenguaje de programación de alto nivel, interpretado y orientado a objetos. JavaScript es un lenguaje de programación basado en eventos, lo que significa que puedes ejecutar múltiples tareas simultáneamente sin bloquear el hilo principal. JavaScript es un lenguaje de programación basado en eventos, lo que significa que puedes ejecutar múltiples tareas simultáneamente sin bloquear el hilo principal. JavaScript es un lenguaje de programación basado en eventos, lo que significa que puedes ejecutar múltiples tareas simultáneamente sin bloquear el hilo principal.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>21</span>  <span class='chapter-title'>JavaScript</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/4_introduccion_node.html",
    "href": "unidades/unidad6/4_introduccion_node.html",
    "title": "Nodejs",
    "section": "",
    "text": "Características de Nodejs",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>Nodejs</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/4_introduccion_node.html#características-de-nodejs",
    "href": "unidades/unidad6/4_introduccion_node.html#características-de-nodejs",
    "title": "Nodejs",
    "section": "Instalación de Nodejs",
    "text": "Nodejs es un entorno de ejecución de JavaScript que permite ejecutar código JavaScript en el servidor. Nodejs es muy popular en el desarrollo de aplicaciones web, ya que permite crear aplicaciones web de forma rápida y sencilla.\nAlgunas de las características de Nodejs son:\n\nJavaScript en el servidor: Nodejs permite ejecutar código JavaScript en el servidor, lo que facilita la creación de aplicaciones web.\nEvent-driven: Nodejs es un entorno de ejecución event-driven, lo que significa que las operaciones se realizan de forma asíncrona y no bloqueante.\nI/O no bloqueante: Nodejs utiliza un modelo de I/O no bloqueante, lo que permite realizar operaciones de entrada/salida de forma asíncrona y no bloqueante.\nMódulos: Nodejs permite utilizar módulos para organizar el código en diferentes archivos y reutilizarlo en diferentes partes de la aplicación.\nNPM: Nodejs cuenta con un gestor de paquetes llamado NPM que permite instalar y gestionar paquetes de código JavaScript de forma sencilla.\nAPIs: Nodejs cuenta con un conjunto de APIs que permiten interactuar con el sistema operativo, el sistema de archivos, la red, etc.\nEscalabilidad: Nodejs es muy escalable y permite manejar un gran número de conexiones simultáneas de forma eficiente.\nComunidad: Nodejs cuenta con una gran comunidad de desarrolladores que contribuyen con la creación de paquetes y herramientas para el desarrollo de aplicaciones web.\n\n\nInstalación de Nodejs\nPara instalar Nodejs en tu sistema operativo, puedes descargar el instalador desde la página oficial de Nodejs: https://nodejs.org/.\nUna vez descargado el instalador, puedes seguir las instrucciones de instalación para instalar Nodejs en tu sistema operativo.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>Nodejs</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/4_introduccion_node.html#instalación-de-nodejs",
    "href": "unidades/unidad6/4_introduccion_node.html#instalación-de-nodejs",
    "title": "Nodejs",
    "section": "",
    "text": "Para instalar Nodejs en tu sistema operativo, puedes descargar el instalador desde la página oficial de Nodejs: https://nodejs.org/.\nUna vez descargado el instalador, puedes seguir las instrucciones de instalación para instalar Nodejs en tu sistema operativo.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>Nodejs</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/4_introduccion_node.html#utilizando-nodejs",
    "href": "unidades/unidad6/4_introduccion_node.html#utilizando-nodejs",
    "title": "Nodejs",
    "section": "Utilizando nodejs",
    "text": "Utilizando nodejs\n\nUna vez instalado Nodejs en tu sistema operativo, puedes utilizar el comando node para ejecutar código JavaScript en el servidor. Por ejemplo, puedes crear un archivo hola-mundo.js con el siguiente código:\n\nconsole.log('Hola mundo!');\nconsole.info('Información');\nconsole.warn('Advertencia');\nconsole.error('Error');\n\nPara ejecutar el archivo hola-mundo.js, puedes utilizar el siguiente comando:\n\nnode hola-mundo.js\n:::{.justify} Al ejecutar el comando, verás el mensaje de “Hola mundo!” en la consola del sistema operativo.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>Nodejs</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/4_introduccion_node.html#globalthis",
    "href": "unidades/unidad6/4_introduccion_node.html#globalthis",
    "title": "Nodejs",
    "section": "GlobalThis",
    "text": "GlobalThis\n\nNodejs cuenta con un objeto global llamado globalThis que permite acceder a las variables y funciones globales en el entorno de ejecución de Nodejs. Por ejemplo, puedes utilizar el objeto globalThis para acceder a las variables y funciones globales en el entorno de ejecución de Nodejs.\nPor ejemplo, puedes utilizar el objeto globalThis para acceder a la variable process que contiene información sobre el proceso de Nodejs. Por ejemplo, puedes acceder a la versión de Nodejs con la siguiente instrucción:\n\nconsole.log(globalThis.process.version);\nAl ejecutar la instrucción, verás la versión de Nodejs en la consola del sistema operativo.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>Nodejs</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/4_introduccion_node.html#conclusiones",
    "href": "unidades/unidad6/4_introduccion_node.html#conclusiones",
    "title": "Nodejs",
    "section": "Conclusiones",
    "text": "Conclusiones\nNodejs es un entorno de ejecución de JavaScript que permite ejecutar código JavaScript en el servidor. Nodejs es muy popular en el desarrollo de aplicaciones web, ya que permite crear aplicaciones web de forma rápida y sencilla.\nEn esta sección hemos analizado las características de Nodejs y cómo podemos utilizarlo para desarrollar aplicaciones web. En la siguiente sección nos adentraremos en Reactjs y veremos cómo podemos utilizarlo en el desarrollo de aplicaciones web con Nodejs.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>Nodejs</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/4_introduccion_node.html#creación-de-una-aplicación-web-con-nodejs",
    "href": "unidades/unidad6/4_introduccion_node.html#creación-de-una-aplicación-web-con-nodejs",
    "title": "Nodejs",
    "section": "Creación de una aplicación web con Nodejs",
    "text": "Creación de una aplicación web con Nodejs\n\nPara crear una aplicación web con Nodejs, puedes seguir los siguientes pasos:\n\nCrea un directorio para tu aplicación web:\n\n\nmkdir mi-aplicacion-web\ncd mi-aplicacion-web\n\n\nInicializa un proyecto de Nodejs:\n\n\nnpm init -y\n\n\nInstala el paquete express para crear un servidor web:\n\n\nnpm install express\n\n\nCrea un archivo index.js con el siguiente código:\n\n\nconst express = require('express');\nconst app = express();\n\napp.get('/', (req, res) =&gt; {\n  res.send('Hola mundo!');\n});\n\napp.listen(3000, () =&gt; {\n  console.log('Servidor web iniciado en el puerto 3000');\n});\n\n\nInicia el servidor web:\n\n\nnode index.js\n\n\nAbre tu navegador y accede a la dirección http://localhost:3000/.\n\n\n\n\n\nApp Express\n\n\n\nCon estos pasos has creado una aplicación web con Nodejs que muestra un mensaje de “Hola mundo!” en el navegador.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>Nodejs</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/4_introduccion_node.html#conclusiones-1",
    "href": "unidades/unidad6/4_introduccion_node.html#conclusiones-1",
    "title": "Nodejs",
    "section": "Conclusiones",
    "text": "Conclusiones\n\nNodejs es un entorno de ejecución de JavaScript que permite ejecutar código JavaScript en el servidor. Nodejs es muy popular en el desarrollo de aplicaciones web, ya que permite crear aplicaciones web de forma rápida y sencilla.\nEn esta sección hemos analizado las características de Nodejs y cómo podemos utilizarlo para desarrollar aplicaciones web. En la siguiente sección nos adentraremos en Reactjs y veremos cómo podemos utilizarlo en el desarrollo de aplicaciones web con Nodejs.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>Nodejs</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/4_introduccion_node.html#deno",
    "href": "unidades/unidad6/4_introduccion_node.html#deno",
    "title": "Nodejs",
    "section": "Deno",
    "text": "Deno\nDeno es un entorno de ejecución de JavaScript y TypeScript que permite ejecutar código JavaScript en el servidor. Deno es una alternativa a Nodejs que cuenta con algunas características interesantes como:\n\nSeguridad: Deno utiliza un modelo de seguridad basado en permisos que permite controlar el acceso a los recursos del sistema.\nTypeScript: Deno es compatible con TypeScript de forma nativa, lo que permite utilizar TypeScript en el desarrollo de aplicaciones web.\nMódulos ESM: Deno utiliza módulos ESM (ECMAScript Modules) de forma nativa, lo que facilita la importación de módulos en el código JavaScript.\nAPIs: Deno cuenta con un conjunto de APIs que permiten interactuar con el sistema operativo, el sistema de archivos, la red, etc.\nGestor de paquetes: Deno cuenta con un gestor de paquetes llamado Deno que permite instalar y gestionar paquetes de código JavaScript de forma sencilla.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>Nodejs</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/4_introduccion_node.html#creación-de-una-aplicación-web-con-deno",
    "href": "unidades/unidad6/4_introduccion_node.html#creación-de-una-aplicación-web-con-deno",
    "title": "Nodejs",
    "section": "Creación de una aplicación web con Deno",
    "text": "Creación de una aplicación web con Deno\nPara crear una aplicación web con Deno, puedes seguir los siguientes pasos:\n\nCrea un archivo app.ts con el siguiente código:",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>Nodejs</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/4_introduccion_node.html#bun",
    "href": "unidades/unidad6/4_introduccion_node.html#bun",
    "title": "Nodejs",
    "section": "Bun",
    "text": "Bun\nBun es un entorno de ejecución de JavaScript que permite ejecutar código JavaScript en el servidor. Bun es una alternativa a Nodejs que cuenta con algunas características interesantes como:\n\nVelocidad: Bun es más rápido que Nodejs en la ejecución de código JavaScript en el servidor.\nMódulos: Bun utiliza módulos de CommonJS para organizar el código en diferentes archivos y reutilizarlo en diferentes partes de la aplicación.\nAPIs: Bun cuenta con un conjunto de APIs que permiten interactuar con el sistema operativo, el sistema de archivos, la red, etc.\nGestor de paquetes: Bun cuenta con un gestor de paquetes llamado Bun que permite instalar y gestionar paquetes de código JavaScript de forma sencilla.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>Nodejs</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/4_introduccion_node.html#creación-de-una-aplicación-web-con-bun",
    "href": "unidades/unidad6/4_introduccion_node.html#creación-de-una-aplicación-web-con-bun",
    "title": "Nodejs",
    "section": "Creación de una aplicación web con Bun",
    "text": "Creación de una aplicación web con Bun\nPara crear una aplicación web con Bun, puedes seguir los siguientes pasos:\n\nCrea un archivo app.js con el siguiente código:",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>Nodejs</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/4_introduccion_node.html#conclusiones-2",
    "href": "unidades/unidad6/4_introduccion_node.html#conclusiones-2",
    "title": "Nodejs",
    "section": "Conclusiones",
    "text": "Conclusiones\nEn el desarrollo de aplicaciones web existen diferentes alternativas a Nodejs que permiten ejecutar código JavaScript en el servidor. En esta sección hemos analizado algunas de las alternativas a Nodejs como Deno y Bun y sus características.\nEn la siguiente sección nos adentraremos en Reactjs y veremos cómo podemos utilizarlo en el desarrollo de aplicaciones web con Nodejs.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>Nodejs</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/4_introduccion_node.html#introducción",
    "href": "unidades/unidad6/4_introduccion_node.html#introducción",
    "title": "Nodejs",
    "section": "Introducción",
    "text": "Introducción\n\nEn el desarrollo de aplicaciones web es muy común utilizar paquetes de código JavaScript de terceros para añadir funcionalidades a nuestras aplicaciones. Para gestionar estos paquetes de código JavaScript, existen diferentes gestores de paquetes como Npm, Yarn y Pnpm.\nEn esta sección analizaremos las características de Npm, Yarn y Pnpm y cómo podemos utilizarlos en el desarrollo de aplicaciones web.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>Nodejs</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/4_introduccion_node.html#npm",
    "href": "unidades/unidad6/4_introduccion_node.html#npm",
    "title": "Nodejs",
    "section": "Npm",
    "text": "Npm\n:::{.justify} Npm (Node Package Manager) es el gestor de paquetes de Nodejs que permite instalar y gestionar paquetes de código JavaScript de terceros. Npm es muy popular en el desarrollo de aplicaciones web, ya que cuenta con un amplio repositorio de paquetes de código JavaScript.\nAlgunas de las características de Npm son:\n\nInstalación de paquetes: Npm permite instalar paquetes de código JavaScript de terceros de forma sencilla.\nGestión de dependencias: Npm permite gestionar las dependencias de un proyecto y asegurar que las versiones de los paquetes sean compatibles.\nScripts: Npm permite ejecutar scripts de forma sencilla a través del archivo package.json.\nRepositorio de paquetes: Npm cuenta con un amplio repositorio de paquetes de código JavaScript que pueden ser utilizados en el desarrollo de aplicaciones web.\nVersionado semántico: Npm utiliza el versionado semántico para gestionar las versiones de los paquetes de código JavaScript.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>Nodejs</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/4_introduccion_node.html#instalación-de-paquetes-con-npm",
    "href": "unidades/unidad6/4_introduccion_node.html#instalación-de-paquetes-con-npm",
    "title": "Nodejs",
    "section": "Instalación de paquetes con Npm",
    "text": "Instalación de paquetes con Npm\nPara instalar un paquete de código JavaScript con Npm, puedes utilizar el siguiente comando:\nnpm install nombre-del-paquete\nEn la sección anterior aprendimos a crear un proyecto con NPM",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>Nodejs</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/4_introduccion_node.html#yarn",
    "href": "unidades/unidad6/4_introduccion_node.html#yarn",
    "title": "Nodejs",
    "section": "Yarn",
    "text": "Yarn\n\nYarn es otro gestor de paquetes de código JavaScript que permite instalar y gestionar paquetes de código JavaScript de terceros. Yarn es muy popular en el desarrollo de aplicaciones web, ya que cuenta con un amplio repositorio de paquetes de código JavaScript.\nAlgunas de las características de Yarn son:\n\nInstalación de paquetes: Yarn permite instalar paquetes de código JavaScript de terceros de forma sencilla.\nGestión de dependencias: Yarn permite gestionar las dependencias de un proyecto y asegurar que las versiones de los paquetes sean compatibles.\nScripts: Yarn permite ejecutar scripts de forma sencilla a través del archivo package.json.\nRepositorio de paquetes: Yarn cuenta con un amplio repositorio de paquetes de código JavaScript que pueden ser utilizados en el desarrollo de aplicaciones web.\nVelocidad: Yarn es más rápido que Npm en la instalación de paquetes de código JavaScript.\n\n\nInstalación de paquetes con Yarn\nPara instalar un paquete de código JavaScript con Yarn, puedes utilizar el siguiente comando:\n\n\nyarn add nombre-del-paquete",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>Nodejs</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/4_introduccion_node.html#instalación-de-paquetes-con-yarn",
    "href": "unidades/unidad6/4_introduccion_node.html#instalación-de-paquetes-con-yarn",
    "title": "Nodejs",
    "section": "Instalación de paquetes con Yarn",
    "text": "Instalación de paquetes con Yarn\nPara instalar un paquete de código JavaScript con Yarn, puedes utilizar el siguiente comando:",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>Nodejs</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/4_introduccion_node.html#crear-un-proyecto-con-yarn",
    "href": "unidades/unidad6/4_introduccion_node.html#crear-un-proyecto-con-yarn",
    "title": "Nodejs",
    "section": "Crear un proyecto con Yarn",
    "text": "Crear un proyecto con Yarn\nPara crear un proyecto con Yarn, puedes utilizar el siguiente comando:",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>Nodejs</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/4_introduccion_node.html#pnpm",
    "href": "unidades/unidad6/4_introduccion_node.html#pnpm",
    "title": "Nodejs",
    "section": "Pnpm",
    "text": "Pnpm\nPnpm es otro gestor de paquetes de código JavaScript que permite instalar y gestionar paquetes de código JavaScript de terceros. Pnpm es muy popular en el desarrollo de aplicaciones web, ya que cuenta con un amplio repositorio de paquetes de código JavaScript.\nAlgunas de las características de Pnpm son:\n\nInstalación de paquetes: Pnpm permite instalar paquetes de código JavaScript de terceros de forma sencilla.\nGestión de dependencias: Pnpm permite gestionar las dependencias de un proyecto y asegurar que las versiones de los paquetes sean compatibles.\nScripts: Pnpm permite ejecutar scripts de forma sencilla a través del archivo package.json.\nRepositorio de paquetes: Pnpm cuenta con un amplio repositorio de paquetes de código JavaScript que pueden ser utilizados en el desarrollo de aplicaciones web.\nEspacio en disco: Pnpm utiliza un espacio en disco más eficiente que Npm y Yarn.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>Nodejs</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/4_introduccion_node.html#instalación-de-paquetes-con-pnpm",
    "href": "unidades/unidad6/4_introduccion_node.html#instalación-de-paquetes-con-pnpm",
    "title": "Nodejs",
    "section": "Instalación de paquetes con Pnpm",
    "text": "Instalación de paquetes con Pnpm\nPara instalar un paquete de código JavaScript con Pnpm, puedes utilizar el siguiente comando:",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>Nodejs</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/4_introduccion_node.html#crear-un-proyecto-con-pnpm",
    "href": "unidades/unidad6/4_introduccion_node.html#crear-un-proyecto-con-pnpm",
    "title": "Nodejs",
    "section": "Crear un proyecto con Pnpm",
    "text": "Crear un proyecto con Pnpm\nPara crear un proyecto con Pnpm, puedes utilizar el siguiente comando:",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>Nodejs</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/4_introduccion_node.html#conclusiones-3",
    "href": "unidades/unidad6/4_introduccion_node.html#conclusiones-3",
    "title": "Nodejs",
    "section": "Conclusiones",
    "text": "Conclusiones\nEn el desarrollo de aplicaciones web es muy común utilizar paquetes de código JavaScript de terceros para añadir funcionalidades a nuestras aplicaciones. Para gestionar estos paquetes de código JavaScript, existen diferentes gestores de paquetes como Npm, Yarn y Pnpm.\nEn esta sección hemos analizado las características de Npm, Yarn y Pnpm y cómo podemos utilizarlos en el desarrollo de aplicaciones web. En la siguiente sección nos adentraremos en Reactjs y veremos cómo podemos utilizarlo en el desarrollo de aplicaciones web con Nodejs.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>Nodejs</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/4_introduccion_node.html#fnm",
    "href": "unidades/unidad6/4_introduccion_node.html#fnm",
    "title": "Nodejs",
    "section": "FNM",
    "text": "FNM\n\nFNM es un gestor de versiones de Nodejs que permite cambiar de versión de Nodejs de forma sencilla. FNM es muy útil en el desarrollo de aplicaciones web, ya que permite utilizar diferentes versiones de Nodejs en un mismo sistema.\nAlgunas de las características de FNM son:\n\nInstalación de versiones: FNM permite instalar diferentes versiones de Nodejs de forma sencilla.\nCambio de versión: FNM permite cambiar de versión de Nodejs de forma sencilla.\nGestión de versiones: FNM permite gestionar las versiones de Nodejs de forma sencilla.\nIntegración con Npm, Yarn y Pnpm: FNM es compatible con los gestores de paquetes Npm, Yarn y Pnpm.\n\n\nInstalación de FNM\nPara instalar FNM en tu sistema operativo, puedes utilizar el siguiente comando:\n\n\ncurl -fsSL https://fnm.vercel.app/install | bash\n\nUna vez instalado FNM, puedes utilizar los siguientes comandos para gestionar las versiones de Nodejs:\n\nfnm install: Instala una versión de Nodejs.\nfnm use: Cambia de versión de Nodejs.\nfnm ls: Lista las versiones de Nodejs instaladas.\nfnm default: Establece la versión de Nodejs por defecto.\n\n\nEjemplo de uso de FNM\nPara instalar una versión de Nodejs con FNM, puedes utilizar el siguiente comando:\n\n\nfnm install 14\n\nPara cambiar de versión de Nodejs con FNM, puedes utilizar el siguiente comando:\n\nfnm use 14\n\nPara listar las versiones de Nodejs instaladas con FNM, puedes utilizar el siguiente comando:\n\nfnm ls\n\nPara establecer la versión de Nodejs por defecto con FNM, puedes utilizar el siguiente comando:\n\nfnm default 14",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>Nodejs</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/4_introduccion_node.html#instalación-de-fnm",
    "href": "unidades/unidad6/4_introduccion_node.html#instalación-de-fnm",
    "title": "Nodejs",
    "section": "Instalación de FNM",
    "text": "Instalación de FNM\nPara instalar FNM en tu sistema operativo, puedes utilizar el siguiente comando:",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>Nodejs</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/4_introduccion_node.html#ejemplo-de-uso-de-fnm",
    "href": "unidades/unidad6/4_introduccion_node.html#ejemplo-de-uso-de-fnm",
    "title": "Nodejs",
    "section": "Ejemplo de uso de FNM",
    "text": "Ejemplo de uso de FNM\nPara instalar una versión de Nodejs con FNM, puedes utilizar el siguiente comando:",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>Nodejs</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/4_introduccion_node.html#conclusiones-4",
    "href": "unidades/unidad6/4_introduccion_node.html#conclusiones-4",
    "title": "Nodejs",
    "section": "Conclusiones",
    "text": "Conclusiones\nFNM es un gestor de versiones de Nodejs que permite cambiar de versión de Nodejs de forma sencilla. FNM es muy útil en el desarrollo de aplicaciones web, ya que permite utilizar diferentes versiones de Nodejs en un mismo sistema.\nEn esta sección hemos analizado las características de FNM y cómo podemos utilizarlo en el desarrollo de aplicaciones web. En la siguiente sección nos adentraremos en Reactjs y veremos cómo podemos utilizarlo en el desarrollo de aplicaciones web con Nodejs.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>22</span>  <span class='chapter-title'>Nodejs</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/5_introduccion_react.html",
    "href": "unidades/unidad6/5_introduccion_react.html",
    "title": "Introducción a React",
    "section": "",
    "text": "¿Qué es Vite?",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>23</span>  <span class='chapter-title'>Introducción a React</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/5_introduccion_react.html#qué-es-vite",
    "href": "unidades/unidad6/5_introduccion_react.html#qué-es-vite",
    "title": "Introducción a React",
    "section": "",
    "text": "Vite + React\n\n\n\n\nVite es un entorno de desarrollo que permite trabajar con React de forma más sencilla. Vite es un entorno de desarrollo que se basa en la tecnología de ES Modules, que es una forma de importar y exportar módulos en JavaScript. Vite utiliza ES Modules para cargar los módulos de JavaScript de forma rápida y eficiente. Vite también utiliza un servidor de desarrollo que permite trabajar con React de forma más sencilla.\nLa documentación oficial de Vite se encuentra en el siguiente enlace: https://vitejs.dev/",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>23</span>  <span class='chapter-title'>Introducción a React</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/5_introduccion_react.html#crear-un-proyecto-con-vite",
    "href": "unidades/unidad6/5_introduccion_react.html#crear-un-proyecto-con-vite",
    "title": "Introducción a React",
    "section": "Crear un proyecto con Vite",
    "text": "Crear un proyecto con Vite\n\nPara crear un proyecto con Vite, puedes utilizar el siguiente comando:\n\nnpm create vite@latest\n\nEste comando crea un proyecto con Vite y te guía a través de la configuración del proyecto. Puedes elegir el nombre del proyecto, el tipo de proyecto (React, Vue, Vanilla), y otras opciones de configuración.\n\nnpm install",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>23</span>  <span class='chapter-title'>Introducción a React</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/5_introduccion_react.html#entendiendo-react",
    "href": "unidades/unidad6/5_introduccion_react.html#entendiendo-react",
    "title": "Introducción a React",
    "section": "Entendiendo React",
    "text": "Entendiendo React\n\nsrc/App.jsx\n\nAntes de correr un servidor de pruebas podemos entender la estructura de React, en el archivo App.jsx ubicado en la ruta src/App.jsx se encuentra el código principal de la aplicación, en este archivo se importa React y ReactDOM, se crea un componente de React llamado App y se renderiza en el DOM utilizando ReactDOM.render.\n\n\n\nsrc/main.jsx\n\nEn el archivo src/main.jsx se importa el componente App y se renderiza en el elemento con el id root en el DOM.\nPor ahora no serán necesarios los archivo App.css y index.css. Asi que puedes eliminarlos. Para correr la aplicación puedes utilizar el siguiente comando:\n\nnpm run dev",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>23</span>  <span class='chapter-title'>Introducción a React</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/5_introduccion_react.html#hello-world-con-react",
    "href": "unidades/unidad6/5_introduccion_react.html#hello-world-con-react",
    "title": "Introducción a React",
    "section": "Hello World con React",
    "text": "Hello World con React\n\nPara crear un Hello World con React, puedes utilizar el siguiente código en el archivo src/App.jsx:\n\nfunction App() {\n  return (&lt;h1&gt;Hello World in React&lt;/h1&gt;)\n}\n\nexport default App\n\nEste código crea un componente de React llamado App que renderiza el texto “Hello World” en la pantalla.\nPara crear el hello world tambien vamos a modificar el archivo src/main.jsx para que renderice el componente App en el elemento con el id root en el DOM.\n\nfunction App() {\n  return (&lt;h1&gt;Hello World in React&lt;/h1&gt;)\n}\n\nexport default App\n\nEste código crea un componente de React llamado App que renderiza el texto “Hello World” en la pantalla.\nPara ejecutar la aplicación, puedes utilizar el siguiente comando:\n\nnpm run dev\n\nEste comando inicia el servidor de desarrollo de Vite y abre la aplicación en tu navegador. Verás el texto “Hello World” en la pantalla.\n\n\n\n\n\nDjango Framework",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>23</span>  <span class='chapter-title'>Introducción a React</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/5_introduccion_react.html#conclusiones",
    "href": "unidades/unidad6/5_introduccion_react.html#conclusiones",
    "title": "Introducción a React",
    "section": "Conclusiones",
    "text": "Conclusiones\n\nEn este capítulo aprendimos a crear un proyecto con Vite y React, entendimos la estructura de un proyecto de React y creamos un Hello World con React. En el próximo capítulo aprenderemos a crear componentes en React.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>23</span>  <span class='chapter-title'>Introducción a React</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/5_introduccion_react.html#ejericios",
    "href": "unidades/unidad6/5_introduccion_react.html#ejericios",
    "title": "Introducción a React",
    "section": "Ejericios",
    "text": "Ejericios\n\nCrea un nuevo proyecto con Vite y React.\nCrea un componente de React que renderice un texto en la pantalla.\n\n\n\nVer respuesta\n\nSolución ejercicio 1:\nnpm create vite@latest\nSolución ejercicio 2:\nfunction App() {\n  return (&lt;h1&gt;Este es un componente de React&lt;/h1&gt;)\n}\n\nexport default App",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>23</span>  <span class='chapter-title'>Introducción a React</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/6_primeros_pasos_con_react.html",
    "href": "unidades/unidad6/6_primeros_pasos_con_react.html",
    "title": "Primeros pasos con React",
    "section": "",
    "text": "Crear el componente principal",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>Primeros pasos con React</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/6_primeros_pasos_con_react.html#qué-es-react",
    "href": "unidades/unidad6/6_primeros_pasos_con_react.html#qué-es-react",
    "title": "Primeros pasos con React",
    "section": "¿Qué es React?",
    "text": "¿Qué es React?\nReact es una librería de JavaScript para construir interfaces de usuario. Fue desarrollada por Facebook y lanzada en 2013. React es una de las librerías más populares para construir interfaces de usuario en la actualidad.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>Primeros pasos con React</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/6_primeros_pasos_con_react.html#componentes",
    "href": "unidades/unidad6/6_primeros_pasos_con_react.html#componentes",
    "title": "Primeros pasos con React",
    "section": "Componentes",
    "text": "Componentes\nEn React, todo es un componente. Un componente es una pieza de la interfaz de usuario que puede ser reutilizada en diferentes partes de la aplicación. Los componentes pueden ser simples o complejos, y pueden contener otros componentes.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>Primeros pasos con React</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/6_primeros_pasos_con_react.html#jsx",
    "href": "unidades/unidad6/6_primeros_pasos_con_react.html#jsx",
    "title": "Primeros pasos con React",
    "section": "JSX",
    "text": "JSX\nJSX es una extensión de JavaScript que permite escribir código HTML dentro de JavaScript. JSX es una de las características más importantes de React, ya que permite escribir componentes de una forma más sencilla y legible.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>Primeros pasos con React</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/6_primeros_pasos_con_react.html#props",
    "href": "unidades/unidad6/6_primeros_pasos_con_react.html#props",
    "title": "Primeros pasos con React",
    "section": "Props",
    "text": "Props\nLas props son los argumentos que se pasan a un componente. Las props son inmutables, lo que significa que no pueden ser modificadas por el componente que las recibe.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>Primeros pasos con React</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/6_primeros_pasos_con_react.html#state",
    "href": "unidades/unidad6/6_primeros_pasos_con_react.html#state",
    "title": "Primeros pasos con React",
    "section": "State",
    "text": "State\nEl state es un objeto que contiene los datos de un componente. El state es mutable, lo que significa que puede ser modificado por el componente que lo contiene.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>Primeros pasos con React</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/6_primeros_pasos_con_react.html#ciclo-de-vida",
    "href": "unidades/unidad6/6_primeros_pasos_con_react.html#ciclo-de-vida",
    "title": "Primeros pasos con React",
    "section": "Ciclo de vida",
    "text": "Ciclo de vida\nLos componentes de React tienen un ciclo de vida que consta de diferentes fases. Algunas de las fases más importantes son:\n\ncomponentDidMount: Se ejecuta después de que el componente ha sido montado en el DOM.\ncomponentDidUpdate: Se ejecuta después de que el componente ha sido actualizado.\ncomponentWillUnmount: Se ejecuta antes de que el componente sea desmontado del DOM.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>Primeros pasos con React</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/6_primeros_pasos_con_react.html#hooks",
    "href": "unidades/unidad6/6_primeros_pasos_con_react.html#hooks",
    "title": "Primeros pasos con React",
    "section": "Hooks",
    "text": "Hooks\nLos hooks son una característica de React que permite añadir estado y otras características a los componentes funcionales. Algunos de los hooks más comunes son:\n\nuseState: Permite añadir estado a los componentes funcionales.\nuseEffect: Permite añadir efectos secundarios a los componentes funcionales.\nuseContext: Permite acceder al contexto de un componente.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>Primeros pasos con React</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/6_primeros_pasos_con_react.html#context",
    "href": "unidades/unidad6/6_primeros_pasos_con_react.html#context",
    "title": "Primeros pasos con React",
    "section": "Context",
    "text": "Context\nEl contexto es una característica de React que permite pasar datos a través del árbol de componentes sin tener que pasar props manualmente en cada nivel.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>Primeros pasos con React</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/6_primeros_pasos_con_react.html#router",
    "href": "unidades/unidad6/6_primeros_pasos_con_react.html#router",
    "title": "Primeros pasos con React",
    "section": "Router",
    "text": "Router\nEl router es una característica de React que permite gestionar la navegación entre diferentes páginas de la aplicación.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>Primeros pasos con React</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/6_primeros_pasos_con_react.html#redux",
    "href": "unidades/unidad6/6_primeros_pasos_con_react.html#redux",
    "title": "Primeros pasos con React",
    "section": "Redux",
    "text": "Redux\nRedux es una librería de JavaScript para gestionar el estado de la aplicación de una forma predecible y escalable. Redux se basa en tres principios fundamentales: un único origen de verdad, solo lectura y cambios mediante acciones.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>Primeros pasos con React</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/6_primeros_pasos_con_react.html#práctica",
    "href": "unidades/unidad6/6_primeros_pasos_con_react.html#práctica",
    "title": "Primeros pasos con React",
    "section": "Práctica",
    "text": "Práctica\nAhora que hemos repasado los conceptos básicos de React, vamos a crear una aplicación sencilla para poner en práctica lo aprendido. En esta aplicación vamos a crear un contador que permita incrementar y decrementar un número.\nPara crear la aplicación vamos a utilizar como aprendimos en la sección anterior Vite + React.\n\nCrear la aplicación\nPara crear la aplicación vamos a utilizar el siguiente comando:",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>Primeros pasos con React</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/6_primeros_pasos_con_react.html#conclusiones",
    "href": "unidades/unidad6/6_primeros_pasos_con_react.html#conclusiones",
    "title": "Primeros pasos con React",
    "section": "Conclusiones",
    "text": "Conclusiones\n\nEn este capítulo aprendimos los conceptos básicos de React y cómo crear una aplicación sencilla utilizando Vite + React. En el próximo capítulo vamos a aprender cómo trabajar con componentes en React y cómo organizar el código de una aplicación de forma eficiente.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>Primeros pasos con React</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/6_primeros_pasos_con_react.html#ejercicios",
    "href": "unidades/unidad6/6_primeros_pasos_con_react.html#ejercicios",
    "title": "Primeros pasos con React",
    "section": "Ejercicios",
    "text": "Ejercicios\n\n\nModificar el contador para que no pueda ser menor que cero.\nCrear un nuevo componente que muestre un mensaje si el contador es mayor que cero.\n\n\n\n\nVer solución\n\n\nSolución ejercicio 1\nPara modificar el contador para que no pueda ser menor que cero, podemos modificar la función decrement de la siguiente forma:\nconst decrement = () =&gt; {\n  if (count &gt; 0) {\n    setCount(count - 1);\n  }\n};\n\n\nSolución ejercicio 2\nPara crear un nuevo componente que muestre un mensaje si el contador es mayor que cero, podemos crear un nuevo componente llamado Message.js con el siguiente contenido:\nimport React from 'react';\n\nconst Message = ({ count }) =&gt; {\n  return count &gt; 0 ? &lt;h2&gt;El contador es mayor que cero&lt;/h2&gt; : null;\n};\n\nexport default Message;\nLuego podemos importar y utilizar este componente en el componente Home:\nimport React from 'react';\nimport Counter from '../components/Counter';\nimport Message from '../components/Message';\n\nconst Home = () =&gt; {\n  return (\n    &lt;div&gt;\n      &lt;h1&gt;Counter App&lt;/h1&gt;\n      &lt;Counter /&gt;\n      &lt;Message /&gt;\n    &lt;/div&gt;\n  );\n};\n\nexport default Home;",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>24</span>  <span class='chapter-title'>Primeros pasos con React</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/7_fetch_con_react.html#crear-la-aplicación",
    "href": "unidades/unidad6/7_fetch_con_react.html#crear-la-aplicación",
    "title": "Método fetch con React",
    "section": "Crear la aplicación",
    "text": "Crear la aplicación\nPara crear la aplicación vamos a utilizar el siguiente comando:\nnpm create vite@latest .\nLuego vamos a instalar las dependencias necesarias para la aplicación:\nnpm install axios",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>25</span>  <span class='chapter-title'>Método fetch con React</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/7_fetch_con_react.html#crear-el-componente",
    "href": "unidades/unidad6/7_fetch_con_react.html#crear-el-componente",
    "title": "Método fetch con React",
    "section": "Crear el componente",
    "text": "Crear el componente\nVamos a crear un componente llamado Pokemon dentro de un directorio llamado src/components que nos permita buscar imágenes de Pokemon en la API de Pokemon.\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst Pokemon = () =&gt; {\n  const [pokemon, setPokemon] = useState('');\n  const [image, setImage] = useState('');\n\n  const getPokemon = async () =&gt; {\n    const response = await axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemon}`);\n    setImage(response.data.sprites.front_default);\n  };\n\n  return (\n    &lt;div&gt;\n      &lt;input type=\"text\" value={pokemon} onChange={(e) =&gt; setPokemon(e.target.value)} /&gt;\n      &lt;button onClick={getPokemon}&gt;Buscar&lt;/button&gt;\n      &lt;img src={image} alt={pokemon} /&gt;\n    &lt;/div&gt;\n  );\n};\n\nexport default Pokemon;",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>25</span>  <span class='chapter-title'>Método fetch con React</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/7_fetch_con_react.html#importar-el-componente",
    "href": "unidades/unidad6/7_fetch_con_react.html#importar-el-componente",
    "title": "Método fetch con React",
    "section": "Importar el componente",
    "text": "Importar el componente\nVamos a importar el componente en el archivo App.js.\nimport Pokemon from './components/Pokemon';\n\nfunction App() {\n  return (\n    &lt;div&gt;\n      &lt;Pokemon /&gt;\n    &lt;/div&gt;\n  );\n}\n\nexport default App;",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>25</span>  <span class='chapter-title'>Método fetch con React</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/7_fetch_con_react.html#ejecutar-la-aplicación",
    "href": "unidades/unidad6/7_fetch_con_react.html#ejecutar-la-aplicación",
    "title": "Método fetch con React",
    "section": "Ejecutar la aplicación",
    "text": "Ejecutar la aplicación\nPara ejecutar la aplicación vamos a utilizar el siguiente comando:\nnpm run dev",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>25</span>  <span class='chapter-title'>Método fetch con React</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/7_fetch_con_react.html#conclusión",
    "href": "unidades/unidad6/7_fetch_con_react.html#conclusión",
    "title": "Método fetch con React",
    "section": "Conclusión",
    "text": "Conclusión\nHemos aprendido a crear el método fetch con React, para ello hemos creado una aplicación que nos permite buscar imágenes de Pokemon en la API de Pokemon.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>25</span>  <span class='chapter-title'>Método fetch con React</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/8_fetch_con_react_tiempo.html#crear-la-aplicación",
    "href": "unidades/unidad6/8_fetch_con_react_tiempo.html#crear-la-aplicación",
    "title": "Fetch con React para obtener el listado de productos",
    "section": "Crear la aplicación",
    "text": "Crear la aplicación\nPara crear la aplicación vamos a utilizar el siguiente comando:\nnpm create vite@latest .",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>26</span>  <span class='chapter-title'>Fetch con React para obtener el listado de productos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/8_fetch_con_react_tiempo.html#crear-el-componente",
    "href": "unidades/unidad6/8_fetch_con_react_tiempo.html#crear-el-componente",
    "title": "Fetch con React para obtener el listado de productos",
    "section": "Crear el componente",
    "text": "Crear el componente\nVamos a crear el directorio components y dentro de él el archivo Products.jsx.\nimport React, { useState, useEffect } from 'react';\n\nconst Products = () =&gt; {\n  const [products, setProducts] = useState([]);\n\n  useEffect(() =&gt; {\n    fetch('https://fakestoreapi.com/products')\n      .then((response) =&gt; response.json())\n      .then((data) =&gt; setProducts(data));\n  }, []);\n\n  return (\n    &lt;div&gt;\n      &lt;h1&gt;Productos&lt;/h1&gt;\n      &lt;ul&gt;\n        {products.map((product) =&gt; (\n          &lt;li key={product.id}&gt;{product.title}&lt;/li&gt;\n        ))}\n      &lt;/ul&gt;\n    &lt;/div&gt;\n  );\n};\n\nexport default Products;\nEn este componente estamos utilizando el hook useState para guardar el listado de productos y el hook useEffect para hacer el fetch a la API.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>26</span>  <span class='chapter-title'>Fetch con React para obtener el listado de productos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/8_fetch_con_react_tiempo.html#importar-el-componente",
    "href": "unidades/unidad6/8_fetch_con_react_tiempo.html#importar-el-componente",
    "title": "Fetch con React para obtener el listado de productos",
    "section": "Importar el componente",
    "text": "Importar el componente\nVamos a importar el componente Products en App.jsx.\nimport React from 'react';\n\nimport Products from './components/Products';\n\nconst App = () =&gt; {\n  return (\n    &lt;div&gt;\n      &lt;Products /&gt;\n    &lt;/div&gt;\n  );\n};\n\nexport default App;\nEn el código anterior estamos importando el componente Products y lo estamos renderizando en App.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>26</span>  <span class='chapter-title'>Fetch con React para obtener el listado de productos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/8_fetch_con_react_tiempo.html#ejecutar-la-aplicación",
    "href": "unidades/unidad6/8_fetch_con_react_tiempo.html#ejecutar-la-aplicación",
    "title": "Fetch con React para obtener el listado de productos",
    "section": "Ejecutar la aplicación",
    "text": "Ejecutar la aplicación\nPara ejecutar la aplicación vamos a correr el siguiente comando.\nnpm run dev\nAhora vamos a abrir el navegador en la dirección http://localhost:3000 y vamos a ver el listado de productos.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>26</span>  <span class='chapter-title'>Fetch con React para obtener el listado de productos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/8_fetch_con_react_tiempo.html#conclusiones",
    "href": "unidades/unidad6/8_fetch_con_react_tiempo.html#conclusiones",
    "title": "Fetch con React para obtener el listado de productos",
    "section": "Conclusiones",
    "text": "Conclusiones\nEn esta sección hemos visto cómo podemos hacer un fetch con React para obtener un listado de productos desde una API.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>26</span>  <span class='chapter-title'>Fetch con React para obtener el listado de productos</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/9_crud_react.html#crear-el-proyecto",
    "href": "unidades/unidad6/9_crud_react.html#crear-el-proyecto",
    "title": "Crud Básico con React y Axios",
    "section": "Crear el proyecto",
    "text": "Crear el proyecto",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>27</span>  <span class='chapter-title'>Crud Básico con React y Axios</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/9_crud_react.html#crear-la-api",
    "href": "unidades/unidad6/9_crud_react.html#crear-la-api",
    "title": "Crud Básico con React y Axios",
    "section": "Crear la API",
    "text": "Crear la API\nCreamos un directorio llamado backend y dentro de él, creamos un archivo llamado package.json con el siguiente contenido:\nnpm init -y\nLuego, instalamos express y cors:\nVamos a crear una API muy sencilla con express. Para instalarlo, ejecuta el siguiente comando:\nnpm install express cors\nLuego, crea un archivo llamado server.js en la raíz del proyecto con el siguiente contenido:\nconst express = require('express');\nconst cors = require('cors');\nconst app = express();\n\napp.use(cors());\napp.use(express.json());\n\nlet tasks = [\n  { id: 1, title: 'Task 1' },\n  { id: 2, title: 'Task 2' },\n  { id: 3, title: 'Task 3' },\n];\n\napp.get('/tasks', (req, res) =&gt; {\n  res.json(tasks);\n});\n\napp.post('/tasks', (req, res) =&gt; {\n  const task = { id: tasks.length + 1, title: req.body.title };\n  tasks.push(task);\n  res.json(task);\n});\n\napp.put('/tasks/:id', (req, res) =&gt; {\n  const task = tasks.find(task =&gt; task.id === parseInt(req.params.id));\n  task.title = req.body.title;\n  res.json(task);\n});\n\napp.delete('/tasks/:id', (req, res) =&gt; {\n  tasks = tasks.filter(task =&gt; task.id !== parseInt(req.params.id));\n  res.json({ message: 'Task deleted' });\n});\n\napp.listen(3000, () =&gt; {\n  console.log('Server running on port 3000');\n});\nEn el código anterior estamos creando una API con las siguientes rutas:\n\nGET /tasks: Obtiene la lista de tareas.\nPOST /tasks: Agrega una tarea.\nPUT /tasks/:id: Edita una tarea.\nDELETE /tasks/:id: Elimina una tarea.\n\nPara ejecutar la API, ejecuta el siguiente comando:\nnode server.js",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>27</span>  <span class='chapter-title'>Crud Básico con React y Axios</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/9_crud_react.html#crear-el-proyecto-de-react",
    "href": "unidades/unidad6/9_crud_react.html#crear-el-proyecto-de-react",
    "title": "Crud Básico con React y Axios",
    "section": "Crear el proyecto de React",
    "text": "Crear el proyecto de React\nPara ello nos dirijimos al directorio frontend.\nPara crear el proyecto vamos a usar vite. Si no lo tienes instalado, puedes instalarlo con el siguiente comando:\nnpm create vite@latest .\nLuego, vamos a instalar axios para hacer las peticiones a la API:\nnpm install axios",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>27</span>  <span class='chapter-title'>Crud Básico con React y Axios</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/9_crud_react.html#crear-la-lista-de-tareas",
    "href": "unidades/unidad6/9_crud_react.html#crear-la-lista-de-tareas",
    "title": "Crud Básico con React y Axios",
    "section": "Crear la lista de tareas",
    "text": "Crear la lista de tareas\nCreamos el directorio src/components y dentro de él, creamos un archivo llamado TaskList.js con el siguiente contenido:\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst TaskList = () =&gt; {\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n\n  useEffect(() =&gt; {\n    axios.get('http://localhost:3000/tasks')\n      .then(response =&gt; setTasks(response.data));\n  }, []);\n\n  const addTask = () =&gt; {\n    axios.post('http://localhost:3000/tasks', { title })\n      .then(response =&gt; setTasks([...tasks, response.data]));\n  };\n\n  const editTask = (id, title) =&gt; {\n    axios.put(`http://localhost:3000/tasks/${id}`, { title })\n      .then(response =&gt; {\n        const newTasks = tasks.map(task =&gt; {\n          if (task.id === id) {\n            task.title = title;\n          }\n          return task;\n        });\n        setTasks(newTasks);\n      });\n  };\n\n  const deleteTask = id =&gt; {\n    axios.delete(`http://localhost:3000/tasks/${id}`)\n      .then(() =&gt; setTasks(tasks.filter(task =&gt; task.id !== id)));\n  };\n\n  return (\n    &lt;div&gt;\n      &lt;input type=\"text\" value={title} onChange={e =&gt; setTitle(e.target.value)} /&gt;\n      &lt;button onClick={addTask}&gt;Add Task&lt;/button&gt;\n      &lt;ul&gt;\n        {tasks.map(task =&gt; (\n          &lt;li key={task.id}&gt;\n            &lt;input type=\"text\" value={task.title} onChange={e =&gt; editTask(task.id, e.target.value)} /&gt;\n            &lt;button onClick={() =&gt; deleteTask(task.id)}&gt;Delete&lt;/button&gt;\n          &lt;/li&gt;\n        ))}\n      &lt;/ul&gt;\n    &lt;/div&gt;\n  );\n};\n\nexport default TaskList;\nEn el código anterior estamos creando un componente llamado TaskList que muestra una lista de tareas. En el estado del componente tenemos un array de tareas y un string para el título de la tarea. En el useEffect hacemos una petición a la API para obtener la lista de tareas. En el método addTask agregamos una tarea a la lista. En el método editTask editamos una tarea de la lista. En el método deleteTask eliminamos una tarea de la lista.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>27</span>  <span class='chapter-title'>Crud Básico con React y Axios</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/9_crud_react.html#mostrar-la-lista-de-tareas",
    "href": "unidades/unidad6/9_crud_react.html#mostrar-la-lista-de-tareas",
    "title": "Crud Básico con React y Axios",
    "section": "Mostrar la lista de tareas",
    "text": "Mostrar la lista de tareas\nVamos a importar el componente TaskList en el archivo App.js y mostrarlo en la aplicación:\nimport React from 'react';\nimport TaskList from './components/TaskList';\n\nconst App = () =&gt; {\n  return (\n    &lt;div&gt;\n      &lt;h1&gt;Task List&lt;/h1&gt;\n      &lt;TaskList /&gt;\n    &lt;/div&gt;\n  );\n};\n\nexport default App;",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>27</span>  <span class='chapter-title'>Crud Básico con React y Axios</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/9_crud_react.html#probar-la-aplicación",
    "href": "unidades/unidad6/9_crud_react.html#probar-la-aplicación",
    "title": "Crud Básico con React y Axios",
    "section": "Probar la aplicación",
    "text": "Probar la aplicación\n\n\n\nPara probar la aplicación, ejecuta el siguiente comando:\nnpm run dev\nAbre tu navegador en la dirección http://localhost:3000 y deberías ver la lista de tareas. Puedes agregar, editar y eliminar tareas.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>27</span>  <span class='chapter-title'>Crud Básico con React y Axios</span>"
    ]
  },
  {
    "objectID": "unidades/unidad6/9_crud_react.html#conclusiones",
    "href": "unidades/unidad6/9_crud_react.html#conclusiones",
    "title": "Crud Básico con React y Axios",
    "section": "Conclusiones",
    "text": "Conclusiones\nEn esta sección aprendimos a crear un CRUD básico con React y Axios. Aprendimos a hacer peticiones a una API con axios y a mostrar los datos en la aplicación. También aprendimos a agregar, editar y eliminar datos de la API.",
    "crumbs": [
      "Unidad 6: Frontend",
      "<span class='chapter-number'>27</span>  <span class='chapter-title'>Crud Básico con React y Axios</span>"
    ]
  },
  {
    "objectID": "unidades/ejercicios/ejercicios_git_github-000.html",
    "href": "unidades/ejercicios/ejercicios_git_github-000.html",
    "title": "Ejercicios de Git y Github",
    "section": "",
    "text": "Ejercicio 1\n\nCrear un repositorio en Github\nClonar el repositorio en tu computadora\nCrear un archivo de texto con tu nombre y subirlo al repositorio\nHacer un commit con el mensaje “Agrego mi nombre”\nHacer un push al repositorio\n\n\n\nRespuesta:\n\ngit clone [url del repositorio]\ncd [nombre del repositorio]\necho \"Mi nombre es: [Tu nombre]\" &gt; nombre.txt\ngit add nombre.txt\ngit commit -m \"Agrego mi nombre\"\ngit push origin master\n\n\n\nEjercicio 2\n\nCrear un repositorio en Github\nClonar el repositorio en tu computadora\nCrear un archivo de python que imprima tu nombre\nHacer un commit con el mensaje “Agrego archivo de python”\nHacer un push al repositorio\n\n\n\nRespuesta:\n\ngit clone [url del repositorio]\ncd [nombre del repositorio]\necho \"print('Mi nombre es: [Tu nombre]')\" &gt; nombre.py\ngit add nombre.py\ngit commit -m \"Agrego archivo de python\"\ngit push origin master\n\n\n\nEjercicio 3\n\nCrear un repositorio en Github\nClonar el repositorio en tu computadora\nCrear un archivo de python que imprima un saludo de bienvenida\nHacer un commit con el mensaje “Agrego saludo de bienvenida”\nHacer un push al repositorio\n\n\n\nRespuesta:\n\ngit clone [url del repositorio]\ncd [nombre del repositorio]\necho \"print('Hola, bienvenido')\" &gt; saludo.py\ngit add saludo.py\ngit commit -m \"Agrego saludo de bienvenida\"\ngit push origin master\n\n\n\nEjercicio 4\n\nCrear un repositorio en Github\nClonar el repositorio en tu computadora\nCrear un archivo de python que imprima un saludo de despedida\nHacer un commit con el mensaje “Agrego saludo de despedida”\nHacer un push al repositorio\n\n\n\nRespuesta:\n\ngit clone [url del repositorio]\ncd [nombre del repositorio]\necho \"print('Adios, hasta luego')\" &gt; despedida.py\ngit add despedida.py\ngit commit -m \"Agrego saludo de despedida\"\ngit push origin master\n\n\n\nEjercicio 5\n\nCrear un repositorio en Github\nClonar el repositorio en tu computadora\nCrear un archivo de python que imprima un saludo de bienvenida y un saludo de despedida\nHacer un commit con el mensaje “Agrego saludo de bienvenida y despedida”\nHacer un push al repositorio\n\n\n\nRespuesta:\n\ngit clone [url del repositorio]\ncd [nombre del repositorio]\necho \"print('Hola, bienvenido')\" &gt; saludo.py\necho \"print('Adios, hasta luego')\" &gt; despedida.py\ngit add saludo.py despedida.py\ngit commit -m \"Agrego saludo de bienvenida y despedida\"\ngit push origin master",
    "crumbs": [
      "Ejercicios",
      "<span class='chapter-number'>28</span>  <span class='chapter-title'>Ejercicios de Git y Github</span>"
    ]
  },
  {
    "objectID": "unidades/ejercicios/ejercicios_python-001.html",
    "href": "unidades/ejercicios/ejercicios_python-001.html",
    "title": "Ejercicios Python - Nivel 1",
    "section": "",
    "text": "Ejercicio 1",
    "crumbs": [
      "Ejercicios",
      "<span class='chapter-number'>29</span>  <span class='chapter-title'>Ejercicios Python - Nivel 1</span>"
    ]
  },
  {
    "objectID": "unidades/ejercicios/ejercicios_python-001.html#ejercicio-1",
    "href": "unidades/ejercicios/ejercicios_python-001.html#ejercicio-1",
    "title": "Ejercicios Python - Nivel 1",
    "section": "",
    "text": "Crear un programa que muestre por pantalla la cadena “Hola Mundo!”.\n\n\n\nSolución\n\nprint(\"Hola Mundo!\")",
    "crumbs": [
      "Ejercicios",
      "<span class='chapter-number'>29</span>  <span class='chapter-title'>Ejercicios Python - Nivel 1</span>"
    ]
  },
  {
    "objectID": "unidades/ejercicios/ejercicios_python-001.html#ejercicio-2",
    "href": "unidades/ejercicios/ejercicios_python-001.html#ejercicio-2",
    "title": "Ejercicios Python - Nivel 1",
    "section": "Ejercicio 2",
    "text": "Ejercicio 2\n\nCrear un programa que muestre por pantalla tu nombre.\n\n\n\nSolución\n\nprint(\"Tu nombre\")",
    "crumbs": [
      "Ejercicios",
      "<span class='chapter-number'>29</span>  <span class='chapter-title'>Ejercicios Python - Nivel 1</span>"
    ]
  },
  {
    "objectID": "unidades/ejercicios/ejercicios_python-001.html#ejercicio-3",
    "href": "unidades/ejercicios/ejercicios_python-001.html#ejercicio-3",
    "title": "Ejercicios Python - Nivel 1",
    "section": "Ejercicio 3",
    "text": "Ejercicio 3\n\nCrear un programa que pida al usuario que introduzca su nombre y muestre por pantalla la cadena “Hola”, seguido del nombre y un signo de exclamación.\n\n\n\nSolución\n\nnombre = input(\"Introduce tu nombre: \")\nprint(\"Hola\", nombre, \"!\")\nOtra forma de hacerlo:\nnombre = input(\"Introduce tu nombre: \")\nprint(f\"Hola {nombre}!\")",
    "crumbs": [
      "Ejercicios",
      "<span class='chapter-number'>29</span>  <span class='chapter-title'>Ejercicios Python - Nivel 1</span>"
    ]
  },
  {
    "objectID": "unidades/ejercicios/ejercicios_python-001.html#ejercicio-4",
    "href": "unidades/ejercicios/ejercicios_python-001.html#ejercicio-4",
    "title": "Ejercicios Python - Nivel 1",
    "section": "Ejercicio 4",
    "text": "Ejercicio 4\n\nCrear un programa que pregunte al usuario por el número de horas trabajadas y el coste por hora. Después debe mostrar por pantalla la paga que le corresponde.\n\n\n\nSolución\n\nhoras = float(input(\"Introduce tus horas de trabajo: \"))\ncoste = float(input(\"Introduce lo que cobras por hora: \"))\npaga = horas * coste\nprint(\"Tu paga es de\", paga)",
    "crumbs": [
      "Ejercicios",
      "<span class='chapter-number'>29</span>  <span class='chapter-title'>Ejercicios Python - Nivel 1</span>"
    ]
  },
  {
    "objectID": "unidades/ejercicios/ejercicios_python-001.html#ejercicio-5",
    "href": "unidades/ejercicios/ejercicios_python-001.html#ejercicio-5",
    "title": "Ejercicios Python - Nivel 1",
    "section": "Ejercicio 5",
    "text": "Ejercicio 5\n\nCrear un programa que pida al usuario una cantidad de dolares, una tasa de interés y un número de años. Mostrar por pantalla en cuanto se habrá convertido el capital inicial transcurridos esos años si cada año se aplica la tasa de interés introducida.\nFormula del interés compuesto: Cn = C * (1 + x/100) ^ n\n\n\n\nSolución\n\ncantidad = float(input(\"¿Cantidad a invertir? \"))\ninteres = float(input(\"¿Interés porcentual anual? \"))\naños = int(input(\"¿Años?\"))\nprint(\"Capital final: \", round(cantidad * (interes / 100 + 1) ** años, 2))",
    "crumbs": [
      "Ejercicios",
      "<span class='chapter-number'>29</span>  <span class='chapter-title'>Ejercicios Python - Nivel 1</span>"
    ]
  },
  {
    "objectID": "unidades/ejercicios/ejercicios_python-002.html",
    "href": "unidades/ejercicios/ejercicios_python-002.html",
    "title": "Ejercicios Python - Nivel 2",
    "section": "",
    "text": "Ejercicio 1",
    "crumbs": [
      "Ejercicios",
      "<span class='chapter-number'>30</span>  <span class='chapter-title'>Ejercicios Python - Nivel 2</span>"
    ]
  },
  {
    "objectID": "unidades/ejercicios/ejercicios_python-002.html#ejercicio-1",
    "href": "unidades/ejercicios/ejercicios_python-002.html#ejercicio-1",
    "title": "Ejercicios Python - Nivel 2",
    "section": "",
    "text": "Crear una función que reciba una lista de números y devuelva su media aritmética.\nEjemplo: media_aritmetica([1, 2, 3, 4, 5]) -&gt; 3.0\n\n\n\nPosible solución\n\ndef media_aritmetica(lista):\n    return sum(lista) / len(lista)",
    "crumbs": [
      "Ejercicios",
      "<span class='chapter-number'>30</span>  <span class='chapter-title'>Ejercicios Python - Nivel 2</span>"
    ]
  },
  {
    "objectID": "unidades/ejercicios/ejercicios_python-002.html#ejercicio-2",
    "href": "unidades/ejercicios/ejercicios_python-002.html#ejercicio-2",
    "title": "Ejercicios Python - Nivel 2",
    "section": "Ejercicio 2",
    "text": "Ejercicio 2\n\nCrear una función que reciba una lista de números y devuelva su mediana.\nEjemplo: mediana([1, 2, 3, 4, 5]) -&gt; 3.0\n\n\n\nPosible solución\n\ndef mediana(lista):\n    lista_ordenada = sorted(lista)\n    n = len(lista_ordenada)\n    if n % 2 == 0:\n        return (lista_ordenada[n // 2 - 1] + lista_ordenada[n // 2]) / 2\n    else:\n        return lista_ordenada[n // 2]",
    "crumbs": [
      "Ejercicios",
      "<span class='chapter-number'>30</span>  <span class='chapter-title'>Ejercicios Python - Nivel 2</span>"
    ]
  },
  {
    "objectID": "unidades/ejercicios/ejercicios_python-002.html#ejercicio-3",
    "href": "unidades/ejercicios/ejercicios_python-002.html#ejercicio-3",
    "title": "Ejercicios Python - Nivel 2",
    "section": "Ejercicio 3",
    "text": "Ejercicio 3\n\nCrear una función que reciba una lista de números y devuelva su moda.\nSi hay más de una moda, devolver una lista con todas las modas.\nSi no hay moda, devolver una lista vacía.\nLa moda es el número que más veces se repite en una lista.\nSi todos los números se repiten el mismo número de veces, no hay moda.\nEjemplo: moda([1, 2, 3, 2, 3, 4]) -&gt; [2, 3]\n\n\n\nPosible solución\n\ndef moda(lista):\n    frecuencias = {}\n    for numero in lista:\n        if numero in frecuencias:\n            frecuencias[numero] += 1\n        else:\n            frecuencias[numero] = 1\n    max_frecuencia = max(frecuencias.values())\n    modas = [numero for numero, frecuencia in frecuencias.items() if frecuencia == max_frecuencia]\n    return modas if len(modas) &gt; 1 else modas[0] if modas else []",
    "crumbs": [
      "Ejercicios",
      "<span class='chapter-number'>30</span>  <span class='chapter-title'>Ejercicios Python - Nivel 2</span>"
    ]
  },
  {
    "objectID": "unidades/ejercicios/ejercicios_python-002.html#ejercicio-4",
    "href": "unidades/ejercicios/ejercicios_python-002.html#ejercicio-4",
    "title": "Ejercicios Python - Nivel 2",
    "section": "Ejercicio 4",
    "text": "Ejercicio 4\n\nCrear una función que reciba una lista de números y devuelva su desviación típica.\nLa desviación típica es la raíz cuadrada de la varianza.\nLa varianza es la media de los cuadrados de las diferencias entre cada número y la media aritmética.\nEjemplo: desviacion_tipica([1, 2, 3, 4, 5]) -&gt; 1.4142135623730951\n\n\n\nPosible solución\n\ndef desviacion_tipica(lista):\n    media = sum(lista) / len(lista)\n    varianza = sum((numero - media) ** 2 for numero in lista) / len(lista)\n    return varianza ** 0.5",
    "crumbs": [
      "Ejercicios",
      "<span class='chapter-number'>30</span>  <span class='chapter-title'>Ejercicios Python - Nivel 2</span>"
    ]
  },
  {
    "objectID": "unidades/ejercicios/ejercicios_python-002.html#ejercicio-5",
    "href": "unidades/ejercicios/ejercicios_python-002.html#ejercicio-5",
    "title": "Ejercicios Python - Nivel 2",
    "section": "Ejercicio 5",
    "text": "Ejercicio 5\n\nCrear una función que reciba una lista de números y devuelva su coeficiente de variación.\nEl coeficiente de variación es la desviación típica dividida por la media aritmética.\nEjemplo: coeficiente_variacion([1, 2, 3, 4, 5]) -&gt; 0.4472135954999579\n\n\n\nPosible solución\n\ndef coeficiente_variacion(lista):\n    media = sum(lista) / len(lista)\n    desviacion_tipica = sum((numero - media) ** 2 for numero in lista) / len(lista) ** 0.5\n    return desviacion_tipica / media",
    "crumbs": [
      "Ejercicios",
      "<span class='chapter-number'>30</span>  <span class='chapter-title'>Ejercicios Python - Nivel 2</span>"
    ]
  },
  {
    "objectID": "unidades/ejercicios/ejercicios_python-003.html",
    "href": "unidades/ejercicios/ejercicios_python-003.html",
    "title": "Ejercicios Python - Nivel 3",
    "section": "",
    "text": "Ejercicio 1:",
    "crumbs": [
      "Ejercicios",
      "<span class='chapter-number'>31</span>  <span class='chapter-title'>Ejercicios Python - Nivel 3</span>"
    ]
  },
  {
    "objectID": "unidades/ejercicios/ejercicios_python-003.html#ejercicio-1",
    "href": "unidades/ejercicios/ejercicios_python-003.html#ejercicio-1",
    "title": "Ejercicios Python - Nivel 3",
    "section": "",
    "text": "Crear una lista vacía y agregar elementos a la misma hasta que el usuario ingrese “fin”.\n\n\n\nPosible solución\n\nlista = []\nwhile True:\n    elemento = input(\"Ingrese un elemento: \")\n    if elemento == \"fin\":\n        break\n    lista.append(elemento)\nprint(lista)",
    "crumbs": [
      "Ejercicios",
      "<span class='chapter-number'>31</span>  <span class='chapter-title'>Ejercicios Python - Nivel 3</span>"
    ]
  },
  {
    "objectID": "unidades/ejercicios/ejercicios_python-003.html#ejercicio-2",
    "href": "unidades/ejercicios/ejercicios_python-003.html#ejercicio-2",
    "title": "Ejercicios Python - Nivel 3",
    "section": "Ejercicio 2:",
    "text": "Ejercicio 2:\n\nCrear una lista con los números del 1 al 10 y mostrar los números pares.\n\n\n\nPosible solución\n\nlista = list(range(1, 11))\nfor numero in lista:\n    if numero % 2 == 0:\n        print(numero)",
    "crumbs": [
      "Ejercicios",
      "<span class='chapter-number'>31</span>  <span class='chapter-title'>Ejercicios Python - Nivel 3</span>"
    ]
  },
  {
    "objectID": "unidades/ejercicios/ejercicios_python-003.html#ejercicio-3",
    "href": "unidades/ejercicios/ejercicios_python-003.html#ejercicio-3",
    "title": "Ejercicios Python - Nivel 3",
    "section": "Ejercicio 3:",
    "text": "Ejercicio 3:\n\nCrear una lista con los números del 1 al 10 y mostrar los números impares.\n\n\n\nPosible solución\n\nlista = list(range(1, 11))\nfor numero in lista:\n    if numero % 2 != 0:\n        print(numero)",
    "crumbs": [
      "Ejercicios",
      "<span class='chapter-number'>31</span>  <span class='chapter-title'>Ejercicios Python - Nivel 3</span>"
    ]
  },
  {
    "objectID": "unidades/ejercicios/ejercicios_python-003.html#ejercicio-4",
    "href": "unidades/ejercicios/ejercicios_python-003.html#ejercicio-4",
    "title": "Ejercicios Python - Nivel 3",
    "section": "Ejercicio 4:",
    "text": "Ejercicio 4:\n\nCrear una lista de nombres de estudiantes y mostrar aquellos cuyos nombres comiencen con la letra “A”.\n\n\n\nPosible solución\n\nnombres = [\"Ana\", \"Juan\", \"Pedro\", \"Andrea\", \"Lucía\", \"Antonio\"]\nfor nombre in nombres:\n    if nombre[0].lower() == \"a\":\n        print(nombre)",
    "crumbs": [
      "Ejercicios",
      "<span class='chapter-number'>31</span>  <span class='chapter-title'>Ejercicios Python - Nivel 3</span>"
    ]
  },
  {
    "objectID": "unidades/ejercicios/ejercicios_python-003.html#ejercicio-5",
    "href": "unidades/ejercicios/ejercicios_python-003.html#ejercicio-5",
    "title": "Ejercicios Python - Nivel 3",
    "section": "Ejercicio 5:",
    "text": "Ejercicio 5:\n\nCrear una lista de números y mostrar aquellos que sean mayores a 100.\n\n\n\nPosible solución\n\nnumeros = [10, 20, 150, 200, 300, 400, 500]\nfor numero in numeros:\n    if numero &gt; 100:\n        print(numero)",
    "crumbs": [
      "Ejercicios",
      "<span class='chapter-number'>31</span>  <span class='chapter-title'>Ejercicios Python - Nivel 3</span>"
    ]
  },
  {
    "objectID": "unidades/ejercicios/ejercicios_python-004.html",
    "href": "unidades/ejercicios/ejercicios_python-004.html",
    "title": "Ejercicios Python - Nivel 4",
    "section": "",
    "text": "Ejercicio 1:",
    "crumbs": [
      "Ejercicios",
      "<span class='chapter-number'>32</span>  <span class='chapter-title'>Ejercicios Python - Nivel 4</span>"
    ]
  },
  {
    "objectID": "unidades/ejercicios/ejercicios_python-004.html#ejercicio-1",
    "href": "unidades/ejercicios/ejercicios_python-004.html#ejercicio-1",
    "title": "Ejercicios Python - Nivel 4",
    "section": "",
    "text": "Crear un conjunto vacío y agregar elementos al mismo hasta que el usuario ingrese “fin”.\n\n\n\nPosible solución\n\nconjunto = set()\nwhile True:\n    elemento = input(\"Ingrese un elemento o 'fin' para terminar: \")\n    if elemento == \"fin\":\n        break\n    conjunto.add(elemento)\nprint(conjunto)",
    "crumbs": [
      "Ejercicios",
      "<span class='chapter-number'>32</span>  <span class='chapter-title'>Ejercicios Python - Nivel 4</span>"
    ]
  },
  {
    "objectID": "unidades/ejercicios/ejercicios_python-004.html#ejercicio-2",
    "href": "unidades/ejercicios/ejercicios_python-004.html#ejercicio-2",
    "title": "Ejercicios Python - Nivel 4",
    "section": "Ejercicio 2:",
    "text": "Ejercicio 2:\n\nCrear un diccionario vacío y agregar elementos al mismo hasta que el usuario ingrese “fin”.\nCada elemento debe ser una tupla con dos elementos, el primero será la clave y el segundo el valor.\nSi el usuario ingresa una clave que ya existe, se debe mostrar un mensaje de error y no agregar el elemento.\n\n\n\nPosible solución\n\ndiccionario = dict()\nwhile True:\n    clave = input(\"Ingrese una clave o 'fin' para terminar: \")\n    if clave == \"fin\":\n        break\n    if clave in diccionario:\n        print(\"La clave ya existe\")\n        continue\n    valor = input(\"Ingrese un valor: \")\n    diccionario[clave] = valor\nprint(diccionario)",
    "crumbs": [
      "Ejercicios",
      "<span class='chapter-number'>32</span>  <span class='chapter-title'>Ejercicios Python - Nivel 4</span>"
    ]
  },
  {
    "objectID": "unidades/ejercicios/ejercicios_python-004.html#ejercicio-3",
    "href": "unidades/ejercicios/ejercicios_python-004.html#ejercicio-3",
    "title": "Ejercicios Python - Nivel 4",
    "section": "Ejercicio 3:",
    "text": "Ejercicio 3:\n\nCrear un diccionario con los nombres de los meses como claves y la cantidad de días que tienen como valor.\nMostrar los meses que tienen 31 días.\nMostrar los meses que tienen 30 días.\nMostrar los meses que tienen 28 días.\n\n\n\nPosible solución\n\nmeses = {\n    \"enero\": 31,\n    \"febrero\": 28,\n    \"marzo\": 31,\n    \"abril\": 30,\n    \"mayo\": 31,\n    \"junio\": 30,\n    \"julio\": 31,\n    \"agosto\": 31,\n    \"septiembre\": 30,\n    \"octubre\": 31,\n    \"noviembre\": 30,\n    \"diciembre\": 31\n}\n\nmeses_31 = [mes for mes, dias in meses.items() if dias == 31]\nmeses_30 = [mes for mes, dias in meses.items() if dias == 30]\nmeses_28 = [mes for mes, dias in meses.items() if dias == 28]\n\nprint(\"Meses con 31 días:\", meses_31)\nprint(\"Meses con 30 días:\", meses_30)\nprint(\"Meses con 28 días:\", meses_28)",
    "crumbs": [
      "Ejercicios",
      "<span class='chapter-number'>32</span>  <span class='chapter-title'>Ejercicios Python - Nivel 4</span>"
    ]
  },
  {
    "objectID": "unidades/ejercicios/ejercicios_python-004.html#ejercicio-4",
    "href": "unidades/ejercicios/ejercicios_python-004.html#ejercicio-4",
    "title": "Ejercicios Python - Nivel 4",
    "section": "Ejercicio 4:",
    "text": "Ejercicio 4:\n\nCrear un diccionario con los nombres de los meses como claves y la cantidad de paises de sur america mostrando mediante el pais la capital.\nMostrar la capital de Argentina.\nMostrar la capital de Brasil.\nMostrar la capital de Ecuador.\n\n\n\nPosible solución\n\npaises = {\n    \"Argentina\": \"Buenos Aires\",\n    \"Bolivia\": \"La Paz\",\n    \"Brasil\": \"Brasilia\",\n    \"Chile\": \"Santiago\",\n    \"Colombia\": \"Bogotá\",\n    \"Ecuador\": \"Quito\",\n    \"Guyana\": \"Georgetown\",\n    \"Paraguay\": \"Asunción\",\n    \"Perú\": \"Lima\",\n    \"Surinam\": \"Paramaribo\",\n    \"Uruguay\": \"Montevideo\",\n    \"Venezuela\": \"Caracas\"\n}\n\nprint(\"La capital de Argentina es\", paises[\"Argentina\"])\nprint(\"La capital de Brasil es\", paises[\"Brasil\"])\nprint(\"La capital de Ecuador es\", paises[\"Ecuador\"])",
    "crumbs": [
      "Ejercicios",
      "<span class='chapter-number'>32</span>  <span class='chapter-title'>Ejercicios Python - Nivel 4</span>"
    ]
  },
  {
    "objectID": "unidades/ejercicios/ejercicios_python-004.html#ejercicio-5",
    "href": "unidades/ejercicios/ejercicios_python-004.html#ejercicio-5",
    "title": "Ejercicios Python - Nivel 4",
    "section": "Ejercicio 5:",
    "text": "Ejercicio 5:\n\nCrear un diccinario con los nombres de los presidentes de Ecuador y la fecha en la que asumieron el cargo.\nMostrar la fecha en la que asumió el presidente Eloy Alfaro.\nMostrar la fecha en la que asumió el presidente Garcia Moreno.\n\n\n\nPosible solución\n\npresidentes = {\n\n    \"Gustavo Noboa\": \"23 de noviembre de 2023\",\n    \"Guillermo Lasso\": \"24 de mayo de 2021\",\n    \"Lenín Moreno\": \"24 de mayo de 2017\",\n    \"Rafael Correa\": \"15 de enero de 2007\",\n    \"Jamil Mahuad\": \"10 de agosto de 1998\",\n    \"Abdalá Bucaram\": \"10 de agosto de 1996\",\n    \"Sixto Durán Ballén\": \"10 de agosto de 1992\",\n    \"Rodrigo Borja\": \"10 de agosto de 1988\",\n    \"León Febres Cordero\": \"10 de agosto de 1984\",\n    \"Osvaldo Hurtado\": \"10 de agosto de 1981\",\n    \"Jaime Roldós\": \"10 de agosto de 1979\",\n    \"Guillermo Rodríguez\": \"24 de mayo de 1972\",\n    \"José María Velasco Ibarra\": \"1 de septiembre de 1968\",\n    \"Otto Arosemena\": \"16 de febrero de 1966\",\n    \"Carlos Julio Arosemena\": \"1 de septiembre de 1961\",\n    \"Camilo Ponce Enríquez\": \"1 de septiembre de 1956\",\n    \"José María Velasco Ibarra\": \"1 de septiembre de 1952\",\n    \"Galalza Castro\": \"1 de septiembre de 1947\",\n    \"Carlos Arroyo del Río\": \"1 de septiembre de 1940\",\n    \"Andrés Córdova\": \"1 de septiembre de 1938\",\n    \"Alberto Enríquez Gallo\": \"1 de septiembre de 1937\",\n    \"Federico Páez\": \"1 de septiembre de 1935\",\n    \"José María Velasco Ibarra\": \"1 de septiembre de 1934\",\n    \"Abelardo Montalvo\": \"1 de septiembre de 1933\",\n    \"Neptalí Bonifaz\": \"1 de septiembre de 1931\",\n    \"Isidro Ayora\": \"1 de septiembre de 1926\",\n    \"Gonzalo Córdova\": \"1 de septiembre de 1924\",\n    \"José Luis Tamayo\": \"1 de septiembre de 1920\",\n    \"Leónidas Plaza\": \"1 de septiembre de 1912\",\n    \"Emilio Estrada\": \"1 de septiembre de 1911\",\n    \"Carlos Freile Zaldumbide\": \"1 de septiembre de 1907\",\n    \"Eloy Alfaro\": \"1 de septiembre de 1906\",\n    \"Leónidas Plaza\": \"1 de septiembre de 1901\",\n    \"Eloy Alfaro\": \"1 de septiembre de 1897\",\n    \"Antonio Flores Jijón\": \"1 de septiembre de 1888\",\n    \"José Plácido Caamaño\": \"1 de septiembre de 1883\",\n    \"Pedro José de Arteta\": \"1 de septiembre de 1882\",\n    \"Francisco Xavier León\": \"1 de septiembre de 1878\",\n    \"Antonio Borrero\": \"1 de septiembre de 1875\",\n    \"Gabriel García Moreno\": \"1 de septiembre de 1861\",\n    \"Francisco Robles\": \"1 de septiembre de 1856\",\n    \"Diego Noboa\": \"1 de septiembre de 1850\",\n    \"José Joaquín de Olmedo\": \"1 de septiembre de 1845\",\n    \"Juan José Flores\": \"1 de septiembre de 1830\",\n}\n\nprint(\"Eloy Alfaro asumió el\", presidentes[\"Eloy Alfaro\"])\nprint(\"García Moreno asumió el\", presidentes[\"Gabriel García Moreno\"])",
    "crumbs": [
      "Ejercicios",
      "<span class='chapter-number'>32</span>  <span class='chapter-title'>Ejercicios Python - Nivel 4</span>"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Acerca de mi",
    "section": "",
    "text": "¡Hola! Soy Diego Saavedra, un experto en desarrollo avanzado de software e investigación. Mi amplia experiencia abarca diversas tecnologías, incluyendo Python (Django, Flask, Fast API) y JavaScript (Express, Next, React, Nestjs), así como también tengo conocimientos sólidos en bases de datos, arquitecturas de software y liderazgo ágil.\nMi pasión por la innovación, el desarrollo y la educación me ha llevado a destacarme como un profesional versátil e invaluable. Estoy constantemente listo para enfrentar desafíos técnicos y liderar proyectos de vanguardia.\nMi formación académica incluye el ser estudiante de Doctorado centrado en la inteligencia artificial, estoy enfocando mi investigación en la detección de TDA+H y Asperger mediante Visión Artificial a traves de algoritmos de Inteligencia Artificial. Además, poseo una Maestría en Ciencias de la Computación, con un enfoque en el Deep Learning (Convolutional Neural Network) y la Atención.\nCon esta sólida base académica y experiencia profesional, estoy preparado para aportar soluciones innovadoras y liderar equipos hacia el éxito en cualquier proyecto tecnológico que se me presente.\nAdemás, tengo experiencia en el desarrollo móvil utilizando Flutter y en la implementación de soluciones backend utilizando servicios Backend as a Service (BaaS) como Firebase y Supabase.\nEn el ámbito de la educación, he sido docente de programación en institutos y universidades, actualmente soy parte del Departamento de Ciencias de la Computación en la Universidad de las Fuerzas Armadas ESPE, donde he impartido asignaturas de desarrollo de Software Web con tecnologías como JavaScript, Java y C# asi como sus respectivos frameworks.\nMi experiencia en el desarrollo de software y la investigación me ha permitido adquirir habilidades de liderazgo, trabajo en equipo y comunicación efectiva. Estoy seguro de que mi experiencia y habilidades serán de gran valor para cualquier proyecto tecnológico que se me presente.\nEn este curso aprenderás a desarrollar aplicaciones web con Python y Django, una de las tecnologías más populares y poderosas para el desarrollo de aplicaciones web. A lo largo del curso, aprenderás a crear aplicaciones web desde cero, utilizando Django y Python, y a implementar funcionalidades avanzadas como integración con APIs externas y mucho más.\nTambien veremos tecnologías como Git, Github, Docker, Python, Django, Django Rest Framework, Html5, Css3, JavaScript, Nodejs, Npm y React.\n\n\n¡Estoy emocionado de compartir contigo mi conocimiento y experiencia en el desarrollo de aplicaciones web con Python y Django!"
  },
  {
    "objectID": "license.html",
    "href": "license.html",
    "title": "Licencia",
    "section": "",
    "text": "Uso Permitido\nPuedes utilizar el contenido de este curso con fines educativos y personales. Puedes modificar los ejemplos y el código proporcionado para tus propias necesidades de aprendizaje."
  },
  {
    "objectID": "license.html#restricciones",
    "href": "license.html#restricciones",
    "title": "Licencia",
    "section": "Restricciones",
    "text": "Restricciones\nNo tienes permitido redistribuir, vender o utilizar el contenido de este curso para fines comerciales sin el permiso explícito de [Nombre de la Compañía]. Además, no tienes permitido copiar o duplicar el contenido del curso y presentarlo como propio."
  },
  {
    "objectID": "license.html#atribución",
    "href": "license.html#atribución",
    "title": "Licencia",
    "section": "Atribución",
    "text": "Atribución\nSi compartes los ejemplos, los fragmentos de código o el contenido de este curso en línea, te pedimos que proporciones la atribución adecuada a [Nombre de la Compañía]."
  },
  {
    "objectID": "license.html#cambios-en-la-licencia",
    "href": "license.html#cambios-en-la-licencia",
    "title": "Licencia",
    "section": "Cambios en la Licencia",
    "text": "Cambios en la Licencia\n[Nombre de la Compañía] se reserva el derecho de modificar los términos de esta licencia en cualquier momento. Cualquier cambio se reflejará en esta página.\nGracias por respetar nuestros derechos de autor y por tu comprensión."
  }
]